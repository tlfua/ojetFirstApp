{"version":3,"file":"CollapsibleWebElement.js","sourceRoot":"","sources":["CollapsibleWebElement.ts"],"names":[],"mappings":";;;AAAA,yDAA2D;AAC3D,yEAAwE;AAExE;;;;GAIG;AACH,MAAa,qBAAsB,SAAQ,qDAAyB;IAGlE;;;OAGG;IACH,KAAK,CAAC,UAAU;QACd,IAAI,MAAM,IAAI,CAAC,UAAU,EAAE,EAAE;YAC3B,OAAO,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;SAC/C;IACH,CAAC;IACD;;;OAGG;IACH,KAAK,CAAC,QAAQ;QACZ,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;YAC9B,OAAO,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;SAC/C;IACH,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW;YAClC,+CAA+C;YAC/C,uBAAE,CAAC,KAAK,CACN,8GAA8G,CAC/G,CACF,CAAC;SACH;QACD,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAEO,UAAU;QAChB,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,CAAC,CAAC;IAC/C,CAAC;CACF;AArCD,sDAqCC","sourcesContent":["import { By, WebElementPromise } from 'selenium-webdriver';\nimport { CollapsibleWebElementBase } from './CollapsibleWebElementBase';\n\n/**\n * The component WebElement for [oj-c-collapsible](../../../oj-c/docs/oj.Collapsible.html).\n * Do not instantiate this class directly, instead, use\n * [findCollapsible](../modules.html#findCollapsible).\n */\nexport class CollapsibleWebElement extends CollapsibleWebElementBase {\n  private toggleButton: WebElementPromise | undefined;\n\n  /**\n   * Collapse the content. If already collapsed, this method will do nothing.\n   * @returns Promise<void>\n   */\n  async doCollapse() {\n    if (await this.isExpanded()) {\n      return (await this.getToggleButton()).click();\n    }\n  }\n  /**\n   * Expand the content. If already expanded, this method will do nothing.\n   * @returns Promise<void>\n   */\n  async doExpand() {\n    if (!(await this.isExpanded())) {\n      return (await this.getToggleButton()).click();\n    }\n  }\n\n  private getToggleButton(): WebElementPromise {\n    if (!this.toggleButton) {\n      this.toggleButton = this.findElement(\n        // Need to use Xpath to partial-match header Id\n        By.xpath(\n          '//*[starts-with(@id, \"oj-collapsible-header-\")]/*/*[starts-with(@aria-labelledby, \"oj-collapsible-header-\")]'\n        )\n      );\n    }\n    return this.toggleButton;\n  }\n\n  private isExpanded() {\n    return this.getProperty<boolean>('expanded');\n  }\n}\n"]}