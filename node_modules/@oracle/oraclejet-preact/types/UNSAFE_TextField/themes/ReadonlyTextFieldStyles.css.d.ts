import { ComponentThemeType, CompoundVariantStyles, VariantOptions } from '../../UNSAFE_Theme';
type ReadonlyTextFieldVariants = typeof variants;
type ReadonlyTextFieldVariantOptions = VariantOptions<ReadonlyTextFieldVariants>;
type ReadonlyTextFieldStyles = typeof styles;
type ReadonlyTextFieldTheme = ComponentThemeType<ReadonlyTextFieldVariants, ReadonlyTextFieldStyles>;
/*******************
 * Component Styles
 *******************/
declare const readOnlyBase: string;
declare const styles: {};
/*******************
 * Component Variants
 *******************/
declare const variants: {
    insideNonReadonlyForm: {
        isInsideNonReadonlyForm: string;
        notInsideNonReadonlyForm: string;
    };
    insideLabel: {
        hasInsideLabel: string;
        noInsideLabel: string;
    };
    textarea: {
        isTextArea: string;
        notTextArea: string;
    };
    loading: {
        isLoading: string;
        notLoading: string;
    };
    inputGroupPosition: {
        groupLeft: string;
        groupRight: string;
        groupMiddle: string;
    };
    withinGroup: {
        isWithinGroup: string;
    };
};
declare const compoundVariants: CompoundVariantStyles<ReadonlyTextFieldVariantOptions>;
export type { ReadonlyTextFieldVariantOptions, ReadonlyTextFieldStyles, ReadonlyTextFieldTheme };
export { readOnlyBase, variants, compoundVariants };
