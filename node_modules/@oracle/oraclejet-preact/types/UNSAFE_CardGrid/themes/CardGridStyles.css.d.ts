import { ComponentThemeType, VariantOptions } from '../../UNSAFE_Theme';
type CardGridVariants = typeof variants;
type CardGridVariantOptions = VariantOptions<CardGridVariants>;
type CardGridStyles = typeof styles;
type CardGridTheme = ComponentThemeType<CardGridVariants, CardGridStyles>;
declare const styles: {
    baseStyle: string;
    itemStyle: string;
};
/*******************
 * Style Variants
 *******************/
declare const variants: {
    readonly itemFocused: {
        readonly isItemFocused: {
            outlineStyle: string;
            outlineWidth: string;
            outlineColor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            outlineOffset: string;
        };
        readonly isNotItemFocused: "";
    };
    readonly itemInitialOpacity: {
        readonly isTransparent: {
            opacity: number;
        };
        readonly isNotTransparent: "";
    };
};
declare const multiVariantStyles: import("@vanilla-extract/recipes").RuntimeFn<{
    readonly itemFocused: {
        readonly isItemFocused: {
            outlineStyle: string;
            outlineWidth: string;
            outlineColor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            outlineOffset: string;
        };
        readonly isNotItemFocused: "";
    };
    readonly itemInitialOpacity: {
        readonly isTransparent: {
            opacity: number;
        };
        readonly isNotTransparent: "";
    };
}>;
export type { CardGridVariantOptions, CardGridStyles, CardGridTheme };
export { multiVariantStyles, variants, styles };
