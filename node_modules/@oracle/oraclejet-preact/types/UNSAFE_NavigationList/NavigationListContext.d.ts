/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
import { NavigationListProps } from './NavigationList';
import { MutableRefObject } from 'preact/compat';
export type NavigationListContextProps<K extends string | number> = Pick<NavigationListProps<K>, 'selection' | 'onSelectionChange'> & {
    currentKey?: K;
    showFocusRing: boolean;
    containsActiveElement: () => boolean;
    firstItemRenderedKey?: MutableRefObject<K | undefined>;
    onCurrentKeyChange: Required<NavigationListProps<K>>['onSelectionChange'];
};
/**
 * Context used to pass navlist information without having to pass it to navlist children props.
 * We want to communicate information down to any interested navlist item children.
 */
declare const NavigationListContext: import("preact").Context<NavigationListContextProps<string | number>>;
export { NavigationListContext };
