/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
import { Ref } from 'preact/hooks';
import { StepProps } from '../hooks/UNSAFE_useSpinning';
export { StepDirection, StepEvent } from '../hooks/UNSAFE_useSpinning';
type Props = StepProps & {
    /**
     * Controls whether the step buttons are shown.
     */
    hasSteppers?: boolean;
    /**
     * Variant style of step buttons.
     * @default directional
     */
    stepperVariant?: 'directional' | 'quantitative';
    /**
     * A ref to the input element.
     */
    inputRef: Ref<HTMLInputElement>;
};
/**
 * A hook for using stepping functionality with NumberInputText. Stepping can
 * be accomplished using the step up or down buttons or by pressing the arrow
 * up or arrow down keys. Holding down the buttons or keys produces continuous
 * step events.
 *
 * The hook returns a JSX element containing the step buttons, which can be
 * placed in the endContent of NumberInputText. It also returns
 * stepHandlerProps which should be spread onto the component to handle
 * keyboard stepping.
 *
 * @param hasSteppers Controls whether the step buttons are shown
 * @param stepperVariant Variant style of step buttons.
 * @param inputRef A ref to the input element
 * @param isStepDownDisabled Controls whether stepping down is disabled
 * @param isStepUpDisabled Controls whether stepping up is disabled
 * @param onSpin Called when a continuous step (aka spin) is requested
 * @param onSpinComplete Called when spinning is complete
 * @param onStep Called when a single step is requested
 * @returns An object containing the steppers and stepHandlerProps
 */
export declare const useSteppers: ({ hasSteppers, stepperVariant, inputRef, isStepDownDisabled, isStepUpDisabled, onSpin, onSpinComplete, onStep }: Props) => {
    startContent: import("preact").JSX.Element | undefined;
    endContent: import("preact").JSX.Element | undefined;
    stepHandlerProps: {};
};
