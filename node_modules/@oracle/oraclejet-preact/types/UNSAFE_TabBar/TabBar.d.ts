import { ComponentChildren } from 'preact';
/**
 * type for payload of current key change event handler
 */
export type CurrentKeyDetail<K> = {
    value: K;
};
/**
 * type for payload of selection change event handler
 */
type SelectionDetail<K> = {
    value: K;
};
export type TabBarProps<K extends string | number> = {
    /**
     * A set of TabBarItem(s) that TabBar will hold
     */
    children: ComponentChildren;
    /**
     * Whether to stretch the tab bar items to occupy available space or to condense items
     */
    layout?: 'stretch' | 'condense';
    /**
     * Key of the selected item.
     */
    selection?: K;
    /**
     * Callback function to handle when selection has changed
     */
    onSelectionChange?: <K extends string | number>(detail: SelectionDetail<K>) => void;
};
export declare function TabBar<K extends string | number>({ children, layout, selection, onSelectionChange }: TabBarProps<K>): import("preact").JSX.Element;
export {};
