/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('preact/jsx-runtime');
require('./utils/UNSAFE_classNames.js');
var hooks_UNSAFE_useComponentTheme = require('./hooks/UNSAFE_useComponentTheme.js');
var UNSAFE_Avatar_themes_redwood_AvatarTheme = require('./UNSAFE_Avatar/themes/redwood/AvatarTheme.js');
var classNames = require('./classNames-d619a292.js');
require('./utils/UNSAFE_logger.js');
require('./_curry1-6e9511bf.js');
require('./_curry2-53a902bf.js');
require('./UNSAFE_Avatar/themes/AvatarStyles.css.js');

require('./UNSAFE_Avatar/themes/redwood/AvatarBaseTheme.css.js');

require('./UNSAFE_Avatar/themes/redwood/AvatarVariants.css.js');

require('./vanilla-extract-recipes-createRuntimeFn.esm-8a4b93e4.js');

/**
 * An avatar represents a person or entity as initials or an image.
 */
function Avatar({ children, src, ...otherProps }) {
    if (src && !children) {
        return jsxRuntime.jsx(ImageAvatar, { src: src, ...otherProps });
    }
    else {
        return jsxRuntime.jsx(ContentAvatar, { ...otherProps, children: children });
    }
}
const ImageAvatar = ({ src, ...otherProps }) => {
    const { styles: { base, image } } = hooks_UNSAFE_useComponentTheme.useComponentTheme(UNSAFE_Avatar_themes_redwood_AvatarTheme.AvatarRedwoodTheme);
    const imageClasses = classNames.classNames([base, image]);
    return (jsxRuntime.jsx(AvatarWrapper, { ...otherProps, children: jsxRuntime.jsx("div", { class: imageClasses, style: { backgroundImage: `url(${src})` } }) }));
};
const ContentAvatar = ({ children, initials, ...otherProps }) => {
    const { styles: { baseStyle, content, initialsStyle, icon } } = hooks_UNSAFE_useComponentTheme.useComponentTheme(UNSAFE_Avatar_themes_redwood_AvatarTheme.AvatarRedwoodTheme);
    const contentClasses = [baseStyle, content, initials ? initialsStyle : icon];
    const childContent = initials || children;
    return (jsxRuntime.jsx(AvatarWrapper, { ...otherProps, children: jsxRuntime.jsx("div", { "aria-hidden": "true", class: classNames.classNames(contentClasses), children: childContent }) }));
};
const AvatarWrapper = ({ background, size, shape, children, ...props }) => {
    const { classes } = hooks_UNSAFE_useComponentTheme.useComponentTheme(UNSAFE_Avatar_themes_redwood_AvatarTheme.AvatarRedwoodTheme, {
        shape,
        size,
        background
    });
    const wrapperClasses = classNames.classNames([classes]);
    if (props['aria-label']) {
        return (jsxRuntime.jsx("div", { "aria-label": props['aria-label'], role: "img", class: wrapperClasses, children: children }));
    }
    else {
        return jsxRuntime.jsx("div", { class: classes, children: children });
    }
};

exports.Avatar = Avatar;
//# sourceMappingURL=UNSAFE_Avatar.js.map
