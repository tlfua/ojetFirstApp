/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('preact/jsx-runtime');
require('./utils/UNSAFE_classNames.js');
var utils_UNSAFE_keys = require('./utils/UNSAFE_keys.js');
var hooks_PRIVATE_useSelection = require('./hooks/PRIVATE_useSelection.js');
var hooks_UNSAFE_useTabbableMode = require('./hooks/UNSAFE_useTabbableMode.js');
require('./PRIVATE_ThemedIcons/CheckboxOffIcon.js');
require('./PRIVATE_ThemedIcons/CheckboxOnIcon.js');
require('./PRIVATE_ThemedIcons/CheckboxMixedIcon.js');
require('./UNSAFE_Flex.js');
var hooks_UNSAFE_useComponentTheme = require('./hooks/UNSAFE_useComponentTheme.js');
var hooks_UNSAFE_useInteractionStyle = require('./hooks/UNSAFE_useInteractionStyle.js');
var UNSAFE_Selector_themes_SelectorStyles_css = require('./UNSAFE_Selector/themes/SelectorStyles.css.js');
var UNSAFE_Radio_themes_redwood_RadioIconTheme = require('./UNSAFE_Radio/themes/redwood/RadioIconTheme.js');
var classNames = require('./classNames-d619a292.js');
var PRIVATE_Icons_CheckboxMixed = require('./PRIVATE_Icons/CheckboxMixed.js');
var PRIVATE_Icons_CheckboxOn = require('./PRIVATE_Icons/CheckboxOn.js');
var PRIVATE_Icons_CheckboxOff = require('./PRIVATE_Icons/CheckboxOff.js');
var Flex = require('./Flex-2eb09dad.js');
require('preact/hooks');
require('./utils/UNSAFE_arrayUtils.js');
require('./hooks/UNSAFE_useUser.js');
require('./index-c3ee789d.js');
require('preact');
require('./Common.js');
require('./Common/themes.js');
require('./Common/themes/redwood/theme.js');
require('./Common/themes/themeContract.css.js');
require('preact/compat');
require('./utils/PRIVATE_collectionUtils.js');
require('./utils/PRIVATE_clientHints.js');
require('./clientHints-b9e7be1e.js');
require('./utils/UNSAFE_interpolations/dimensions.js');
require('./utils/UNSAFE_size.js');
require('./UNSAFE_Theme.js');
require('./utils-b9f57550.js');
require('./_curry1-6e9511bf.js');
require('./utils/UNSAFE_mergeInterpolations.js');
require('./_curry3-ad2313fd.js');
require('./_curry2-53a902bf.js');
require('./_has-aa203696.js');

require('./utils/UNSAFE_interpolations/boxalignment.js');
require('./keys-65201aa4.js');
require('./utils/UNSAFE_interpolations/flexbox.js');
require('./flexbox-8cd3009d.js');
require('./utils/UNSAFE_interpolations/flexitem.js');
require('./flexitem-939ec1ef.js');
require('./utils/UNSAFE_logger.js');
require('./utils/UNSAFE_mergeProps.js');
require('./hooks/UNSAFE_useHover.js');
require('./hooks/UNSAFE_useToggle.js');
require('./hooks/UNSAFE_useActive.js');

require('./vanilla-extract-recipes-createRuntimeFn.esm-8a4b93e4.js');
require('./UNSAFE_Radio/themes/RadioIconStyles.css.js');

require('./UNSAFE_Radio/themes/redwood/RadioIconBaseTheme.css.js');

require('./UNSAFE_Radio/themes/redwood/RadioIconVariants.css.js');

require('./UNSAFE_Icon.js');
require('./Icon-e47442ad.js');
require('./hooks/UNSAFE_useTooltip.js');
require('./hooks/UNSAFE_useId.js');
require('./UNSAFE_Floating.js');
require('./Floating-3415cf36.js');
require('./index-0a166c9e.js');
require('./utils/PRIVATE_floatingUtils.js');
require('./utils/PRIVATE_refUtils.js');
require('./hooks/UNSAFE_useOutsideClick.js');
require('./UNSAFE_Floating/themes/redwood/FloatingTheme.js');
require('./UNSAFE_Floating/themes/FloatingStyles.css.js');

require('./UNSAFE_Floating/themes/redwood/FloatingBaseTheme.css.js');

require('./UNSAFE_Floating/themes/redwood/FloatingVariants.css.js');
require('./vanilla-extract-dynamic.esm-4bc33829.js');
require('./UNSAFE_Floating/themes/FloatingContract.css.js');
require('./UNSAFE_Layer.js');
require('./useThemeInterpolations-ee4e7934.js');
require('./hooks/UNSAFE_useColorScheme.js');
require('./hooks/UNSAFE_useScale.js');
require('./utils/UNSAFE_interpolations/theme.js');
require('./hooks/UNSAFE_useFocus.js');
require('./hooks/UNSAFE_useTouch.js');
require('./hooks/UNSAFE_useAnimation.js');
require('./useAnimation-802f3cdb.js');
require('./hooks/UNSAFE_useThemeInterpolations.js');
require('./hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentTheme.js');
require('./hooks/UNSAFE_useTooltip/themes/TooltipContentStyles.css.js');

require('./hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentBaseTheme.css.js');

require('./hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentVariants.css.js');

require('./UNSAFE_Icon/themes/IconStyle.css.js');


// internal component to use in place of the real Checkbox
function Checkbox(props) {
    const { isTabbable } = hooks_UNSAFE_useTabbableMode.useTabbableMode();
    const { interactionProps, applyActiveStyle } = hooks_UNSAFE_useInteractionStyle.useInteractionStyle();
    // because Checkbox components reference Radio scoped vars, we need to bring in the Radio base theme
    // to pick up the scoped var definitions.
    const { classes: radioClassess } = hooks_UNSAFE_useComponentTheme.useComponentTheme(UNSAFE_Radio_themes_redwood_RadioIconTheme.RadioIconRedwoodTheme, { iconSize: '4xUnits' });
    const variantClasses = UNSAFE_Selector_themes_SelectorStyles_css.multiVariantStyles({
        checked: props.checked ? (props.isPartial ? 'isPartiallyChecked' : 'isChecked') : 'notChecked',
        active: applyActiveStyle ? 'isActive' : 'notActive'
    });
    const classes = classNames.classNames([radioClassess, UNSAFE_Selector_themes_SelectorStyles_css.styles.checkbox, variantClasses]);
    const ariaChecked = props.checked ? (props.isPartial ? 'mixed' : 'true') : 'false';
    return (jsxRuntime.jsx("div", { ...interactionProps, class: classes, tabIndex: isTabbable ? 0 : -1, role: "checkbox", "aria-label": props['aria-label'], "aria-checked": ariaChecked, onClick: props.onClick, children: props.checked ? (props.isPartial ? (jsxRuntime.jsx(PRIVATE_Icons_CheckboxMixed.CheckboxMixed, {})) : (jsxRuntime.jsx(PRIVATE_Icons_CheckboxOn.CheckboxOn, {}))) : (jsxRuntime.jsx(PRIVATE_Icons_CheckboxOff.CheckboxOff, {})) }));
}
// click event handler used by Selector
const handleClick = (event) => {
    // we don't want container component like ListView to process it
    event.stopPropagation();
};
// update selectionProps onClick event to call event.stopPropagation()
const updateSelectionProps = (selectionProps) => {
    // click event handler return from useSelection
    const onClick = selectionProps.onClick;
    if (onClick) {
        // click event handler used by Selector
        selectionProps.onClick = (event) => {
            onClick(event);
            handleClick(event);
        };
        return selectionProps;
    }
    return { onClick: handleClick };
};
/**
 * The Selector component renders checkboxes in collections to support selection.
 */
function Selector({ 'aria-label': ariaLabel, rowKey, selectedKeys, isPartial, selectionMode = 'multiple', onChange }) {
    const { selectionProps } = hooks_PRIVATE_useSelection.useSelection(() => rowKey, selectedKeys, selectionMode, false, 'toggle', false, onChange);
    // TODO: replace internal with Preact checkbox component once it is available
    return (jsxRuntime.jsx("div", { class: UNSAFE_Selector_themes_SelectorStyles_css.styles.container, ...updateSelectionProps(selectionProps), children: jsxRuntime.jsx("div", { class: UNSAFE_Selector_themes_SelectorStyles_css.styles.base, children: jsxRuntime.jsx(Flex.Flex, { align: "center", justify: "center", width: "11x", height: "11x", children: jsxRuntime.jsx(Checkbox, { checked: utils_UNSAFE_keys.containsKey(selectedKeys, rowKey), "aria-label": ariaLabel, isPartial: isPartial }) }) }) }));
}

/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */

exports.Checkbox = Checkbox;
exports.Selector = Selector;
//# sourceMappingURL=UNSAFE_Selector.js.map
