{"version":3,"file":"UNSAFE_TagCloud.js","sources":["../../src/UNSAFE_TagCloud/TagCloudNavUtils.ts","../../src/UNSAFE_TagCloud/TagCloudUtils.ts","../../src/UNSAFE_TagCloud/TagCloudItem.tsx","../../src/UNSAFE_TagCloud/useEvents.tsx","../../src/UNSAFE_TagCloud/useTagCloudDatatip.ts","../../src/UNSAFE_TagCloud/TagCloud.tsx","../../src/UNSAFE_TagCloud/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ItemInputDetail, ItemInfo, TagCloudItemProps } from './TagCloud.type';\n\n/**\n * Returns the item based on item info in a tag cloud.\n * @param itemInfo\n * @param items\n * @returns\n */\nfunction getItem<K>(itemInfo: ItemInfo, items: TagCloudItemProps<K>[]) {\n  const { idx } = itemInfo;\n  return items[idx];\n}\n\nexport function getItemPadding(height: number | undefined) {\n  return height != null ? 0.15 * height : 0;\n}\n\n/**\n * Returns the next item's info in a tag cloud.\n * @param itemInfo\n * @param items\n * @returns\n */\nfunction getNextItemInfo<K>(itemInfo: ItemInfo, items: TagCloudItemProps<K>[]) {\n  let idx = itemInfo.idx;\n\n  idx = Math.min(items.length - 1, idx + 1);\n  return { idx, id: items[idx].id };\n}\n\n/**\n * Returns the previous item's info in a tag cloud.\n * @param itemInfo\n * @param items\n * @returns\n */\nfunction getPrevItemInfo<K>(itemInfo: ItemInfo, items: TagCloudItemProps<K>[]) {\n  let idx = itemInfo.idx;\n\n  idx = Math.max(0, idx - 1);\n  return { idx, id: items[idx].id };\n}\n\n/**\n * Returns utils functions for navigation in a tag cloud.\n * @param items\n * @returns\n */\nexport function getTagCloudNavUtils<K>(items: TagCloudItemProps<K>[]) {\n  return {\n    getItem: (itemInfo: ItemInfo) => {\n      return getItem(itemInfo, items);\n    },\n    getDetailFromInfo: (itemInfo?: ItemInfo): ItemInputDetail<K> => {\n      if (!itemInfo) {\n        return { id: undefined };\n      }\n      const item = getItem(itemInfo, items);\n      return { id: item.id };\n    },\n    getPrevItemInfo: (itemInfo: ItemInfo) => {\n      return getPrevItemInfo(itemInfo, items);\n    },\n    getNextItemInfo: (itemInfo: ItemInfo) => {\n      return getNextItemInfo(itemInfo, items);\n    }\n  };\n}\n","import { ItemInfo, TagCloudItemProps } from './TagCloud.type';\nimport { getContrastingTextColor } from '../utils/PRIVATE_visColorUtils/ColorUtils';\nimport { getUnion, intersects } from '../utils/PRIVATE_visLayoutUtils/LayoutUtils';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { BundleType } from '../resources/nls/bundle';\nimport { TagItemProps } from './TagCloudItem';\nimport { Font, TextDimensions } from '../hooks/PRIVATE_useTextDimensions';\nimport { getItemPadding } from './TagCloudNavUtils';\n\nconst BOTTOM_PADDING = 20;\nconst DEFAULT_FONT_SIZE = 12;\n\n/**\n * helper layout functions for font size calc\n * @param {number} minValue\n * @param {number} maxValue\n * @param {number} range\n * @return {number}\n */\nexport const fontSizeCalc = (value: number, minValue: number, maxValue: number, range: number) => {\n  return minValue === maxValue\n    ? DEFAULT_FONT_SIZE\n    : DEFAULT_FONT_SIZE +\n        Math.ceil((((range - 1) * (value - minValue)) / (maxValue - minValue)) * DEFAULT_FONT_SIZE);\n};\n\n/**\n * returns initial font size arr of items for layout\n * @param {Array} items\n * @return {Array}\n */\nexport function getInitialFontSize<K>(items: TagCloudItemProps<K>[]): TagItemProps<K>[] {\n  const fontSizeArr = [];\n  let minValue = Number.MAX_VALUE;\n  let maxValue = -Number.MAX_VALUE;\n  // First iterate thru data items to find the min and max values\n  for (let i = 0; i < items.length; i++) {\n    minValue = Math.min(minValue, items[i].value);\n    maxValue = Math.max(maxValue, items[i].value);\n  }\n\n  for (let i = 0; i < items.length; i++) {\n    const x = fontSizeCalc(items[i].value, minValue, maxValue, 3);\n    fontSizeArr.push({ ...items[i], fontSize: x });\n  }\n  return fontSizeArr;\n}\n\n/**\n * Calculates the line breaks for rectangular layout\n * @param {Array} arDims an array of dvt.Dimension objects for each tag\n * @param {number} width the available width\n * @return {Array} an array containing the starting tag index for each line in the layout\n * @private\n */\nexport function calculateLineBreaks(arDims: any, width: any) {\n  const hPadding = 2;\n  const lines = [0];\n  let curWidth = arDims[0].w + hPadding;\n  if (arDims.length > 1) {\n    for (let i = 1; i < arDims.length; i++) {\n      if (curWidth + arDims[i].w > width) {\n        lines.push(i);\n        curWidth = 0;\n      }\n      curWidth += arDims[i].w + hPadding;\n    }\n  }\n  return lines;\n}\n\n/**\n * Returns the items position and font size in cloud layout.\n * @param items\n * @param tagcloudH\n * @param tagcloudW\n */\nexport function getCloudLayout<K>(\n  items: TagCloudItemProps<K>[],\n  tagcloudW: number,\n  tagcloudH: number,\n  isRTL: boolean,\n  getTextDimensions: (textString: string, font: Font) => TextDimensions\n): TagItemProps<K>[] {\n  const positions: any[] = [];\n  const steps = 180;\n  let xrStep = 10 / steps;\n  let yrStep = 10 / steps;\n  if (tagcloudW > tagcloudH) xrStep *= tagcloudW / tagcloudH;\n  else yrStep *= tagcloudH / tagcloudW;\n  const thetaStep = (2 * Math.PI) / steps;\n  let bounds = null;\n  let maxFontSize = 0;\n  const cosCache = [];\n  const sinCache = [];\n  const tagWordData = [];\n  const tagCloudX = 0; // availSpace.x\n  const tagCloudY = 0; // availSpace.y\n\n  const initialFontItems = getInitialFontSize(items);\n\n  for (let i = 0; i < initialFontItems.length; i++) {\n    let placed = false;\n    let step = 0;\n    let stepIncrement = 4;\n    const tag = initialFontItems[i];\n    const tagDimensions = getTextDimensions(tag.label, {\n      fontSize: tag.fontSize + 'px'\n    });\n    maxFontSize = Math.max(maxFontSize, tag.fontSize);\n    let lastCollisionIndex = -1;\n    while (!placed) {\n      // cache sin/cos values because Chrome is slow at these calculations\n      const lookup = step % steps;\n      if (cosCache[lookup] === undefined) cosCache[lookup] = Math.cos(step * thetaStep);\n      if (sinCache[lookup] === undefined) sinCache[lookup] = Math.sin(step * thetaStep);\n      const _x = xrStep * step * cosCache[lookup];\n      const _y = yrStep * step * sinCache[lookup];\n      const padding = getItemPadding(tagDimensions.height);\n      const tagCloudDiv = {\n        x: _x,\n        y: _y,\n        w: tagDimensions.width + 2 * padding,\n        h: tagDimensions.height + 2 * padding\n      }; // this needs to change\n      placed = true;\n      if (lastCollisionIndex !== -1) {\n        if (intersects(positions[lastCollisionIndex], tagCloudDiv)) {\n          placed = false;\n        }\n      }\n\n      if (placed) {\n        for (let j = 0; j < i; j++) {\n          if (intersects(positions[j], tagCloudDiv)) {\n            lastCollisionIndex = j;\n            placed = false;\n            break;\n          }\n        }\n      }\n\n      if (placed) {\n        if (!bounds) {\n          bounds = tagCloudDiv;\n        } else {\n          bounds = getUnion(bounds, tagCloudDiv);\n        }\n        lastCollisionIndex = -1;\n        positions[i] = tagCloudDiv;\n        tag.x = _x; // tag.setX(x)\n        tag.y = _y; // tag.setY(-tagCloudDiv.y + y);\n        tag.w = tagDimensions.width;\n        tag.h = tagDimensions.height;\n      }\n      // Adjust stepIncrement so we check smaller degrees as spiral loops out\n      if (step == 3600) {\n        // 20 loops\n        stepIncrement = 3;\n      } else if (step == 5400) {\n        // 30 loops\n        stepIncrement = 2;\n      } else if (step == 10800) {\n        // 60 loops\n        stepIncrement = 1;\n      }\n      step += stepIncrement;\n    }\n  }\n\n  if (bounds) {\n    const scale = Math.max(bounds.w / tagcloudW, bounds.h / tagcloudH);\n    const cx = bounds.x + bounds.w / 2;\n    const cy = bounds.y + bounds.h / 2;\n\n    for (let k = 0; k < initialFontItems.length; k++) {\n      let tagItemX;\n      const tagItem = initialFontItems[k];\n      if (!isRTL) {\n        tagItemX =\n          tagItem.x != null ? tagCloudX + tagItem.x / scale + (tagcloudW / 2 - cx / scale) : 0;\n      } else {\n        tagItemX =\n          tagItem.x != null ? tagCloudX - tagItem.x / scale - (tagcloudW / 2 - cx / scale) : 0;\n      }\n\n      const tagItemY =\n        tagItem.y != null ? tagCloudY + tagItem.y / scale + (tagcloudH / 2 - cy / scale) : 0;\n      const tagItemW = tagItem.w != null ? tagItem.w / scale : 0;\n      const tagItemH = tagItem.h != null ? tagItem.h / scale : 0;\n      const fontSize = tagItem.fontSize;\n      const tagItemFontSize = fontSize / scale;\n      tagWordData.push({\n        ...tagItem,\n        x: tagItemX,\n        y: tagItemY,\n        fontSize: tagItemFontSize,\n        w: tagItemW,\n        h: tagItemH\n      });\n    }\n  }\n  return tagWordData;\n}\n\n/**\n * Returns the items position and font size in rectangle layout.\n * @param items\n * @param hiddenIds\n * @param tagcloudH\n * @param tagcloudW\n */\nexport function getRectangleLayout<K>(\n  items: TagCloudItemProps<K>[],\n  tagcloudW: number,\n  tagcloudH: number,\n  isRTL: boolean,\n  getTextDimensions: (textString: string, font: Font) => TextDimensions\n) {\n  const tagWordData: any[] = [];\n  const arDims = [];\n  let maxWidth = 0;\n  let maxHeight = 0;\n  let maxFontSize = 0;\n  const vPadding = 2;\n  const margin = 0;\n  const tagCloudX = 0; // availSpace.x\n  const tagCloudY = 0; // availSpace.y\n\n  // initial items processing\n  const initialFontItems = getInitialFontSize(items);\n\n  // Get the unscaled dimensions\n  for (let i = 0; i < initialFontItems.length; i++) {\n    const tag = initialFontItems[i];\n    const tagDimensions = getTextDimensions(tag.label, {\n      fontSize: tag.fontSize + 'px'\n    });\n    maxWidth = Math.max(maxWidth, tagDimensions.width);\n    maxHeight = Math.max(maxHeight, tagDimensions.height);\n    maxFontSize = Math.max(maxFontSize, tag.fontSize);\n    arDims.push({\n      w: tagDimensions.width,\n      h: tagDimensions.height,\n      x: tagDimensions.x,\n      y: tagDimensions.y\n    });\n  }\n\n  // Iteratively calculate the ideal font scale\n  let minScale = 0;\n  let maxScale = (tagcloudW - 2 * margin) / maxWidth; // This is the max scale that can be applied before the longest word will no longer fit\n  let scale;\n  let arLines;\n  while (maxScale - minScale > 0.001) {\n    scale = (minScale + maxScale) / 2;\n    arLines = calculateLineBreaks(arDims, (tagcloudW - 2 * margin) / scale);\n    const h = arLines.length * (scale * maxHeight + vPadding) - vPadding;\n    if (h > tagcloudH - 2 * margin) {\n      maxScale = scale;\n    } else {\n      minScale = scale;\n    }\n  }\n\n  // Calculate final line breaks\n  scale = minScale;\n  arLines = calculateLineBreaks(arDims, (tagcloudW - 2 * margin) / scale);\n  arLines.push(initialFontItems.length);\n  for (let k = 0; k < arLines.length - 1; k++) {\n    const lineStart = arLines[k];\n    const lineEnd = arLines[k + 1];\n    let hPadding = 5;\n    let maxLineHeight = 0;\n    let justified = true;\n    if (lineEnd - lineStart > 1) {\n      let lineWidth = 0;\n      for (let j = lineStart; j < lineEnd; j++) {\n        lineWidth += arDims[j].w * scale;\n        maxLineHeight = Math.max(maxLineHeight, arDims[j].h * scale);\n      }\n      hPadding = (tagcloudW - 2 * margin - lineWidth) / (lineEnd - lineStart - 1);\n\n      if (k == arLines.length - 2) {\n        // Don't justify the last line unless flowing it with a gap of .5 * maxLineHeight fills more than\n        // 90% of the width\n        const flowPadding = 0.5 * maxLineHeight;\n        if (\n          flowPadding < hPadding &&\n          lineWidth + (lineEnd - lineStart) * flowPadding < 0.9 * (tagcloudW - 2 * margin)\n        ) {\n          hPadding = flowPadding;\n          justified = false;\n        }\n      }\n    }\n\n    const bottomY = margin + (k + 1) * (maxHeight * scale + vPadding) - vPadding;\n    let curX = margin;\n    for (let m = lineStart; m < lineEnd; m++) {\n      const tagLine = initialFontItems[m];\n      const fontSize = tagLine.fontSize;\n      const tagItemFontSize = fontSize * scale;\n      tagLine.fontSize = tagItemFontSize;\n      const tagDimensionsWidth = arDims[m].w * scale;\n      tagLine.y = tagCloudY + bottomY + arDims[m].y * scale - BOTTOM_PADDING;\n      if (justified && m === lineEnd - 1 && m !== lineStart) {\n        if (!isRTL) tagLine.x = tagCloudX + tagcloudW - tagDimensionsWidth - margin;\n        else tagLine.x = tagCloudX + tagDimensionsWidth + margin - tagcloudW;\n        // alignRight(tagLine);\n      } else {\n        // alignLeft(tagLine);\n        tagLine.x = tagCloudX + curX;\n        if (!isRTL) {\n          curX += arDims[m].w * scale + hPadding;\n        } else {\n          // tagLine.alignRight();\n          curX -= arDims[m].w * scale + hPadding;\n        }\n      }\n      tagWordData.push({ ...tagLine, w: tagDimensionsWidth, h: arDims[m].h * scale });\n    }\n  }\n  return tagWordData;\n}\n\n/**\n * Calls the right layout algorithm based on tagcloud type.\n * @param layout cloud or rectangle. cloud if not defined.\n * @param items\n * @param hiddenIds\n * @param tagcloudH tagcloud height\n * @param tagcloudW tagcloud width\n */\nexport function getLayout<K>(\n  layout: string | undefined,\n  items: TagCloudItemProps<K>[],\n  tagcloudW: number,\n  tagcloudH: number,\n  isRTL: boolean,\n  getTextDimensions: (textString: string, font: Font) => TextDimensions\n) {\n  let layoutTagCloud: any[];\n  if (layout === 'cloud' || !layout) {\n    layoutTagCloud = getCloudLayout(items, tagcloudW, tagcloudH, isRTL, getTextDimensions);\n  } else {\n    layoutTagCloud = getRectangleLayout(items, tagcloudW, tagcloudH, isRTL, getTextDimensions);\n  }\n  return layoutTagCloud;\n}\n\n/**\n * Checks if the item is highlighted.\n * @param id Id of the item\n * @param highlighted The set of highlighted item\n */\nexport function isItemHighlighted<K>(id: K, highlightedIds?: K[]) {\n  if (!highlightedIds) {\n    return;\n  }\n  if (highlightedIds.length === 0) {\n    return true;\n  }\n  return new Set(highlightedIds).has(id);\n}\n\n/**\n * Checks if the item is highlighted.\n * @param id Id of the item\n * @param selectedIds The set of highlighted item\n */\nexport function isItemSelected<K>(id: K, selectedIds?: K[]) {\n  if (!selectedIds || selectedIds.length === 0) {\n    return false;\n  }\n  return new Set(selectedIds).has(id);\n}\n\n/**\n * Checks if the item is hidden.\n * @param id Id of the item.\n * @param hiddenIds The set of hidden items.\n * @returns\n */\nexport function isItemHidden<K>(id: K, hiddenIds?: K[]) {\n  if (!hiddenIds) {\n    return;\n  }\n  return new Set(hiddenIds).has(id);\n}\n\n/**\n * Returns the aria properties for the tag cloud.\n * @param isReadOnly { boolean } If the tag cloud is readonly.\n * @param accessibleLabel { string } The aria-label set by the app.\n * @returns The aria props.\n */\nexport function getAriaProps(\n  translations: BundleType,\n  hasData?: boolean,\n  accessibleLabel?: string\n): {\n  'aria-label': HTMLAttributesSignalExcluded['aria-label'];\n  role: HTMLAttributesSignalExcluded['role'];\n} {\n  return {\n    'aria-label': `${accessibleLabel || ''} ${\n      hasData ? '' : translations.dataVisualization_noData()\n    }`,\n    role: 'application'\n  };\n}\n\n/**\n * Returns the aria properties for the tag cloud.\n * @param isReadOnly { boolean } If the tag cloud is readonly.\n * @param accessibleLabel { string } The aria-label set by the app.\n * @returns The aria props.\n */\nexport function getItemAriaProps(\n  supportsSelection: boolean,\n  translations?: BundleType,\n  isSelected?: boolean,\n  accessibleLabel?: string,\n  role?: HTMLAttributesSignalExcluded['role']\n): {\n  'aria-label': HTMLAttributesSignalExcluded['aria-label'];\n  role: HTMLAttributesSignalExcluded['role'];\n} {\n  const selectionAriaLabel = !supportsSelection\n    ? ''\n    : isSelected\n    ? translations?.dataVisualization_stateSelected()\n    : translations?.dataVisualization_stateUnselected();\n\n  return {\n    'aria-label': [accessibleLabel, selectionAriaLabel].filter(Boolean).join('. ') || undefined,\n    role: role || 'img'\n  };\n}\n\n/**\n * Returns the item props for BaseTagCloudItem.\n * @param item The tagcloud item.\n * @param itemId The item index of the item.\n * @param focusedItem The info of currently focused item.\n * @param isReadOnly Whether the tagcloud is readonly.\n * @param hoveredItem The info of the currently hovered item.\n * @param hiddenIds The hidden ids.\n * @param highlightedIds The highlighted ids.\n */\nexport function getItemProps<K>(\n  item: TagCloudItemProps<K>,\n  itemIdx: number,\n  supportsSelection: boolean,\n  isReadOnly: boolean,\n  hoveredItem?: ItemInfo,\n  selectedIds?: Array<K>,\n  focusedItem?: ItemInfo,\n  highlightedIds?: Array<K>,\n  activeId?: string\n) {\n  let isCurrent = false;\n  let style;\n  if (!isReadOnly) {\n    const isFocusedItem = itemIdx === focusedItem?.idx;\n    const isHoveredItem = itemIdx === hoveredItem?.idx;\n    isCurrent = !!(\n      (isFocusedItem && focusedItem?.isCurrent) ||\n      (isHoveredItem && hoveredItem?.isCurrent)\n    );\n  }\n  const isHighlighted = isItemHighlighted(item.id, highlightedIds);\n  const isSelected = isItemSelected(item.id, selectedIds);\n\n  if (item.color) {\n    let color, backgroundColor, backgroundImage;\n\n    if (isSelected) {\n      backgroundColor = item.color;\n      color = getContrastingTextColor(backgroundColor);\n    }\n    // hovered and selection supported\n    else color = item.color;\n\n    style = {\n      color,\n      backgroundColor,\n      backgroundImage\n    };\n  } else if (!supportsSelection) {\n    style = {\n      backgroundColor: 'none'\n    };\n  }\n\n  return {\n    isCurrent,\n    isHighlighted: isHighlighted,\n    isSelected: isSelected,\n    isFocused: focusedItem ? hasFocusRing(focusedItem, itemIdx) : false,\n    key: item.id,\n    itemIdx,\n    style,\n    activeId: isCurrent ? activeId : undefined,\n    isReadOnly,\n    ...item\n  };\n}\n\n/**\n * Returns the text for the tag cloud datatip.\n * @param items The tag cloud items data.\n * @param focusedItem The item currently keyboard focused.\n * @param hoveredItem The item that is currently hovered.\n * @param datatip The datatip.\n */\nexport function getDatatipText<K>(\n  items: TagCloudItemProps<K>[],\n  getItem: (itemInfo: ItemInfo, items: TagCloudItemProps<K>[]) => TagCloudItemProps<K> | undefined,\n  focusedItem: ItemInfo,\n  hoveredItem?: ItemInfo,\n  datatip?: string\n) {\n  if (datatip) return datatip;\n  const isPointerActive = hoveredItem?.isCurrent;\n\n  if (isPointerActive && hoveredItem.idx != null) {\n    return getItem(hoveredItem, items)?.accessibleLabel;\n  }\n  if (focusedItem && focusedItem.isCurrent) {\n    return getItem(focusedItem, items)?.accessibleLabel;\n  }\n  return;\n}\n\n/**\n * Returns the value of the data-oj-item-index attribute for a given element.\n * @param element The HTML element.\n */\nexport function getItemInfo(element: HTMLElement) {\n  const itemIdx = element.dataset['idx'];\n  if (itemIdx == null) return;\n\n  return {\n    idx: Number(itemIdx)\n  };\n}\n\n/**\n * Compares if two ItemInfo are equal\n * @param item1\n * @param item2\n * @returns\n */\nexport function isEqualItem(item1?: ItemInfo, item2?: ItemInfo) {\n  return item1?.idx === item2?.idx;\n}\n\n/**\n * Checks if the item is the currentItem and if the focus ring\n * is visible.\n * @param itemInfo ItemInfo\n * @param itemId Item index\n */\nexport function hasFocusRing(itemInfo: ItemInfo, itemIdx: number) {\n  if (!itemInfo.isFocusVisible) return false;\n  const { idx: idx } = itemInfo;\n\n  return idx === itemIdx;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { BundleType } from '../resources/nls/bundle';\nimport { getItemAriaProps } from './TagCloudUtils';\nimport { styles } from './themes/TagCloudStyles.css';\nimport { getItemPadding } from './TagCloudNavUtils';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\nexport type TagItemProps<K> = {\n  id: K;\n  label: string;\n  accessibleLabel?: string;\n  value: number;\n  fontSize: number;\n  role?: HTMLAttributesSignalExcluded['role'];\n  itemIdx?: number;\n  supportsSelection?: boolean;\n  supportsAction?: boolean;\n  translations?: BundleType;\n  x?: number;\n  y?: number;\n  w?: number;\n  h?: number;\n  url?: string;\n  isHighlighted?: boolean;\n  isSelected?: boolean;\n  isCurrent?: boolean;\n  isFocused?: boolean;\n  isReadonly?: boolean;\n  class?: string;\n  style?: JSX.CSSProperties;\n  activeId?: string;\n};\n\nconst TagCloudItem = <K,>(props: TagItemProps<K>) => {\n  const {\n    itemBase,\n    itemStyle,\n    hoverUnselectedItemStyle,\n    selectedItemStyle,\n    hoveredSelectedItemStyle,\n    dimmedItemStyle,\n    interactiveCursorStyle\n  } = styles;\n  const isNotDimmed = props.isHighlighted || props.isHighlighted == null; // null means no highlighting feature\n\n  const itemClasses = classNames([\n    itemBase,\n    props.isSelected ? selectedItemStyle : itemStyle,\n    props.isCurrent\n      ? props.isSelected\n        ? hoveredSelectedItemStyle\n        : props.isFocused || props.supportsSelection\n        ? hoverUnselectedItemStyle\n        : ''\n      : '',\n    isNotDimmed ? '' : dimmedItemStyle,\n    props.supportsAction || props.supportsSelection ? interactiveCursorStyle : ''\n  ]);\n\n  const itemAriaProps = getItemAriaProps(\n    !!props.supportsSelection,\n    props.translations,\n    props.isSelected,\n    props.accessibleLabel,\n    props.role\n  );\n\n  const padding = getItemPadding(props.h);\n\n  return (\n    <div\n      class={itemClasses}\n      data-id={`${props.id}`}\n      data-idx={props.itemIdx}\n      style={{\n        ...props.style,\n        transform: `translate(${(props.x || 0) - padding}px,${(props.y || 0) - padding}px)`,\n        fontSize: props.fontSize,\n        padding: `${padding}px`,\n        lineHeight: props.fontSize + 'px'\n      }}\n      id={props.activeId}\n      {...itemAriaProps}>\n      {props.label}\n    </div>\n  );\n};\n\nexport { TagCloudItem };\n","import { useRef, useState } from 'preact/hooks';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { ItemActionDetail, ItemInputDetail, ItemInfo } from './TagCloud.type';\nimport { getItemInfo, isEqualItem } from './TagCloudUtils';\nimport { getRandomId } from '../utils/PRIVATE_visLayoutUtils/LayoutUtils';\n\nexport function useEvents<K>(\n  isInteractive: boolean,\n  getDetailFromInfo: (info?: ItemInfo) => ItemInputDetail<K>,\n  getPrevItemInfo: (info: ItemInfo) => ItemInfo,\n  getNextItemInfo: (info: ItemInfo) => ItemInfo,\n  onItemAction?: (detail: ItemActionDetail<K>) => void,\n  onInput?: (detail: ItemInputDetail<K>) => void\n) {\n  const [focusedItemInfo, setfocusedItemInfo] = useState<ItemInfo>({ idx: 0 });\n  const [hoveredItemInfo, sethoveredItemInfo] = useState<ItemInfo>();\n\n  const activeId = useRef<string>();\n\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n\n  const cancelEvent = (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const hoverHandler = (event: PointerEvent) => {\n    const itemInfo = getItemInfo(event.target as HTMLElement);\n    if (!isEqualItem(itemInfo, hoveredItemInfo)) {\n      sethoveredItemInfo(itemInfo && { ...itemInfo, isCurrent: true });\n      activeId.current = getRandomId();\n      if (isInteractive) {\n        setfocusedItemInfo({ ...focusedItemInfo, isCurrent: false });\n        onInput?.(getDetailFromInfo(itemInfo));\n      }\n    }\n  };\n\n  const pointerLeaveHandler = () => {\n    sethoveredItemInfo(undefined);\n    activeId.current = undefined;\n    if (isInteractive) {\n      onInput?.(getDetailFromInfo());\n    }\n  };\n\n  if (!isInteractive) {\n    return {\n      focusedItemInfo,\n      hoveredItemInfo,\n      // include pointer leave and pointer move for datatip\n      onPointerLeave: pointerLeaveHandler,\n      onPointerMove: hoverHandler\n    };\n  }\n\n  function updatefocusedItemInfo(itemInfo: ItemInfo) {\n    onInput?.(getDetailFromInfo(itemInfo));\n    activeId.current = getRandomId();\n    setfocusedItemInfo(itemInfo);\n  }\n\n  function handleKeyboardInput(item: ItemInfo) {\n    if (!isEqualItem(item, focusedItemInfo)) {\n      item.isCurrent = true;\n      item.isFocusVisible = true;\n      if (hoveredItemInfo) {\n        sethoveredItemInfo({ ...hoveredItemInfo, isCurrent: false });\n      }\n      updatefocusedItemInfo(item);\n    }\n  }\n\n  const triggerOnAction = () => {\n    const { id } = getDetailFromInfo(focusedItemInfo);\n    if (id != null) {\n      onItemAction?.({ id });\n      activeId.current = getRandomId();\n    }\n  };\n\n  const pointerUpHandler = (event: PointerEvent) => {\n    const itemInfo = getItemInfo(event.target as HTMLElement);\n    if (itemInfo != null) {\n      setfocusedItemInfo(itemInfo);\n      const { id } = getDetailFromInfo(itemInfo);\n      if (id != null) {\n        onItemAction?.({ id });\n        activeId.current = getRandomId();\n      }\n    } else onItemAction?.({ id: undefined });\n  };\n\n  const keyDownHandler = (event: KeyboardEvent) => {\n    const key = event.key;\n    switch (key) {\n      case 'Tab':\n        return;\n      case 'ArrowDown': {\n        const nextItemInfo = getNextItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        break;\n      }\n      case 'ArrowUp': {\n        const nextItemInfo = getPrevItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        break;\n      }\n      case 'ArrowRight': {\n        const nextItemInfo = isRtl\n          ? getPrevItemInfo(focusedItemInfo)\n          : getNextItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        break;\n      }\n      case 'ArrowLeft': {\n        const nextItemInfo = isRtl\n          ? getNextItemInfo(focusedItemInfo)\n          : getPrevItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        break;\n      }\n    }\n    cancelEvent(event);\n  };\n\n  const keyUpHandler = (event: KeyboardEvent) => {\n    const key = event.code;\n    switch (key) {\n      case 'Space': {\n        triggerOnAction();\n        break;\n      }\n      case 'Enter': {\n        triggerOnAction();\n        break;\n      }\n      case 'Tab': {\n        updatefocusedItemInfo({\n          ...focusedItemInfo,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n        break;\n      }\n    }\n  };\n\n  const blurHandler = () => {\n    if (hoveredItemInfo != null || focusedItemInfo.isCurrent) {\n      onInput?.(getDetailFromInfo(undefined));\n    }\n    const itemInfo = { ...focusedItemInfo, isCurrent: false, isFocusVisible: false };\n    setfocusedItemInfo(itemInfo);\n  };\n\n  return {\n    focusedItemInfo,\n    hoveredItemInfo,\n    'aria-activedescendant': activeId.current,\n    onPointerUp: pointerUpHandler,\n    onPointerMove: hoverHandler,\n    onKeyUp: keyUpHandler,\n    onKeyDown: keyDownHandler,\n    onPointerLeave: pointerLeaveHandler,\n    onBlur: blurHandler\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Ref, useLayoutEffect, useState } from 'preact/hooks';\nimport { useTooltipControlled } from '../hooks/UNSAFE_useTooltip';\nimport { ItemInfo } from './TagCloud.type';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { TagItemProps } from './TagCloudItem';\n\ntype props<K> = {\n  text?: string;\n  rootRef: Ref<HTMLDivElement>;\n  focusedItemInfo: ItemInfo;\n  focusedItemRef: Ref<TagItemProps<K> | null>;\n};\n\nconst DEFAULT_OFFSET = 8;\n\n/**\n * Calculate the datatip offset for datatip when keyboard focus is active.\n * @param rootRef The ref for root of the tag cloud.\n * @param currentItem The ItemInfo of the current keyboard focused item.\n * @param isRtl The direction.\n * @param focusedItemRef The ref for currentItem node.\n * @returns\n */\nconst calculateOffset = <K>(\n  rootRef: Ref<HTMLDivElement>,\n  currentItem: ItemInfo,\n  isRtl: boolean,\n  focusedItemRef: Ref<TagItemProps<K> | null>\n) => {\n  let crossAxis = 0;\n  let mainAxisOffset = DEFAULT_OFFSET;\n  if (\n    focusedItemRef?.current &&\n    currentItem.isCurrent &&\n    rootRef.current &&\n    focusedItemRef?.current.x != null &&\n    focusedItemRef?.current.w != null &&\n    focusedItemRef?.current.y != null &&\n    focusedItemRef?.current.h != null\n  ) {\n    const rootDim = rootRef.current.getBoundingClientRect(); // TODO: make this more efficient\n    crossAxis =\n      (isRtl ? -1 : 1) * focusedItemRef.current.x +\n      focusedItemRef.current.w / 2 -\n      rootDim.width / 2;\n    mainAxisOffset += -1 * focusedItemRef.current.y;\n  }\n  return { crossAxis, mainAxis: mainAxisOffset };\n};\n\n/**\n * Returns the datatip.\n * @param text The text string for the tag cloud item.\n * @param rootRef The ref for root of the tag cloud.\n * @param focusedItemRef The ref for focused item node.\n * @param focusedItemInfo The ItemInfo for focused item node.\n * @returns\n */\nexport const useTagCloudDatatip = <K>({\n  text,\n  rootRef,\n  focusedItemRef,\n  focusedItemInfo\n}: props<K>) => {\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n  const [offset, setOffset] = useState<{ mainAxis?: number; crossAxis?: number }>(\n    calculateOffset(rootRef, focusedItemInfo, isRtl, focusedItemRef)\n  );\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  useLayoutEffect(() => {\n    setOffset(calculateOffset(rootRef, focusedItemInfo, isRtl, focusedItemRef));\n  }, [focusedItemInfo]);\n\n  const anchor = focusedItemInfo?.isCurrent ? 'element' : 'pointer';\n  const { tooltipContent, tooltipProps } = useTooltipControlled({\n    text: text,\n    position: 'top',\n    isDisabled: false,\n    variant: 'datatip',\n    anchor: { x: anchor, y: anchor },\n    offset: offset,\n    isOpen,\n    onToggle: ({ value }) => setIsOpen(value)\n  });\n  return { datatipContent: tooltipContent, datatipProps: tooltipProps };\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { TagCloudItem, TagItemProps } from './TagCloudItem';\nimport { TagCloudProps } from './TagCloud.type';\nimport { getAriaProps, getDatatipText, getItemProps, getLayout } from './TagCloudUtils';\nimport { getTagCloudNavUtils } from './TagCloudNavUtils';\nimport { useEvents } from './useEvents';\nimport { TrackResizeContainer } from '../PRIVATE_TrackResizeContainer';\nimport { useTagCloudDatatip } from './useTagCloudDatatip';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { useTextDimensions } from '../hooks/PRIVATE_useTextDimensions';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { baseStyles } from './themes/TagCloudStyles.css';\nimport { useSelection } from '../hooks/PRIVATE_useVizSelection';\nimport { getItemInfo } from './TagCloudUtils';\nimport { Size, sizeToCSS } from '../utils/UNSAFE_size';\n\n/**\n * Tag clouds are used to display text data with the importance of each tag shown with font size and/or color.\n */\nexport function TagCloud<K extends string | number>({\n  selectionMode = 'none',\n  layout = 'cloud',\n  height = '112x',\n  width = '100%',\n  items,\n  onItemAction,\n  onItemInput,\n  ...props\n}: TagCloudProps<K>) {\n  const rootRef = useRef<HTMLDivElement>(null);\n  const focusedItemRef = useRef<TagItemProps<K> | null>(null);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n  const filteredItems = items.filter((i) => !props.hiddenIds?.includes(i.id));\n\n  const hasData = filteredItems && filteredItems.length !== 0;\n  const supportsSelection = !!(selectionMode && selectionMode !== 'none');\n  const supportsAction = onItemAction != null;\n  const isReadOnly = supportsAction && onItemInput === null;\n\n  const ariaProps = getAriaProps(translations, hasData, props.accessibleLabel);\n\n  const { getItem, getDetailFromInfo, getPrevItemInfo, getNextItemInfo } =\n    getTagCloudNavUtils(filteredItems);\n\n  const { hoveredItemInfo, focusedItemInfo, ...eventsProps } = useEvents<K>(\n    !isReadOnly && hasData,\n    getDetailFromInfo,\n    getPrevItemInfo,\n    getNextItemInfo,\n    onItemAction,\n    onItemInput\n  );\n\n  const datatipText = getDatatipText(\n    filteredItems,\n    getItem,\n    focusedItemInfo,\n    hoveredItemInfo,\n    props.datatip\n  );\n  const { datatipContent, datatipProps } = useTagCloudDatatip({\n    text: datatipText,\n    rootRef,\n    focusedItemInfo,\n    focusedItemRef\n  });\n\n  const idExtracter = (event: Event) => {\n    // return focused item for keyboard event.\n    // eventsProps should have already updated the focused item\n    const info =\n      event.type === 'keyup' ? focusedItemInfo : getItemInfo(event.target as HTMLElement);\n    return getDetailFromInfo(info).id;\n  };\n\n  const selectionProps = useSelection<K>({\n    idExtracter,\n    selection: props.selectedIds,\n    selectionMode: selectionMode,\n    onChange: props.onSelectionChange\n  });\n\n  const mergedProps = mergeProps(eventsProps, datatipProps, selectionProps);\n  const { direction } = useUser();\n\n  return (\n    <TrackResizeContainer\n      width={sizeToCSS(width as Size) || width || '0px'}\n      height={sizeToCSS(height as Size) || height || '0px'}>\n      {(width, height) => {\n        const { textMeasureContent, getTextDimensions } = useTextDimensions();\n        const [layoutTags, setLayoutTags] = useState<TagItemProps<K>[]>([]);\n\n        useLayoutEffect(() => {\n          if (!getTextDimensions || !hasData) return;\n          setLayoutTags(\n            getLayout(layout, filteredItems, width, height, direction === 'rtl', getTextDimensions)\n          );\n        }, [layout, filteredItems, width, height, direction, getTextDimensions]);\n\n        return (\n          <div\n            ref={rootRef}\n            tabIndex={isReadOnly ? undefined : 0}\n            style={{ width, height }}\n            class={baseStyles}\n            {...ariaProps}\n            {...mergedProps}>\n            {layoutTags.map((item, itemIndex) => {\n              const itemProps = getItemProps(\n                item,\n                itemIndex,\n                supportsSelection,\n                isReadOnly,\n                hoveredItemInfo,\n                props.selectedIds,\n                focusedItemInfo,\n                props.highlightedIds,\n                eventsProps['aria-activedescendant']\n              );\n              const isFocusedItem = focusedItemInfo.idx === itemIndex;\n              isFocusedItem ? (focusedItemRef.current = item) : null;\n              return (\n                <TagCloudItem\n                  fontSize={item.fontSize}\n                  x={item.x}\n                  y={item.y}\n                  accessibleLabel={item.accessibleLabel}\n                  supportsSelection={supportsSelection}\n                  supportsAction={supportsAction}\n                  translations={translations}\n                  {...itemProps}\n                />\n              );\n            })}\n            {textMeasureContent}\n            {datatipContent}\n          </div>\n        );\n      }}\n    </TrackResizeContainer>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport { TagCloud } from './TagCloud';\n"],"names":["intersects","getUnion","getContrastingTextColor","styles","classNames","_jsx","useState","useRef","useUser","getRandomId","useLayoutEffect","useTooltipControlled","useTranslationBundle","useSelection","mergeProps","TrackResizeContainer","sizeToCSS","useTextDimensions","_jsxs","baseStyles"],"mappings":"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"}