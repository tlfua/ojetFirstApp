{"version":3,"file":"PRIVATE_useVizSelection.js","sources":["../../../src/hooks/PRIVATE_useVizSelection/useSelection.ts","../../../src/hooks/PRIVATE_useVizSelection/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useCallback } from 'preact/hooks';\n\ntype SelectionMode = 'none' | 'single' | 'multiple';\ntype SelectionDetail<K> = {\n  ids: K[];\n};\ntype SelectionBehavior = 'toggle' | 'replace';\n\nconst NAVKEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n/**\n * Compares if two sets are equal.\n */\nconst isEqual = <T>(setA: Set<T>, setB: Set<T>) => {\n  return setA.size === setB.size && [...setA].every((value) => setB.has(value));\n};\n\n/**\n * Handles the selection.\n * @param itemId The id of the item.\n * @param selectedIds The set of selected item ids.\n * @param selectionMode The selection mode.\n * @param selectionBehavior The selection behavior. If 'toggle', unselected item will be selected and\n * vice versa. If 'replace', the item will replace the previous selection.\n * @param onChange The callback to trigger when selection changes.\n */\nconst handleSelect = <K>(\n  itemId: K | undefined,\n  selectedIds: Set<K>,\n  selectionMode: SelectionMode,\n  selectionBehavior: SelectionBehavior,\n  onChange?: (detail: SelectionDetail<K>) => void\n) => {\n  let ids = new Set<K>([]);\n  if (itemId != null) {\n    ids = new Set(selectedIds);\n    const isSelected = selectedIds.has(itemId);\n\n    if (selectionBehavior === 'toggle') {\n      if (isSelected) {\n        ids.delete(itemId);\n      } else if (selectionMode === 'single') {\n        ids = new Set([itemId]); // only selection\n      } else {\n        ids.add(itemId); // add to selection in \"multiple\" selectionMode\n      }\n    } else if (!isSelected) {\n      // In \"multiple\" selection mode, only replace selection if unselected item is selected.\n      // In \"single\" selection mode, only need to replace if unselected item is selected.\n      ids = new Set([itemId]);\n    }\n  }\n\n  if (!isEqual(ids, selectedIds)) {\n    onChange?.({ ids: [...ids] });\n  }\n};\n\ntype Props<K> = {\n  selection?: K[];\n  selectionMode?: SelectionMode;\n  idExtracter: (event: Event) => K | undefined;\n  onChange?: (detail: SelectionDetail<K>) => void;\n};\n\n/**\n * The hook to handle the selection behavior in vizualization components.\n */\nexport function useSelection<K>({\n  selection = [],\n  selectionMode = 'none',\n  idExtracter,\n  onChange\n}: Props<K>) {\n  const onPointerUp = useCallback(\n    (event: PointerEvent) => {\n      const key = idExtracter(event);\n      const isMeta = event.metaKey;\n      const isCtrl = event.ctrlKey;\n      if (key == null && (isMeta || isCtrl)) {\n        return;\n      }\n      handleSelect(\n        key,\n        new Set(selection),\n        selectionMode,\n        isMeta || isCtrl || event.pointerType === 'touch' ? 'toggle' : 'replace',\n        onChange\n      );\n    },\n    [selection, selectionMode, onChange]\n  );\n\n  const onContextMenu = useCallback(\n    (event: MouseEvent) => {\n      const key = idExtracter(event);\n      const isCtrl = event.ctrlKey;\n      handleSelect(key, new Set(selection), selectionMode, isCtrl ? 'toggle' : 'replace', onChange);\n    },\n    [selection, selectionMode, onChange]\n  );\n\n  const onKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      const isShift = event.shiftKey;\n      const isSpaceCtrl = event.ctrlKey && event.key === ' ';\n      const isArrowKey = NAVKEYS.indexOf(event.key) !== -1;\n      const itemKey = idExtracter(event);\n\n      if (isArrowKey || isSpaceCtrl) {\n        const behavior = isShift || isSpaceCtrl ? 'toggle' : 'replace';\n        handleSelect(itemKey, new Set(selection), selectionMode, behavior, onChange);\n      }\n    },\n    [selection, selectionMode, onChange]\n  );\n\n  return selectionMode === 'none' || onChange == null\n    ? {}\n    : { onKeyUp, onContextMenu, onPointerUp };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { useSelection } from './useSelection';\n"],"names":["useCallback"],"mappings":"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"}