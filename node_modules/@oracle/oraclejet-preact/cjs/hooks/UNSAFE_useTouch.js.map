{"version":3,"file":"UNSAFE_useTouch.js","sources":["../../../src/hooks/UNSAFE_useTouch/useTouch.ts","../../../src/hooks/UNSAFE_useTouch/index.ts"],"sourcesContent":["import { useToggle } from '../UNSAFE_useToggle';\n\nexport type TouchOptions = {\n  isDisabled?: boolean;\n};\n\n/**\n * Get status on whether target has touch or not\n * @returns\n */\nexport function useTouch(settings: TouchOptions = { isDisabled: false }): {\n  isTouch: boolean;\n  touchProps: Record<string, any>;\n} {\n  const { bool, setTrue, setFalse } = useToggle(false);\n  const touchProps = settings.isDisabled\n    ? {}\n    : {\n        onTouchStart: setTrue,\n        onTouchEnd: setFalse\n      };\n  return {\n    isTouch: settings.isDisabled ? false : bool,\n    touchProps: touchProps\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport { useTouch } from './useTouch';\n"],"names":["useToggle"],"mappings":";;;;;;;;AAMA;;;AAGG;AACG,SAAU,QAAQ,CAAC,QAAA,GAAyB,EAAE,UAAU,EAAE,KAAK,EAAE,EAAA;AAIrE,IAAA,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAGA,gCAAS,CAAC,KAAK,CAAC,CAAC;AACrD,IAAA,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU;AACpC,UAAE,EAAE;AACJ,UAAE;AACE,YAAA,YAAY,EAAE,OAAO;AACrB,YAAA,UAAU,EAAE,QAAQ;SACrB,CAAC;IACN,OAAO;QACL,OAAO,EAAE,QAAQ,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI;AAC3C,QAAA,UAAU,EAAE,UAAU;KACvB,CAAC;AACJ;;ACzBA;;;;;;AAMG;;;;"}