/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var hooks = require('preact/hooks');

class SharedResizeObserver {
    constructor() {
        this.targetCallbacks = new Map();
        this.resizeObserver = new ResizeObserver((entries) => {
            for (const entry of entries) {
                const cb = this.targetCallbacks.get(entry.target);
                if (cb)
                    cb(entry);
            }
        });
    }
    subscribe(target, callback, options) {
        this.targetCallbacks.set(target, callback);
        this.resizeObserver.observe(target, options);
    }
    unsubscribe(target) {
        this.resizeObserver.unobserve(target);
        this.targetCallbacks.delete(target);
    }
}
const sharedResizeObserver = new SharedResizeObserver();
const useResizeObserver = (ref, callback, resizeObserverOptions) => {
    hooks.useLayoutEffect(() => {
        if (!ref.current)
            return;
        const target = ref.current;
        sharedResizeObserver.subscribe(target, callback, resizeObserverOptions);
        return () => sharedResizeObserver.unsubscribe(target);
    }, [ref]);
};

/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */

exports.useResizeObserver = useResizeObserver;
//# sourceMappingURL=PRIVATE_useResizeObserver.js.map
