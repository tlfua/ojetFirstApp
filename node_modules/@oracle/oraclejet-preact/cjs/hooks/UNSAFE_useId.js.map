{"version":3,"file":"UNSAFE_useId.js","sources":["../../../src/hooks/UNSAFE_useId/useId.tsx","../../../src/hooks/UNSAFE_useId/index.ts"],"sourcesContent":["import { useState } from 'preact/hooks';\n\n/**\n * Generates random string that can be used as ID. Serves as replacement for\n * getUniqueId() function from \"ojs/ojvcomponent-preact\", until React 18 is\n * released with useId hook (https://github.com/preactjs/preact/issues/3373).\n * 1. Pick a random number in the range between 0 (inclusive) and 1 (exclusive)\n * 2. Convert the number to a base-36 string (using characters 0-9 and a-z)\n * 3. Slice off the leading '0.' prefix\n * 4. ids should always start with a letter, so prefix it with 'id'\n */\nexport const useId = () => {\n  const [id] = useState(() => `_${Math.random().toString(36).slice(2)}`); //@RandomNumberOK\n  return id;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport { useId } from './useId';\n"],"names":["useState"],"mappings":";;;;;;;AAEA;;;;;;;;AAQG;AACI,MAAM,KAAK,GAAG,MAAK;AACxB,IAAA,MAAM,CAAC,EAAE,CAAC,GAAGA,cAAQ,CAAC,MAAM,CAAA,CAAA,EAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC;AACvE,IAAA,OAAO,EAAE,CAAC;AACZ;;ACdA;;;;;;AAMG;;;;"}