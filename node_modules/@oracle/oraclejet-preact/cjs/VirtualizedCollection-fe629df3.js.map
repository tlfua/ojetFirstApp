{"version":3,"file":"VirtualizedCollection-fe629df3.js","sources":["../../src/PRIVATE_VirtualizedCollection/Placeholder.tsx","../../src/PRIVATE_VirtualizedCollection/VirtualizedCollection.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX } from 'preact';\nimport { stringLiteralArray } from '../utils/UNSAFE_arrayUtils';\n\nexport const placeholderTypes = stringLiteralArray(['topPlaceholder', 'bottomPlaceholder']);\n/**\n * Type of placeholder (top which is before the data content and bottom which is after the data content)\n */\nexport type PlaceholderType = typeof placeholderTypes[number];\n\n/**\n * Context object which is pass to the placeholderHeight function callback\n */\nexport type PlaceholderContext = {\n  fromIndex: number;\n  toIndex: number;\n  estimateItemSize: number;\n  which: PlaceholderType;\n};\n\nexport const PLACEHOLDER_STYLE_CLASS = 'oj-collection-placeholder';\n\nconst DEFAULT_PLACEHOLDER_SIZE = 48; // min-height defined in Redwood spec for item\nconst TOP_PLACEHOLDER_KEY = '_topPlaceholder';\nconst BOTTOM_PLACEHOLDER_KEY = '_bottomPlaceholder';\n\ntype Props = {\n  context: PlaceholderContext;\n  placeholderHeight?: (context: PlaceholderContext) => number;\n};\n\n/**\n * A component that renders placeholder which is used internally by VirtualizeViewportCollection\n */\nexport const Placeholder = ({ context, placeholderHeight }: Props) => {\n  const { fromIndex, toIndex, which, estimateItemSize } = context;\n  let totalHeight = 0;\n  if (placeholderHeight) {\n    totalHeight = placeholderHeight(context);\n  } else {\n    const placeholderUnitHeight =\n      estimateItemSize === 0 ? DEFAULT_PLACEHOLDER_SIZE : estimateItemSize;\n    totalHeight = Math.max(0, toIndex - fromIndex) * placeholderUnitHeight;\n  }\n\n  const key = which === 'topPlaceholder' ? TOP_PLACEHOLDER_KEY : BOTTOM_PLACEHOLDER_KEY;\n  const style: JSX.CSSProperties = { height: totalHeight + 'px' };\n  if (totalHeight === 0) {\n    style.display = 'none';\n  }\n  return <div key={key} className={PLACEHOLDER_STYLE_CLASS} style={style}></div>;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { RefObject, ComponentChildren } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { DataState, ItemContext, Range, Metadata, ViewportInfo } from '../UNSAFE_Collection';\nimport { Collection } from '../PRIVATE_Collection';\nimport {\n  Placeholder,\n  PlaceholderContext,\n  PlaceholderType,\n  PLACEHOLDER_STYLE_CLASS\n} from './Placeholder';\nimport { useViewportIntersect, ViewportConfig } from '../hooks/UNSAFE_useViewportIntersect';\n\n/**\n * Props for the VirtualizedCollection component\n */\ntype Props<K, D> = {\n  /**\n   * A DataState object that provide information including data and metadata to the VirtualizedCollection.\n   */\n  data: DataState<K, D> | null;\n\n  /**\n   * Renderer callback used to render each item\n   */\n  children: (context: ItemContext<{ data: D; metadata: Metadata<K> }>) => ComponentChildren;\n\n  /**\n   * Callback to calculate placeholder height\n   */\n  placeholderHeight?: (context: PlaceholderContext) => number;\n\n  /**\n   * Viewport configuration including specifying the element which is used to determine what range\n   * of data to render\n   */\n  viewportConfig: ViewportConfig;\n\n  /**\n   * The selector string to identify the children items\n   */\n  itemSelector: string;\n\n  /**\n   * Callback function to handle when viewport has changed, including the case\n   * where user scrolls to the end of the component and there are more items to load.\n   * The function should sets a new DataState on the component for the specified range.\n   */\n  onLoadRange: (range: Range) => void;\n\n  /**\n   * The number of additional items to render before and after the current viewport.  This is\n   * mainly used for performance tuning.  Increase the overscan will result in less frequent\n   * rendering when scroll but at the same time each render will take longer depending on the\n   * item content.\n   */\n  overscan?: number;\n\n  /**\n   * Optionally provide a custom callback to return the range to render based on viewport info\n   */\n  rangeExtractor?: (info: ViewportInfo) => Range;\n\n  /**\n   * Optionally specify the custom load more indicator\n   */\n  loadMoreIndicator?: ComponentChildren;\n\n  /**\n   * Optionally provide the suggestion indicator sparkle\n   */\n  suggestions?: ComponentChildren;\n};\n\n/**\n * A function that returns the default range extractor\n * @param fetchSize\n */\nexport function getVirtualizedRangeExtractor(fetchSize: number) {\n  return function ({ itemSize, viewportHeight, scrollOffset, overscan = 0 }: ViewportInfo): Range {\n    // if any of these is missing then return default initial range\n    if (\n      itemSize === undefined ||\n      itemSize === 0 ||\n      viewportHeight === undefined ||\n      scrollOffset === undefined\n    ) {\n      return { offset: 0, count: fetchSize };\n    }\n    const offset = Math.ceil(scrollOffset / itemSize);\n    const count = Math.ceil(viewportHeight / itemSize);\n    return {\n      offset: Math.max(0, offset - overscan),\n      count: count + overscan * (offset > 0 ? 2 : 1)\n    };\n  };\n}\n\n/**\n * Helper function to find the top and bottom of an element relative to the viewport\n * @param elem\n */\nconst getElementTopBottom = (elem: HTMLElement): { top: number; bottom: number } => {\n  let top;\n  let bottom;\n  if (elem === document.documentElement) {\n    top = 0;\n    bottom = document.documentElement.clientHeight;\n  } else {\n    const scrollerBounds = elem.getBoundingClientRect();\n    top = scrollerBounds.top;\n    bottom = scrollerBounds.bottom;\n  }\n  return { top, bottom };\n};\n\nconst isDataStateValid = <K, D>(dataState: DataState<K, D>) => {\n  return dataState && dataState.data && dataState.offset >= 0 && dataState.totalSize >= 0;\n};\n\nconst DEFAULT_MARGIN = 1;\n\n/**\n * Returns the range for the current viewport\n */\nconst getViewportRange = (\n  scroller: HTMLElement | null,\n  root: HTMLElement,\n  overscan: number,\n  rangeExtractor: (info: ViewportInfo) => Range,\n  estimateItemSize: number\n) => {\n  let scrollOffset;\n  let viewportHeight;\n\n  if (scroller && root) {\n    const rootRect = root.getBoundingClientRect();\n    const viewportRect = getElementTopBottom(scroller);\n    if (rootRect && viewportRect) {\n      scrollOffset = viewportRect.top - rootRect.top - DEFAULT_MARGIN;\n      viewportHeight = viewportRect.bottom - viewportRect.top + DEFAULT_MARGIN;\n    }\n  }\n\n  if (scrollOffset !== undefined && viewportHeight !== undefined) {\n    // figure out what the new range should be\n    const range = rangeExtractor({\n      scrollOffset,\n      viewportHeight,\n      overscan: overscan,\n      itemSize: estimateItemSize\n    });\n\n    return range;\n  }\n  return null;\n};\n\nconst DEFAULT_OVERSCAN = 1;\nconst DEFAULT_END_INDEX = 25; // match default fetch size\nconst LOADMORE_STYLE_CLASS = 'oj-collection-loadmore';\nconst LOAD_MORE_AND_PLACEHOLDER_SELECTOR = `.${LOADMORE_STYLE_CLASS}, .${PLACEHOLDER_STYLE_CLASS}`;\nconst DEFAULT_RANGE_EXTRACTOR = getVirtualizedRangeExtractor(DEFAULT_END_INDEX);\n\n/**\n * Component that only render items in the specified viewport.\n * @param props\n */\nexport function VirtualizedCollection<K, D>({\n  data,\n  children,\n  viewportConfig,\n  itemSelector,\n  placeholderHeight,\n  rangeExtractor = DEFAULT_RANGE_EXTRACTOR,\n  overscan = DEFAULT_OVERSCAN,\n  onLoadRange,\n  loadMoreIndicator,\n  suggestions\n}: Props<K, D>) {\n  const rootRef: RefObject<any> = useRef<HTMLElement>(null);\n  const estimateItemSizeRef: RefObject<number> = useRef(0);\n\n  // detect if viewport has changed and it needs to re-render based on a new range\n  useViewportIntersect(\n    viewportConfig,\n    DEFAULT_MARGIN,\n    0,\n    LOAD_MORE_AND_PLACEHOLDER_SELECTOR,\n    () => {\n      const range = getViewportRange(\n        viewportConfig.scroller(),\n        rootRef.current,\n        overscan,\n        rangeExtractor,\n        estimateItemSizeRef.current ?? 0\n      );\n      if (range) {\n        onLoadRange(range);\n      }\n    }\n  );\n\n  // calculate average item height.  For now, we'll just do this once, but we can\n  // do a rolling average where we'll adjust on every render.\n  useEffect(() => {\n    if (estimateItemSizeRef.current === 0) {\n      let totalHeight = 0;\n      const nodes = rootRef.current.querySelectorAll(itemSelector);\n      if (nodes.length > 0) {\n        nodes.forEach((item: HTMLElement) => {\n          totalHeight += item.offsetHeight;\n        });\n        estimateItemSizeRef.current = totalHeight / nodes.length;\n      }\n    }\n  });\n\n  // override itemRenderer to adjust the index\n  const _getItemRenderer = (startIndex: number) => {\n    // returns a new render function\n    return (context: ItemContext<{ data: D; metadata: Metadata<K> }>) => {\n      const itemContext: ItemContext<{ data: D; metadata: Metadata<K> }> = {\n        index: startIndex + context.index,\n        data: context.data\n      };\n      return children(itemContext);\n    };\n  };\n\n  // if DataState is invalid (including not specified), just render blank\n  if (!data || !isDataStateValid(data)) {\n    return <div ref={rootRef} />;\n  }\n\n  const rangeData = data.data;\n  const offset = data.offset;\n  const endIndex = offset + rangeData.length;\n  const itemCount = data.totalSize;\n  const topPlaceholderContext =\n    offset >= 0\n      ? {\n          fromIndex: 0,\n          toIndex: offset,\n          which: 'topPlaceholder' as PlaceholderType,\n          estimateItemSize: estimateItemSizeRef.current ?? 0\n        }\n      : undefined;\n  const bottomPlaceholderContext =\n    endIndex && endIndex <= itemCount\n      ? {\n          fromIndex: endIndex,\n          toIndex: itemCount,\n          which: 'bottomPlaceholder' as PlaceholderType,\n          estimateItemSize: estimateItemSizeRef.current ?? 0\n        }\n      : undefined;\n\n  const renderLoadMore =\n    loadMoreIndicator && data.sizePrecision === 'atLeast' && endIndex <= itemCount;\n\n  // might need to support elementType prop in the future to allow customization of what\n  // type of element to render for the root\n  return (\n    <div ref={rootRef} style=\"will-change: contents\">\n      {suggestions}\n      {topPlaceholderContext && (\n        <Placeholder\n          context={topPlaceholderContext}\n          placeholderHeight={placeholderHeight}></Placeholder>\n      )}\n      <Collection items={rangeData}>{_getItemRenderer(offset)}</Collection>\n      {bottomPlaceholderContext && (\n        <Placeholder\n          context={bottomPlaceholderContext}\n          placeholderHeight={placeholderHeight}></Placeholder>\n      )}\n      {renderLoadMore && loadMoreIndicator}\n    </div>\n  );\n}\n"],"names":["stringLiteralArray","_jsx","useRef","useViewportIntersect","useEffect","_jsxs","Collection"],"mappings":"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"}