/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var List = require('./List-467fca47.js');
var jsxRuntime = require('preact/jsx-runtime');
var hooks = require('preact/hooks');
require('./utils/UNSAFE_classNames.js');
var utils_UNSAFE_keys = require('./utils/UNSAFE_keys.js');
var hooks_UNSAFE_useId = require('./hooks/UNSAFE_useId.js');
var hooks_UNSAFE_useViewportIntersect = require('./hooks/UNSAFE_useViewportIntersect.js');
var hooks_UNSAFE_useTabbableMode = require('./hooks/UNSAFE_useTabbableMode.js');
var hooks_UNSAFE_useComponentTheme = require('./hooks/UNSAFE_useComponentTheme.js');
var hooks_UNSAFE_useInteractionStyle = require('./hooks/UNSAFE_useInteractionStyle.js');
var utils_UNSAFE_mergeInterpolations = require('./utils/UNSAFE_mergeInterpolations.js');
require('./utils/UNSAFE_interpolations/flexitem.js');
var PRIVATE_List_themes_ListStyles_css = require('./PRIVATE_List/themes/ListStyles.css.js');
var UNSAFE_GroupedList_themes_redwood_GroupedListTheme = require('./UNSAFE_GroupedList/themes/redwood/GroupedListTheme.js');
var classNames = require('./classNames-d619a292.js');
var flexitem = require('./flexitem-939ec1ef.js');
var SkeletonContainer = require('./SkeletonContainer-dbb3ab5e.js');
require('./UNSAFE_Flex.js');
require('./UNSAFE_Skeleton.js');
var Flex = require('./Flex-2eb09dad.js');
var Skeleton = require('./Skeleton-506420e5.js');
require('./utils/UNSAFE_mergeProps.js');
require('./PRIVATE_LoadMoreCollection.js');
require('./LoadMoreCollection-78b142a9.js');
require('preact');
require('./PRIVATE_Collection.js');
require('./Collection-f060a1e2.js');
require('./PRIVATE_VirtualizedCollection.js');
require('./VirtualizedCollection-fe629df3.js');
require('./utils/UNSAFE_arrayUtils.js');
require('preact/compat');
require('./UNSAFE_FocusTrap.js');
require('./FocusTrap-2209a89f.js');

require('./utils/PRIVATE_tabbableUtils.js');
require('./_curry1-6e9511bf.js');
require('./_curry2-53a902bf.js');
require('./_arity-353457ba.js');
require('./_curry3-ad2313fd.js');
require('./hooks/PRIVATE_useSelection.js');
require('./hooks/UNSAFE_useUser.js');
require('./index-c3ee789d.js');
require('./Common.js');
require('./Common/themes.js');
require('./Common/themes/redwood/theme.js');
require('./Common/themes/themeContract.css.js');
require('./utils/PRIVATE_collectionUtils.js');
require('./utils/PRIVATE_clientHints.js');
require('./clientHints-b9e7be1e.js');
require('./hooks/PRIVATE_useCurrentKey.js');
require('./hooks/PRIVATE_useCollectionFocusRing.js');
require('./hooks/PRIVATE_useTabbableModeSet.js');
require('./hooks/PRIVATE_useItemAction.js');
require('./UNSAFE_Selector.js');
require('./PRIVATE_ThemedIcons/CheckboxOffIcon.js');
require('./PRIVATE_Icons/CheckboxOff.js');
require('./UNSAFE_Icon.js');
require('./Icon-e47442ad.js');
require('./utils/UNSAFE_size.js');
require('./UNSAFE_Theme.js');
require('./utils-b9f57550.js');
require('./hooks/UNSAFE_useTooltip.js');
require('./UNSAFE_Floating.js');
require('./Floating-3415cf36.js');
require('./index-0a166c9e.js');
require('./utils/PRIVATE_floatingUtils.js');
require('./utils/PRIVATE_refUtils.js');
require('./hooks/UNSAFE_useOutsideClick.js');
require('./UNSAFE_Floating/themes/redwood/FloatingTheme.js');
require('./UNSAFE_Floating/themes/FloatingStyles.css.js');

require('./UNSAFE_Floating/themes/redwood/FloatingBaseTheme.css.js');

require('./UNSAFE_Floating/themes/redwood/FloatingVariants.css.js');
require('./vanilla-extract-recipes-createRuntimeFn.esm-8a4b93e4.js');
require('./vanilla-extract-dynamic.esm-4bc33829.js');
require('./UNSAFE_Floating/themes/FloatingContract.css.js');
require('./utils/UNSAFE_logger.js');
require('./UNSAFE_Layer.js');
require('./useThemeInterpolations-ee4e7934.js');
require('./hooks/UNSAFE_useColorScheme.js');
require('./hooks/UNSAFE_useScale.js');
require('./utils/UNSAFE_interpolations/theme.js');
require('./_has-aa203696.js');
require('./hooks/UNSAFE_useHover.js');
require('./hooks/UNSAFE_useToggle.js');
require('./hooks/UNSAFE_useFocus.js');
require('./hooks/UNSAFE_useTouch.js');
require('./hooks/UNSAFE_useAnimation.js');
require('./useAnimation-802f3cdb.js');
require('./hooks/UNSAFE_useThemeInterpolations.js');
require('./hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentTheme.js');
require('./hooks/UNSAFE_useTooltip/themes/TooltipContentStyles.css.js');

require('./hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentBaseTheme.css.js');

require('./hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentVariants.css.js');

require('./UNSAFE_Icon/themes/IconStyle.css.js');

require('./PRIVATE_ThemedIcons/CheckboxOnIcon.js');
require('./PRIVATE_Icons/CheckboxOn.js');
require('./PRIVATE_ThemedIcons/CheckboxMixedIcon.js');
require('./PRIVATE_Icons/CheckboxMixed.js');
require('./UNSAFE_Selector/themes/SelectorStyles.css.js');

require('./UNSAFE_Radio/themes/redwood/RadioIconTheme.js');
require('./UNSAFE_Radio/themes/RadioIconStyles.css.js');

require('./UNSAFE_Radio/themes/redwood/RadioIconBaseTheme.css.js');

require('./UNSAFE_Radio/themes/redwood/RadioIconVariants.css.js');

require('./hooks/PRIVATE_useCollectionGestureContext.js');
require('./hooks/UNSAFE_useActive.js');
require('./keys-65201aa4.js');

require('./UNSAFE_GroupedList/themes/GroupedListStyles.css.js');

require('./UNSAFE_GroupedList/themes/redwood/GroupedListBaseTheme.css.js');

require('./utils/UNSAFE_interpolations/dimensions.js');
require('./utils/UNSAFE_interpolations/boxalignment.js');
require('./utils/UNSAFE_interpolations/flexbox.js');
require('./flexbox-8cd3009d.js');
require('./utils/UNSAFE_interpolations/borders.js');
require('./UNSAFE_Skeleton/themes/redwood/SkeletonTheme.js');
require('./UNSAFE_Skeleton/themes/SkeletonStyles.css.js');

require('./UNSAFE_Skeleton/themes/redwood/SkeletonBaseTheme.css.js');

require('./UNSAFE_Skeleton/themes/redwood/SkeletonVariants.css.js');

// default style class for items in ListView
const GROUP_STYLE_CLASS = 'oj-c-listview-group';
const GROUP_SELECTOR = '.' + GROUP_STYLE_CLASS;
const STICKY_STYLE_CLASS = 'oj-c-listview-sticky';
/**
 * The internal component used to render a group header in ExpandableList and GroupedList.
 */
function ListGroupHeader({ ariaDescribedBy, children, itemKey, itemIndex, itemDepth, isFocused, isFocusRingVisible, isActive, isGridlineVisible, isExpandable, expandedKeys, viewportConfig }) {
    const [isStuck, setStuck] = hooks.useState(false);
    const { classes: groupedListThemeClasses, styles: groupedListStyles } = hooks_UNSAFE_useComponentTheme.useComponentTheme(UNSAFE_GroupedList_themes_redwood_GroupedListTheme.GroupedListRedwoodTheme);
    const { interactionProps, applyHoverStyle, applyPseudoHoverStyle, applyActiveStyle } = hooks_UNSAFE_useInteractionStyle.useInteractionStyle();
    const variantClasses = PRIVATE_List_themes_ListStyles_css.listGroupHeaderMultiVariantStyles({
        expandable: isExpandable ? 'isExpandable' : 'notExpandable',
        needsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',
        pseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',
        active: applyActiveStyle || isActive ? 'isActive' : 'notActive',
        focusRingVisible: isFocusRingVisible && isFocused ? 'isFocusRingVisible' : 'notFocusRingVisible',
        gridlineTop: itemIndex > 0 ? 'visible' : 'hidden',
        gridlineBottom: isGridlineVisible ? 'visible' : 'hidden'
    });
    const baseClasses = [List.ITEM_STYLE_CLASS, GROUP_STYLE_CLASS, variantClasses];
    if (isStuck) {
        baseClasses.push(groupedListThemeClasses);
        baseClasses.push(groupedListStyles.stuckHeader);
        baseClasses.push(STICKY_STYLE_CLASS);
    }
    const classes = classNames.classNames(baseClasses);
    const styleInterpolations = utils_UNSAFE_mergeInterpolations.mergeInterpolations([
        ...Object.values(flexitem.flexitemInterpolations)
    ]);
    const { class: cls, ...cellStyles } = styleInterpolations({
        alignSelf: 'center',
        flex: '1 0 auto'
    });
    hooks_UNSAFE_useViewportIntersect.useViewportIntersect({
        scroller: () => {
            if (isExpandable) {
                return null;
            }
            if (viewportConfig == null) {
                return document.body;
            }
            return viewportConfig.scroller();
        }
    }, 0, 1, '[data-oj-key=' + itemKey + ']', () => {
        setStuck(false);
    }, (entry) => {
        if (entry.boundingClientRect.y !== entry.intersectionRect.y) {
            setStuck(true);
        }
    });
    return (jsxRuntime.jsx("div", { id: hooks_UNSAFE_useId.useId(), role: "row", "aria-rowindex": itemIndex + 1, "aria-level": isNaN(itemDepth) ? undefined : itemDepth + 1, "data-oj-key": itemKey, class: classes, ...(typeof itemKey === 'number' && { 'data-oj-key-type': 'number' }), ...interactionProps, children: jsxRuntime.jsx("div", { id: hooks_UNSAFE_useId.useId(), role: "gridcell", "aria-describedby": ariaDescribedBy, "aria-colindex": 1, "aria-expanded": utils_UNSAFE_keys.containsKey(expandedKeys, itemKey), style: cellStyles, children: jsxRuntime.jsx(hooks_UNSAFE_useTabbableMode.TabbableModeContext.Provider, { value: { isTabbable: false }, children: children }) }) }));
}

/**
 * Helper function to only include keys of leaf items.
 */
const excludeGroup = (data, keys) => {
    if (!keys.all) {
        const groups = data.data
            .filter((dataMetadata) => {
            return !dataMetadata.metadata.isLeaf;
        })
            .map((dataMetadata) => {
            return dataMetadata.metadata.key;
        });
        const leafOnly = Array.from(keys.keys.values()).filter((key) => {
            return !groups.includes(key);
        });
        return { ...keys, keys: new Set(leafOnly) };
    }
    return keys;
};

const GroupLoadingIndicator = () => (jsxRuntime.jsx(SkeletonContainer.SkeletonContainer, { minimumCount: 3, children: (index) => {
        const padding = { paddingLeft: index * 10 + 'px' };
        return (jsxRuntime.jsxs(Flex.Flex, { height: "12x", align: "center", children: [jsxRuntime.jsx("span", { style: padding }), jsxRuntime.jsx(Skeleton.Skeleton, { height: "4x" })] }));
    } }));

/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */

exports.List = List.List;
exports.SkeletonContainer = SkeletonContainer.SkeletonContainer;
exports.GROUP_SELECTOR = GROUP_SELECTOR;
exports.GroupLoadingIndicator = GroupLoadingIndicator;
exports.ListGroupHeader = ListGroupHeader;
exports.STICKY_STYLE_CLASS = STICKY_STYLE_CLASS;
exports.excludeGroup = excludeGroup;
//# sourceMappingURL=PRIVATE_List.js.map
