/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

var compat = require('preact/compat');

/**
 *
 * @param props
 */
const useModal = (props) => {
    const { isOpen, onBackdropClick: onBackdropClickProp } = props;
    const backdropRef = compat.useRef(null);
    const mouseDownTarget = compat.useRef(null);
    const onMouseDown = compat.useCallback((event) => {
        if (backdropRef.current === event.target) {
            mouseDownTarget.current = event.target;
        }
    }, []);
    const onBackdropClick = compat.useCallback((event) => {
        if (backdropRef.current === event.target) {
            event.stopPropagation();
            // event should originate on the same target
            if (mouseDownTarget.current === event.target) {
                onBackdropClickProp?.();
            }
        }
    }, [onBackdropClickProp]);
    compat.useEffect(() => {
        const modal = backdropRef.current;
        if (modal) {
            modal.addEventListener('mousedown', onMouseDown);
            modal.addEventListener('click', onBackdropClick);
            return () => {
                modal.removeEventListener('mousedown', onMouseDown);
                modal.removeEventListener('click', onBackdropClick);
            };
        }
        return () => { };
    }, [isOpen, onMouseDown, onBackdropClick]);
    return {
        backdropRef
    };
};

exports.useModal = useModal;
//# sourceMappingURL=useModal-2ac2ced5.js.map
