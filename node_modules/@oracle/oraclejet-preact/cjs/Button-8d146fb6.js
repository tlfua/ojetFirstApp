/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');
require('./UNSAFE_BaseButton.js');
require('./UNSAFE_ButtonLayout.js');
var compat = require('preact/compat');
var ButtonLayout = require('./ButtonLayout-648ecbd5.js');
var BaseButton = require('./BaseButton-934b844e.js');

/**
 * A button is a pressable element that invokes an action.
 */
const Button = compat.forwardRef(({ variant = 'outlined', isDisabled = false, isRepeat = false, size = 'md', display = 'all', endIcon, startIcon, autofocus, edge, onAction, label = '', 'aria-label': accessibleLabel, 'aria-describedby': ariaDescribedBy, width, onBlur, onFocus, onMouseEnter, onMouseLeave, onTouchEnd, onTouchStart }, ref) => {
    const labelOnly = (!startIcon && !endIcon) || display === 'label';
    const content = labelOnly ? (label) : (jsxRuntime.jsx(ButtonLayout.ButtonLayout, { display: display, startIcon: startIcon, endIcon: endIcon, size: size, children: label }));
    return (jsxRuntime.jsx(BaseButton.BaseButton, { ref: ref, isDisabled: isDisabled, isRepeat: isRepeat, size: size, width: width, autofocus: autofocus, edge: edge, variant: variant, styling: [labelOnly ? 'default' : 'min'], onAction: onAction, "aria-label": accessibleLabel ?? label, "aria-describedby": ariaDescribedBy, onBlur: onBlur, onFocus: onFocus, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, onTouchEnd: onTouchEnd, onTouchStart: onTouchStart, children: content }));
});

exports.Button = Button;
//# sourceMappingURL=Button-8d146fb6.js.map
