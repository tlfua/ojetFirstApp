{"version":3,"file":"Floating-3415cf36.js","sources":["../../src/UNSAFE_Floating/FloatingTail.tsx","../../src/UNSAFE_Floating/Floating.tsx"],"sourcesContent":["import { forwardRef, ForwardedRef } from 'preact/compat';\nimport { useMemo, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { RefObject } from 'preact';\nimport { PositionData, Coords } from './Floating.types';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { FloatingStyles } from './themes/FloatingStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { mergeRefs } from '../utils/PRIVATE_refUtils';\nimport type { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { Property } from 'csstype';\nimport { rgba } from '../UNSAFE_Theme/utils';\nimport { colorSchemeVars } from '../Common/themes/themeContract.css';\nimport { FloatingRedwoodTheme } from './themes/redwood/FloatingTheme';\n\ntype Props = Pick<ColorProps, 'backgroundColor'> & {\n  data?: PositionData;\n  anchorRef: RefObject<Element | Coords>;\n  tail: 'none' | 'simple';\n  isRtl: boolean;\n};\n\nconst ARROW_SIZE = 7;\nconst ARROW_SIZE_CORNER = 6;\nconst ARROW_INNER_SIZE = 5;\nconst ARROW_INNER_SIZE_CORNER = 5;\n\nconst FloatingTail = forwardRef(\n  (\n    { data, anchorRef, tail, isRtl, backgroundColor }: Props,\n    ref: ForwardedRef<HTMLDivElement | null>\n  ) => {\n    const { styles, baseTheme } = useComponentTheme<never, FloatingStyles>(FloatingRedwoodTheme);\n    const { baseStyle } = styles;\n    const arrowRef = useRef<HTMLDivElement | null>(null);\n    const [arrowStyles, setArrowStyles] = useState({\n      arrowStyle: { visibility: 'hidden' },\n      arrowInnerStyle: { visibility: 'hidden' }\n    });\n\n    useLayoutEffect(() => {\n      if (arrowRef.current == null) return;\n      const { isCornerVerticalPlacement, isCornerHorizontalPlacement } = isCorner(\n        anchorRef,\n        tail,\n        data\n      );\n      setArrowStyles(\n        setStyles(\n          tail,\n          isRtl,\n          isCornerVerticalPlacement,\n          isCornerHorizontalPlacement,\n          data,\n          backgroundColor\n        )\n      );\n    }, [data?.placement, data?.x, data?.y, data?.offset, data?.arrow, tail, isRtl, anchorRef]);\n\n    const stableRef = useMemo(() => mergeRefs(ref, arrowRef), [ref, arrowRef]);\n    return (\n      tail === 'simple' && (\n        <div\n          ref={stableRef}\n          class={classNames([baseTheme, baseStyle])}\n          style={arrowStyles.arrowStyle}>\n          {' '}\n          {/*Outer arrow - shadow*/}\n          <div class={classNames([baseStyle])} style={arrowStyles.arrowInnerStyle}></div>{' '}\n          {/*Inner arrow - body*/}\n        </div>\n      )\n    );\n  }\n);\n\nfunction isCorner(\n  anchorRef: RefObject<Element | Coords>,\n  tail: 'none' | 'simple',\n  data?: PositionData\n) {\n  if (tail === 'simple' && data && data.arrow) {\n    const { centerOffset } = data.arrow;\n    const arrowSize = ARROW_SIZE;\n    let anchorRefHeight = 0;\n    let anchorRefWidth = 0;\n    const current = anchorRef.current;\n    // @ts-ignore. Type 'Element | Coords' issues\n    // Property 'x' does not exist on type 'Element'.\n    // Property 'y' does not exist on type 'Element'.\n    const isAnchorRefElement = current?.x === undefined && current?.y === undefined;\n    if (isAnchorRefElement) {\n      // @ts-ignore. Property 'getBoundingClientRect' does not exist on type 'Coords'.\n      anchorRefHeight = Math.round(current.getBoundingClientRect().height);\n      // @ts-ignore. Property 'getBoundingClientRect' does not exist on type 'Coords'.\n      anchorRefWidth = Math.round(anchorRef.current?.getBoundingClientRect().width);\n    }\n    const isCornerVerticalPlacement = isAnchorRefElement\n      ? Math.abs(centerOffset) >= anchorRefHeight / 2 - arrowSize / 2\n      : ['start-top-corner', 'start-bottom-corner', 'end-top-corner', 'end-bottom-corner'].includes(\n          data.origPlacement\n        );\n    const isCornerHorizontalPlacement = isAnchorRefElement\n      ? Math.abs(centerOffset) >= anchorRefWidth / 2 - arrowSize / 2\n      : ['top-start-corner', 'top-end-corner', 'bottom-start-corner', 'bottom-end-corner'].includes(\n          data.origPlacement\n        );\n\n    return { isCornerVerticalPlacement, isCornerHorizontalPlacement };\n  } else return { isCornerVerticalPlacement: false, isCornerHorizontalPlacement: false };\n}\n\nfunction setStyles(\n  //arrowEl: HTMLDivElement,\n  tail: 'none' | 'simple',\n  isRtl: boolean,\n  isCornerVerticalPlacement: boolean,\n  isCornerHorizontalPlacement: boolean,\n  data?: PositionData,\n  backgroundColor?: Property.BackgroundColor\n) {\n  const result = { visibility: 'visible' };\n  const innerResult = { visibility: 'visible' };\n  if (tail === 'simple' && data && data.arrow) {\n    const { x, y, centerOffset } = data.arrow;\n    const arrowSize = ARROW_SIZE;\n    const arrowSizeCorner = ARROW_SIZE_CORNER;\n    //const arrowInnerEl = arrowEl.querySelector('div') as Element;\n    const arrowInnerSize = ARROW_INNER_SIZE;\n    const arrowInnerSizeCorner = ARROW_INNER_SIZE_CORNER;\n\n    const isCenter = centerOffset === 0;\n    const isCenterOffsetPositive = centerOffset > 0;\n\n    // Set sizes of the arrow\n    setArrowSizes(isCornerVerticalPlacement || isCornerHorizontalPlacement);\n\n    // Corner vs. normal arrow\n    function setArrowSizes(isCornerPlacement?: boolean) {\n      // Outer arrow (shadow)\n      const arrowFinalSize = isCornerPlacement ? arrowSizeCorner : arrowSize;\n      setArrowStyle(\n        {\n          // Tracked: \n          borderTop: `${getSize(arrowFinalSize)} solid ${rgba(\n            colorSchemeVars.palette.neutral[90],\n            0.1\n          )}`,\n          borderRight: getTransparentBorder(arrowFinalSize),\n          borderLeft: getTransparentBorder(arrowFinalSize)\n        },\n        result\n      );\n      // Inner arrow\n      const arrowInnerFinalSize = isCornerPlacement ? arrowInnerSizeCorner : arrowInnerSize;\n      setArrowInnerStyle(\n        {\n          // Tracked: \n          borderTop: `${getSize(arrowInnerFinalSize)} solid ${backgroundColor}`,\n          borderRight: `${getTransparentBorder(arrowInnerFinalSize)}`,\n          borderLeft: `${getTransparentBorder(arrowInnerFinalSize)}`\n        },\n        innerResult\n      );\n    }\n\n    function setArrowStyle(style: object, result: object) {\n      Object.assign(result, style);\n    }\n\n    function setArrowInnerStyle(style: object, result: object) {\n      Object.assign(result, style);\n    }\n\n    function getTurn(eighth: number) {\n      return `rotate(${eighth * 45}deg)`;\n    }\n\n    function getSize(size: number) {\n      return `${size}px`;\n    }\n\n    function getTransparentBorder(size: number) {\n      return `${getSize(size)} solid transparent`;\n    }\n\n    const placementArr = data.placement.split('-');\n    const side = placementArr[0];\n\n    switch (side) {\n      case 'top':\n        setArrowTop();\n        break;\n      case 'end':\n        isRtl ? setArrowStart() : setArrowEnd();\n        break;\n      case 'bottom':\n        setArrowBottom();\n        break;\n      case 'start':\n        isRtl ? setArrowEnd() : setArrowStart();\n        break;\n    }\n\n    function setArrowTop() {\n      if (x != undefined) {\n        if (isCornerHorizontalPlacement) {\n          // Top corners\n          setArrowStyle(\n            {\n              top: '', // flip 'reset'\n              bottom: getSize(-arrowSize + 2),\n              left: getSize(x + (isCenterOffsetPositive ? 5 : -5)),\n              transform: getTurn(isCenterOffsetPositive ? 5 : 3)\n            },\n            result\n          );\n          setCornerArrowInner();\n        } else {\n          setArrowStyle(\n            {\n              top: '', // flip 'reset'\n              bottom: getSize(-arrowSize),\n              left: isCenter ? getSize(x) : getSize(x + (isCenterOffsetPositive ? 1 : -1)),\n              transform: getTurn(0)\n            },\n            result\n          );\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowEnd() {\n      if (y != undefined) {\n        if (isCornerVerticalPlacement) {\n          // End corners\n          setArrowStyle(\n            {\n              top: getSize(y + (isCenterOffsetPositive ? 2 : -2)),\n              right: '', // flip 'reset'\n              left: getSize(-arrowSize - 1),\n              transform: getTurn(isCenterOffsetPositive ? 7 : 5)\n            },\n            result\n          );\n          setCornerArrowInner();\n        } else {\n          // End\n          setArrowStyle(\n            {\n              top: isCenter ? getSize(y) : getSize(y + (isCenterOffsetPositive ? -2 : +2)),\n              right: '', // flip 'reset'\n              left: getSize(-arrowSize * 1.5),\n              transform: getTurn(2)\n            },\n            result\n          );\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowBottom() {\n      if (x != undefined) {\n        if (isCornerHorizontalPlacement) {\n          // Bottom corners\n          setArrowStyle(\n            {\n              top: getSize(-arrowSize + 3),\n              bottom: '', // flip 'reset'\n              left: getSize(x + (isCenterOffsetPositive ? 4 : -4)),\n              transform: getTurn(isCenterOffsetPositive ? 2 : 6)\n            },\n            result\n          );\n          setArrowInnerStyle(\n            {\n              top: getSize(-arrowInnerSize),\n              left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? 1 : -1))\n            },\n            innerResult\n          );\n        } else {\n          setArrowStyle(\n            {\n              top: getSize(-arrowSize),\n              bottom: '', // flip 'reset'\n              left: isCenter ? getSize(x) : getSize(x + (isCenterOffsetPositive ? 1 : -1)),\n              transform: getTurn(4)\n            },\n            result\n          );\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowStart() {\n      if (y != undefined) {\n        if (isCornerVerticalPlacement) {\n          // Start corners\n          setArrowStyle(\n            {\n              top: getSize(y + (isCenterOffsetPositive ? 2 : -2)),\n              right: getSize(-arrowSize - 1),\n              left: '', // flip 'reset'\n              transform: getTurn(isCenterOffsetPositive ? 1 : 3)\n            },\n            result\n          );\n          setArrowInnerStyle(\n            {\n              top: getSize(-arrowInnerSize),\n              left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? -2 : 2))\n            },\n            innerResult\n          );\n        } else {\n          // Start\n          setArrowStyle(\n            {\n              top: isCenter ? getSize(y) : getSize(y + (isCenterOffsetPositive ? -2 : +2)),\n              right: getSize(-arrowSize * 1.5),\n              left: '', // flip 'reset'\n              transform: getTurn(6)\n            },\n            result\n          );\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setCornerArrowInner() {\n      setArrowInnerStyle(\n        {\n          top: getSize(-arrowInnerSize),\n          left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? 2 : -2))\n        },\n        innerResult\n      );\n    }\n\n    function setNonCornerArrowInner() {\n      setArrowInnerStyle(\n        {\n          top: getSize(-arrowInnerSize - 2),\n          left: getSize(-arrowInnerSize)\n        },\n        innerResult\n      );\n    }\n  }\n  return { arrowStyle: result, arrowInnerStyle: innerResult };\n}\n\nexport { FloatingTail };\n","import { RefObject } from 'preact';\nimport { useLayoutEffect, useEffect, useMemo, useState, useRef, useCallback } from 'preact/hooks';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { autoUpdate, arrow } from '@floating-ui/dom';\nimport {\n  useFloating,\n  shift,\n  flip,\n  size,\n  offset,\n  limitShift,\n  VirtualElement,\n  logicalSide\n} from '../hooks/PRIVATE_useFloating';\nimport { Offset, Placement, Coords, PositionData } from './Floating.types';\nimport { mergeRefs } from '../utils/PRIVATE_refUtils';\nimport { useOutsideClick } from '../hooks/UNSAFE_useOutsideClick';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { FloatingTail } from './FloatingTail';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { floatingStyle, floatingVisibilityStyles } from './themes/FloatingStyles.css';\nimport { assignInlineVars } from '@vanilla-extract/dynamic';\nimport { floatingVars } from './themes/FloatingContract.css';\nimport type { ColorProps } from '../utils/UNSAFE_interpolations/colors';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children' | 'class'>;\n/**\n * Specifies the flipping behavior along the respective axis.\n */\nexport type FlipOptions = {\n  /**\n   * If set to true, enables collision detection on the main axis,\n   * which runs along the floating placement side.\n   */\n  mainAxis?: boolean;\n  /**\n   * If set to true, enables collision detection on the cross axis,\n   * which runs along the floating placement side.\n   */\n  crossAxis?: boolean;\n  /**\n   * Specifies an array of placements to try\n   * if the preferred initial placement doesn’t fit on the axes\n   * in which collision is detected.\n   */\n  fallbackPlacements?: Array<Placement>;\n};\n\n/**\n * Specifies the shift behavior along the respective axis.\n * When true, the floating element will shift to prevent overflow.\n */\nexport type ShiftOptions = {\n  /**\n   * main axis in which shifting is applied. Default <code>true</code>.\n   */\n  mainAxis?: boolean;\n  /**\n   * cross axis in which shifting is applied. Default <code>false</code>.\n   */\n  crossAxis?: boolean;\n};\n\n/**\n * This describes the virtual padding around the collision boundary (currently the view port).\n * This could be extended in the future,\n * i.e. property to define what is a boundary ( a view port, a document, some other html element)\n */\nexport type BoundaryOptions = {\n  padding?:\n    | number\n    | {\n        top: number;\n        right: number;\n        bottom: number;\n        left: number;\n      };\n};\n/**\n * Specifies the resizing behaviour for max-height and max-width of the floating component.\n * The floating element will change the size depending on the available space.\n * isMaxHeightAdjusted/isMaxWidthAdjusted - sets the max-height/max-width of the floating to the available space till the collision.\n * maxHeightCeiling/maxWidthCeiling - this is the limit for max-height/max-width that should not be exceeded, even if there is more available space till the collision.\n */\nexport type SizeOptions = {\n  isMaxWidthAdjusted?: boolean;\n  isMaxHeightAdjusted?: boolean;\n  maxHeightCeiling?: number;\n  maxWidthCeiling?: number;\n};\n\ntype Props = IntrinsicProps &\n  Pick<ColorProps, 'backgroundColor'> & {\n    /**\n     * <p>Placement of the floating element relative to its reference element.</p>\n     * <p>Placement consists of two parts, the first part is the side, the second is the alignment.</p>\n     * <p>Possible values are:</p>\n     * <p> <code>'top' </code> <code>'top-start' </code> <code> 'top-end' </code> <code> 'top-start-corner' </code> <code> 'top-end-corner' </code>\n     * <code> 'end' </code> <code> 'end-top'  </code> <code> 'end-bottom' </code> <code> 'end-top-corner' </code> <code> 'end-bottom-corner' </code>\n     * <code> 'bottom'  </code> <code> 'bottom-start'  </code> <code> 'bottom-end' </code> <code> 'bottom-start-corner' </code> <code> 'bottom-end-corner' </code>\n     * <code> 'start' </code> <code> 'start-top'  </code> <code> 'start-bottom' </code> <code> 'start-top-corner' </code> <code> 'start-bottom-corner' </code>\n     * </p>\n     */\n    placement?: Placement;\n\n    /**\n     * Trigger element reference.\n     */\n    anchorRef: RefObject<Element | Coords>;\n\n    /**\n     * Placement offset.\n     * Offset displaces the floating element from its core placement along the specified axes.\n     * Offset could be a number or an object\n     * A number represents the distance (gutter or margin) between the floating element and the reference element.\n     * This is shorthand for mainAxis.\n     * <pre>\n     *   {\n     *     mainAxis?: number;\n     *     crossAxis?: number;\n     *   }\n     * </pre>\n     * <p><code>mainAxis</code> - represents the distance (gutter or margin) between the floating element and the reference element.</p>\n     * <p><code>crossAxis</code> - represents the shifting between the floating element and the reference element.<p>\n     */\n    offsetValue?: Offset;\n\n    /**\n     * Click outside callback.\n     */\n    onClickOutside?: (event: MouseEvent) => void;\n\n    /**\n     * FlipOptions object\n     * <pre>\n     * type FlipOptions = {\n     *     mainAxis?: boolean;\n     *     crossAxis?: boolean;\n     *     fallbackPlacements?: Array<Placement>;\n     *   }\n     * </pre>\n     * <p>Specifies the flipping behavior along the respective axis.<p>\n     * <p><code>mainAxis</code> - If set to true, enables collision detection on the main axis, which runs along the floating placement side.\n     * Default is <code>true</code>.\n     * </p>\n     * <p><code>crossAxis</code> - If set to true, enables collision detection on the cross axis, which runs along the floating placement alignment.\n     * Default is <code>false</code>.\n     * </p>\n     * <p><code>fallbackPlacements</code> - specifies an array of placements to try if the preferred initial placement doesn’t fit on the axes in which collision is detected.\n     * The fallback placements will be tried in the order they are specified in the array.\n     * The following placements are allowed as values of the array:\n     * <code>'top'</code>, <code>'top-start'</code>, <code>'top-end'</code>, <code>'start'</code>, <code>'start-top'</code>, <code>'start-bottom'</code>, <code>'bottom'</code>,\n     * <code>'bottom-start'</code>, <code>'bottom-end'</code>, <code>'end'</code>, <code>'end-top'</code>, <code>'end-bottom'</code>.\n     * <p>\n     * If not specified, the default behaviour is to flip to the side <code>opposite</code> to the one in which collision is detected\n     * </p>\n     * </p>\n     */\n    flipOptions?: FlipOptions;\n\n    /**\n     * Specifies the shift behavior along the respective axis. When true, the floating element will shift to prevent overflow.\n     * <pre>\n     * type ShiftOptions = {\n     *  mainAxis?: boolean;\n     *  crossAxis?: boolean;\n     * };\n     * </pre>\n     * <p><code>mainAxis</code> - main axis in which shifting is applied. Default <code>true</code>.</p>\n     * <p><code>crossAxis</code> - cross axis in which shifting is applied. Default <code>false</code>.</p>\n     */\n    shiftOptions?: ShiftOptions;\n\n    /**\n     *  Triggered when placement or coordinates are changed after collision is detected\n     */\n    onPosition?: (data: PositionData) => void;\n\n    /**\n     * Tail\n     */\n    tail?: 'none' | 'simple';\n\n    /**\n     * Specifies the resizing behaviour for max-height and max-width of the floating component.\n     * <pre>\n     * type SizeOptions = {\n     *    isMaxWidthAdjusted?: boolean;\n     *    isMaxHeightAdjusted?: boolean;\n     *    maxHeightCeiling?: number;\n     *    maxWidthCeiling?: number;\n     *  }\n     * </pre>\n     * <p><code>isMaxHeightAdjusted</code> and <code>isMaxWidthAdjusted</code> - sets the max-height/max-width of the floating to the available space till the collision.\n     * When either of the options isMaxHeightAdjusted, isMaxWidthAdjusted is true, the floating element will change the size depending on the available space.\n     * Default values are <code>'false'</code>.</p>\n     * <p><code>maxHeightCeiling</code> and <code>maxWidthCeiling</code> - are maximal values that could not be exceeded.\n     * Defaults are undefined and it means to use full available width/height.</p>\n     */\n    sizeOptions?: SizeOptions;\n\n    /**\n     * <p>This describes the virtual padding around the collision boundary (currently the view port).</p>\n     * <p>This could be extended in the future,\n     * i.e. property to define what is a boundary\n     * ( a view port, a document, some other html element)</p>\n     * <pre>\n     * type BoundaryOptions = {\n     *  padding?: number | {\n     *    top: number;\n     *    right: number;\n     *    bottom: number;\n     *    left: number;\n     *  };\n     * }\n     * </pre>\n     * Default value for padding is 0.\n     */\n    boundaryOptions?: BoundaryOptions;\n  };\n\nfunction isElement(value: any): value is Element {\n  return value instanceof Element;\n}\n\n/**\n * A floating component allows the user to create a floating element that is displayed relative to an anchor element or pointer coordinates\n * and at the same time on the \"top layer\" of all other elements.\n * The Floating component is a base component and is often used by such components as Popup, Tooltip, SelectMultiple, Menu and other components.\n */\nexport const Floating = forwardRef(\n  (\n    {\n      children,\n      backgroundColor,\n      onClickOutside,\n      placement = 'bottom',\n      anchorRef,\n      offsetValue,\n      class: className,\n      tail = 'none',\n      flipOptions = { mainAxis: true, crossAxis: false },\n      shiftOptions = { mainAxis: true, crossAxis: false },\n      sizeOptions = { isMaxHeightAdjusted: false, isMaxWidthAdjusted: false },\n      boundaryOptions = { padding: 0 },\n      onPosition\n    }: Props,\n    ref: ForwardedRef<HTMLElement | null>\n  ) => {\n    const arrowRef = useRef<HTMLDivElement>(null);\n    const [positionData, setPositionData] = useState<PositionData>();\n\n    const [previousAnchor, setPreviousAnchor] = useState<Element | Coords | null>(null);\n\n    // we need to be sure anchorRef.current exists in first call\n    // to be able to set the previousAnchor state\n    useLayoutEffect(() => {\n      setPreviousAnchor(anchorRef.current);\n    }, []);\n\n    // In case anchorRef.current changes and we need to update floating position\n    // when it changes, we need to have copy in the state.\n    // For example when anchorRef is Coords( virtual element)\n    if (anchorRef.current !== previousAnchor) {\n      setPreviousAnchor(anchorRef.current);\n    }\n\n    const { direction } = useUser();\n    const isRtl = direction === 'rtl';\n\n    const _onPosition = useCallback(\n      (data: PositionData) => {\n        setPositionData(data);\n        onPosition?.(data);\n      },\n      [placement, anchorRef, tail, onPosition]\n    );\n\n    const middleware = [\n      offset(offsetValue),\n      flip({\n        mainAxis: flipOptions.mainAxis,\n        crossAxis: flipOptions.crossAxis,\n        fallbackPlacements: flipOptions.fallbackPlacements?.map((placement) =>\n          logicalSide(placement, direction)\n        ),\n        padding: boundaryOptions.padding\n      }),\n      shift({\n        mainAxis: shiftOptions.mainAxis,\n        crossAxis: shiftOptions.crossAxis,\n        limiter: limitShift({\n          mainAxis: shiftOptions.mainAxis,\n          crossAxis: shiftOptions.crossAxis\n        })\n      }),\n      ...(arrowRef.current\n        ? [\n            arrow({\n              element: arrowRef.current\n            })\n          ]\n        : [])\n    ];\n    if (sizeOptions.isMaxHeightAdjusted || sizeOptions.isMaxWidthAdjusted) {\n      middleware.push(\n        size({\n          apply({ availableWidth, availableHeight, elements }) {\n            if (sizeOptions.isMaxHeightAdjusted) {\n              if (parseInt(elements.floating.style.maxHeight) !== availableHeight) {\n                Object.assign(elements.floating.style, {\n                  maxHeight: `${Math.min(\n                    availableHeight,\n                    sizeOptions.maxHeightCeiling || availableHeight\n                  )}px`\n                });\n              }\n            }\n\n            if (sizeOptions.isMaxWidthAdjusted) {\n              if (parseInt(elements.floating.style.maxWidth) !== availableWidth) {\n                Object.assign(elements.floating.style, {\n                  maxWidth: `${Math.min(\n                    availableWidth,\n                    sizeOptions.maxWidthCeiling || availableWidth\n                  )}px`\n                });\n              }\n            }\n          },\n\n          padding: boundaryOptions.padding\n        })\n      );\n    }\n\n    const { x, y, reference, floating, refs, update } = useFloating({\n      placement: placement,\n      middleware: middleware,\n      onPosition: _onPosition\n    });\n\n    // To solve \"loop limit exceeds\" problem from the ResizeObserver in autoUpdate\n    // we need to make sure that we utilize autoUpdate function\n    // after the Floating component is positioned and has x, y coordinates.\n    const [isPositioned, setIsPositioned] = useState(false);\n\n    // here autoUpdate should be called only once during the Component lifecycle,\n    // if the floating, reference, placement and middleware do not change\n    useEffect(() => {\n      if (!refs.reference.current || !refs.floating.current || isPositioned !== true) {\n        return;\n      }\n\n      return autoUpdate(refs.reference.current, refs.floating.current, update);\n    }, [refs.floating, refs.reference, update, isPositioned]);\n\n    // here we should know when the Floating is positioned\n    useEffect(() => {\n      if (x != null && y != null) {\n        setIsPositioned(true);\n      }\n    }, [x, y]);\n\n    useOutsideClick({ isDisabled: false, ref: refs.floating, handler: onClickOutside });\n\n    useLayoutEffect(() => {\n      if (isElement(previousAnchor)) {\n        const element = previousAnchor as Element;\n        reference(element);\n        return;\n      }\n      const coords = previousAnchor as Coords;\n      const virtualEl: VirtualElement = {\n        getBoundingClientRect() {\n          return {\n            width: 0,\n            height: 0,\n            x: coords!.x,\n            y: coords!.y,\n            top: coords!.y,\n            left: coords!.x,\n            right: coords!.x,\n            bottom: coords!.y\n          };\n        }\n      };\n      if (coords && coords.x != null) {\n        reference(virtualEl);\n      }\n    }, [previousAnchor, reference]);\n\n    const stableRef = useMemo(() => mergeRefs(ref, floating), [ref, floating]);\n    const positionStyle = { top: y, left: x };\n\n    let assignedVars = {}; // empty var override unless background is specified\n    if (backgroundColor) {\n      assignedVars = assignInlineVars({\n        [floatingVars.backgroundColor]: backgroundColor\n      });\n    }\n\n    const visibilityStyles =\n      x == null && y == null ? floatingVisibilityStyles.hidden : floatingVisibilityStyles.visible;\n    const floatingClasses = classNames([className, floatingStyle, visibilityStyles]);\n    const content = (\n      <div class={floatingClasses} ref={stableRef} style={{ ...positionStyle, ...assignedVars }}>\n        {children}\n        <FloatingTail\n          ref={arrowRef}\n          backgroundColor={backgroundColor}\n          data={positionData}\n          anchorRef={anchorRef}\n          tail={tail}\n          isRtl={isRtl}\n        />\n      </div>\n    );\n    return content;\n  }\n);\n"],"names":["forwardRef","useComponentTheme","FloatingRedwoodTheme","useRef","useState","useLayoutEffect","useMemo","mergeRefs","_jsxs","classNames","_jsx","rgba","colorSchemeVars","useUser","useCallback","offset","flip","logicalSide","shift","limitShift","arrow","size","useFloating","useEffect","autoUpdate","useOutsideClick","assignInlineVars","floatingVars","floatingVisibilityStyles","floatingStyle"],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,MAAM,UAAU,GAAG,CAAC,CAAC;AACrB,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAC5B,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAC3B,MAAM,uBAAuB,GAAG,CAAC,CAAC;AAElC,MAAM,YAAY,GAAGA,iBAAU,CAC7B,CACE,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,eAAe,EAAS,EACxD,GAAwC,KACtC;IACF,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAGC,gDAAiB,CAAwBC,iEAAoB,CAAC,CAAC;AAC7F,IAAA,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC;AAC7B,IAAA,MAAM,QAAQ,GAAGC,YAAM,CAAwB,IAAI,CAAC,CAAC;AACrD,IAAA,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAGC,cAAQ,CAAC;AAC7C,QAAA,UAAU,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE;AACpC,QAAA,eAAe,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE;AAC1C,KAAA,CAAC,CAAC;IAEHC,qBAAe,CAAC,MAAK;AACnB,QAAA,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI;YAAE,OAAO;AACrC,QAAA,MAAM,EAAE,yBAAyB,EAAE,2BAA2B,EAAE,GAAG,QAAQ,CACzE,SAAS,EACT,IAAI,EACJ,IAAI,CACL,CAAC;AACF,QAAA,cAAc,CACZ,SAAS,CACP,IAAI,EACJ,KAAK,EACL,yBAAyB,EACzB,2BAA2B,EAC3B,IAAI,EACJ,eAAe,CAChB,CACF,CAAC;AACJ,KAAC,EAAE,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;IAE3F,MAAM,SAAS,GAAGC,aAAO,CAAC,MAAMC,gCAAS,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC3E,QACE,IAAI,KAAK,QAAQ,KACfC,eAAA,CAAA,KAAA,EAAA,EACE,GAAG,EAAE,SAAS,EACd,KAAK,EAAEC,qBAAU,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,EACzC,KAAK,EAAE,WAAW,CAAC,UAAU,EAAA,QAAA,EAAA,CAC5B,GAAG,EAEJC,cAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAED,qBAAU,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,WAAW,CAAC,eAAe,EAAA,CAAQ,EAAC,GAAG,CAAA,EAAA,CAE/E,CACP,EACD;AACJ,CAAC,CACF,CAAC;AAEF,SAAS,QAAQ,CACf,SAAsC,EACtC,IAAuB,EACvB,IAAmB,EAAA;IAEnB,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AAC3C,QAAA,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACpC,MAAM,SAAS,GAAG,UAAU,CAAC;QAC7B,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,cAAc,GAAG,CAAC,CAAC;AACvB,QAAA,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;;;;AAIlC,QAAA,MAAM,kBAAkB,GAAG,OAAO,EAAE,CAAC,KAAK,SAAS,IAAI,OAAO,EAAE,CAAC,KAAK,SAAS,CAAC;AAChF,QAAA,IAAI,kBAAkB,EAAE;;AAEtB,YAAA,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC;;AAErE,YAAA,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,qBAAqB,EAAE,CAAC,KAAK,CAAC,CAAC;AAC/E,SAAA;QACD,MAAM,yBAAyB,GAAG,kBAAkB;AAClD,cAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,eAAe,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC;AAC/D,cAAE,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,mBAAmB,CAAC,CAAC,QAAQ,CACzF,IAAI,CAAC,aAAa,CACnB,CAAC;QACN,MAAM,2BAA2B,GAAG,kBAAkB;AACpD,cAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,cAAc,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC;AAC9D,cAAE,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,mBAAmB,CAAC,CAAC,QAAQ,CACzF,IAAI,CAAC,aAAa,CACnB,CAAC;AAEN,QAAA,OAAO,EAAE,yBAAyB,EAAE,2BAA2B,EAAE,CAAC;AACnE,KAAA;;QAAM,OAAO,EAAE,yBAAyB,EAAE,KAAK,EAAE,2BAA2B,EAAE,KAAK,EAAE,CAAC;AACzF,CAAC;AAED,SAAS,SAAS;AAChB;AACA,IAAuB,EACvB,KAAc,EACd,yBAAkC,EAClC,2BAAoC,EACpC,IAAmB,EACnB,eAA0C,EAAA;AAE1C,IAAA,MAAM,MAAM,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;AACzC,IAAA,MAAM,WAAW,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;IAC9C,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;QAC3C,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1C,MAAM,SAAS,GAAG,UAAU,CAAC;QAC7B,MAAM,eAAe,GAAG,iBAAiB,CAAC;;QAE1C,MAAM,cAAc,GAAG,gBAAgB,CAAC;QACxC,MAAM,oBAAoB,GAAG,uBAAuB,CAAC;AAErD,QAAA,MAAM,QAAQ,GAAG,YAAY,KAAK,CAAC,CAAC;AACpC,QAAA,MAAM,sBAAsB,GAAG,YAAY,GAAG,CAAC,CAAC;;AAGhD,QAAA,aAAa,CAAC,yBAAyB,IAAI,2BAA2B,CAAC,CAAC;;QAGxE,SAAS,aAAa,CAAC,iBAA2B,EAAA;;YAEhD,MAAM,cAAc,GAAG,iBAAiB,GAAG,eAAe,GAAG,SAAS,CAAC;AACvE,YAAA,aAAa,CACX;;gBAEE,SAAS,EAAE,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA,OAAA,EAAUE,UAAI,CACjDC,+CAAe,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,EACnC,GAAG,CACJ,CAAE,CAAA;AACH,gBAAA,WAAW,EAAE,oBAAoB,CAAC,cAAc,CAAC;AACjD,gBAAA,UAAU,EAAE,oBAAoB,CAAC,cAAc,CAAC;aACjD,EACD,MAAM,CACP,CAAC;;YAEF,MAAM,mBAAmB,GAAG,iBAAiB,GAAG,oBAAoB,GAAG,cAAc,CAAC;AACtF,YAAA,kBAAkB,CAChB;;gBAEE,SAAS,EAAE,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA,OAAA,EAAU,eAAe,CAAE,CAAA;AACrE,gBAAA,WAAW,EAAE,CAAG,EAAA,oBAAoB,CAAC,mBAAmB,CAAC,CAAE,CAAA;AAC3D,gBAAA,UAAU,EAAE,CAAG,EAAA,oBAAoB,CAAC,mBAAmB,CAAC,CAAE,CAAA;aAC3D,EACD,WAAW,CACZ,CAAC;SACH;AAED,QAAA,SAAS,aAAa,CAAC,KAAa,EAAE,MAAc,EAAA;AAClD,YAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC9B;AAED,QAAA,SAAS,kBAAkB,CAAC,KAAa,EAAE,MAAc,EAAA;AACvD,YAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC9B;QAED,SAAS,OAAO,CAAC,MAAc,EAAA;AAC7B,YAAA,OAAO,CAAU,OAAA,EAAA,MAAM,GAAG,EAAE,MAAM,CAAC;SACpC;QAED,SAAS,OAAO,CAAC,IAAY,EAAA;YAC3B,OAAO,CAAA,EAAG,IAAI,CAAA,EAAA,CAAI,CAAC;SACpB;QAED,SAAS,oBAAoB,CAAC,IAAY,EAAA;AACxC,YAAA,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC;SAC7C;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC/C,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAE7B,QAAA,QAAQ,IAAI;AACV,YAAA,KAAK,KAAK;AACR,gBAAA,WAAW,EAAE,CAAC;gBACd,MAAM;AACR,YAAA,KAAK,KAAK;gBACR,KAAK,GAAG,aAAa,EAAE,GAAG,WAAW,EAAE,CAAC;gBACxC,MAAM;AACR,YAAA,KAAK,QAAQ;AACX,gBAAA,cAAc,EAAE,CAAC;gBACjB,MAAM;AACR,YAAA,KAAK,OAAO;gBACV,KAAK,GAAG,WAAW,EAAE,GAAG,aAAa,EAAE,CAAC;gBACxC,MAAM;AACT,SAAA;AAED,QAAA,SAAS,WAAW,GAAA;YAClB,IAAI,CAAC,IAAI,SAAS,EAAE;AAClB,gBAAA,IAAI,2BAA2B,EAAE;;AAE/B,oBAAA,aAAa,CACX;AACE,wBAAA,GAAG,EAAE,EAAE;AACP,wBAAA,MAAM,EAAE,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;AAC/B,wBAAA,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpD,wBAAA,SAAS,EAAE,OAAO,CAAC,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC;qBACnD,EACD,MAAM,CACP,CAAC;AACF,oBAAA,mBAAmB,EAAE,CAAC;AACvB,iBAAA;AAAM,qBAAA;AACL,oBAAA,aAAa,CACX;AACE,wBAAA,GAAG,EAAE,EAAE;AACP,wBAAA,MAAM,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC;AAC3B,wBAAA,IAAI,EAAE,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5E,wBAAA,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;qBACtB,EACD,MAAM,CACP,CAAC;AACF,oBAAA,sBAAsB,EAAE,CAAC;AAC1B,iBAAA;AACF,aAAA;SACF;AAED,QAAA,SAAS,WAAW,GAAA;YAClB,IAAI,CAAC,IAAI,SAAS,EAAE;AAClB,gBAAA,IAAI,yBAAyB,EAAE;;AAE7B,oBAAA,aAAa,CACX;AACE,wBAAA,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACnD,wBAAA,KAAK,EAAE,EAAE;AACT,wBAAA,IAAI,EAAE,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;AAC7B,wBAAA,SAAS,EAAE,OAAO,CAAC,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC;qBACnD,EACD,MAAM,CACP,CAAC;AACF,oBAAA,mBAAmB,EAAE,CAAC;AACvB,iBAAA;AAAM,qBAAA;;AAEL,oBAAA,aAAa,CACX;AACE,wBAAA,GAAG,EAAE,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,sBAAsB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5E,wBAAA,KAAK,EAAE,EAAE;AACT,wBAAA,IAAI,EAAE,OAAO,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC;AAC/B,wBAAA,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;qBACtB,EACD,MAAM,CACP,CAAC;AACF,oBAAA,sBAAsB,EAAE,CAAC;AAC1B,iBAAA;AACF,aAAA;SACF;AAED,QAAA,SAAS,cAAc,GAAA;YACrB,IAAI,CAAC,IAAI,SAAS,EAAE;AAClB,gBAAA,IAAI,2BAA2B,EAAE;;AAE/B,oBAAA,aAAa,CACX;AACE,wBAAA,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;AAC5B,wBAAA,MAAM,EAAE,EAAE;AACV,wBAAA,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpD,wBAAA,SAAS,EAAE,OAAO,CAAC,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC;qBACnD,EACD,MAAM,CACP,CAAC;AACF,oBAAA,kBAAkB,CAChB;AACE,wBAAA,GAAG,EAAE,OAAO,CAAC,CAAC,cAAc,CAAC;AAC7B,wBAAA,IAAI,EAAE,OAAO,CAAC,CAAC,cAAc,IAAI,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACnE,EACD,WAAW,CACZ,CAAC;AACH,iBAAA;AAAM,qBAAA;AACL,oBAAA,aAAa,CACX;AACE,wBAAA,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC;AACxB,wBAAA,MAAM,EAAE,EAAE;AACV,wBAAA,IAAI,EAAE,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5E,wBAAA,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;qBACtB,EACD,MAAM,CACP,CAAC;AACF,oBAAA,sBAAsB,EAAE,CAAC;AAC1B,iBAAA;AACF,aAAA;SACF;AAED,QAAA,SAAS,aAAa,GAAA;YACpB,IAAI,CAAC,IAAI,SAAS,EAAE;AAClB,gBAAA,IAAI,yBAAyB,EAAE;;AAE7B,oBAAA,aAAa,CACX;AACE,wBAAA,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACnD,wBAAA,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;AAC9B,wBAAA,IAAI,EAAE,EAAE;AACR,wBAAA,SAAS,EAAE,OAAO,CAAC,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC;qBACnD,EACD,MAAM,CACP,CAAC;AACF,oBAAA,kBAAkB,CAChB;AACE,wBAAA,GAAG,EAAE,OAAO,CAAC,CAAC,cAAc,CAAC;AAC7B,wBAAA,IAAI,EAAE,OAAO,CAAC,CAAC,cAAc,IAAI,sBAAsB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACnE,EACD,WAAW,CACZ,CAAC;AACH,iBAAA;AAAM,qBAAA;;AAEL,oBAAA,aAAa,CACX;AACE,wBAAA,GAAG,EAAE,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,sBAAsB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5E,wBAAA,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC;AAChC,wBAAA,IAAI,EAAE,EAAE;AACR,wBAAA,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;qBACtB,EACD,MAAM,CACP,CAAC;AACF,oBAAA,sBAAsB,EAAE,CAAC;AAC1B,iBAAA;AACF,aAAA;SACF;AAED,QAAA,SAAS,mBAAmB,GAAA;AAC1B,YAAA,kBAAkB,CAChB;AACE,gBAAA,GAAG,EAAE,OAAO,CAAC,CAAC,cAAc,CAAC;AAC7B,gBAAA,IAAI,EAAE,OAAO,CAAC,CAAC,cAAc,IAAI,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACnE,EACD,WAAW,CACZ,CAAC;SACH;AAED,QAAA,SAAS,sBAAsB,GAAA;AAC7B,YAAA,kBAAkB,CAChB;AACE,gBAAA,GAAG,EAAE,OAAO,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC;AACjC,gBAAA,IAAI,EAAE,OAAO,CAAC,CAAC,cAAc,CAAC;aAC/B,EACD,WAAW,CACZ,CAAC;SACH;AACF,KAAA;IACD,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,CAAC;AAC9D;;ACpIA,SAAS,SAAS,CAAC,KAAU,EAAA;IAC3B,OAAO,KAAK,YAAY,OAAO,CAAC;AAClC,CAAC;AAED;;;;AAIG;AACU,MAAA,QAAQ,GAAGZ,iBAAU,CAChC,CACE,EACE,QAAQ,EACR,eAAe,EACf,cAAc,EACd,SAAS,GAAG,QAAQ,EACpB,SAAS,EACT,WAAW,EACX,KAAK,EAAE,SAAS,EAChB,IAAI,GAAG,MAAM,EACb,WAAW,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAClD,YAAY,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EACnD,WAAW,GAAG,EAAE,mBAAmB,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,EACvE,eAAe,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,EAChC,UAAU,EACJ,EACR,GAAqC,KACnC;AACF,IAAA,MAAM,QAAQ,GAAGG,YAAM,CAAiB,IAAI,CAAC,CAAC;IAC9C,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAGC,cAAQ,EAAgB,CAAC;IAEjE,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAGA,cAAQ,CAA0B,IAAI,CAAC,CAAC;;;IAIpFC,qBAAe,CAAC,MAAK;AACnB,QAAA,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;KACtC,EAAE,EAAE,CAAC,CAAC;;;;AAKP,IAAA,IAAI,SAAS,CAAC,OAAO,KAAK,cAAc,EAAE;AACxC,QAAA,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACtC,KAAA;AAED,IAAA,MAAM,EAAE,SAAS,EAAE,GAAGQ,4BAAO,EAAE,CAAC;AAChC,IAAA,MAAM,KAAK,GAAG,SAAS,KAAK,KAAK,CAAC;AAElC,IAAA,MAAM,WAAW,GAAGC,iBAAW,CAC7B,CAAC,IAAkB,KAAI;QACrB,eAAe,CAAC,IAAI,CAAC,CAAC;AACtB,QAAA,UAAU,GAAG,IAAI,CAAC,CAAC;KACpB,EACD,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC,CACzC,CAAC;AAEF,IAAA,MAAM,UAAU,GAAG;QACjBC,gCAAM,CAAC,WAAW,CAAC;AACnB,QAAAC,2BAAI,CAAC;YACH,QAAQ,EAAE,WAAW,CAAC,QAAQ;YAC9B,SAAS,EAAE,WAAW,CAAC,SAAS;AAChC,YAAA,kBAAkB,EAAE,WAAW,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC,SAAS,KAChEC,qCAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAClC;YACD,OAAO,EAAE,eAAe,CAAC,OAAO;SACjC,CAAC;AACF,QAAAC,2BAAK,CAAC;YACJ,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,SAAS,EAAE,YAAY,CAAC,SAAS;YACjC,OAAO,EAAEC,2BAAU,CAAC;gBAClB,QAAQ,EAAE,YAAY,CAAC,QAAQ;gBAC/B,SAAS,EAAE,YAAY,CAAC,SAAS;aAClC,CAAC;SACH,CAAC;QACF,IAAI,QAAQ,CAAC,OAAO;AAClB,cAAE;AACE,gBAAAC,2BAAK,CAAC;oBACJ,OAAO,EAAE,QAAQ,CAAC,OAAO;iBAC1B,CAAC;AACH,aAAA;cACD,EAAE,CAAC;KACR,CAAC;AACF,IAAA,IAAI,WAAW,CAAC,mBAAmB,IAAI,WAAW,CAAC,kBAAkB,EAAE;AACrE,QAAA,UAAU,CAAC,IAAI,CACbC,2BAAI,CAAC;AACH,YAAA,KAAK,CAAC,EAAE,cAAc,EAAE,eAAe,EAAE,QAAQ,EAAE,EAAA;gBACjD,IAAI,WAAW,CAAC,mBAAmB,EAAE;AACnC,oBAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,eAAe,EAAE;wBACnE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE;AACrC,4BAAA,SAAS,EAAE,CAAA,EAAG,IAAI,CAAC,GAAG,CACpB,eAAe,EACf,WAAW,CAAC,gBAAgB,IAAI,eAAe,CAChD,CAAI,EAAA,CAAA;AACN,yBAAA,CAAC,CAAC;AACJ,qBAAA;AACF,iBAAA;gBAED,IAAI,WAAW,CAAC,kBAAkB,EAAE;AAClC,oBAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,cAAc,EAAE;wBACjE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE;AACrC,4BAAA,QAAQ,EAAE,CAAA,EAAG,IAAI,CAAC,GAAG,CACnB,cAAc,EACd,WAAW,CAAC,eAAe,IAAI,cAAc,CAC9C,CAAI,EAAA,CAAA;AACN,yBAAA,CAAC,CAAC;AACJ,qBAAA;AACF,iBAAA;aACF;YAED,OAAO,EAAE,eAAe,CAAC,OAAO;AACjC,SAAA,CAAC,CACH,CAAC;AACH,KAAA;AAED,IAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,GAAGC,qCAAW,CAAC;AAC9D,QAAA,SAAS,EAAE,SAAS;AACpB,QAAA,UAAU,EAAE,UAAU;AACtB,QAAA,UAAU,EAAE,WAAW;AACxB,KAAA,CAAC,CAAC;;;;IAKH,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAGlB,cAAQ,CAAC,KAAK,CAAC,CAAC;;;IAIxDmB,eAAS,CAAC,MAAK;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,YAAY,KAAK,IAAI,EAAE;YAC9E,OAAO;AACR,SAAA;AAED,QAAA,OAAOC,2BAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC3E,KAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;;IAG1DD,eAAS,CAAC,MAAK;AACb,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;YAC1B,eAAe,CAAC,IAAI,CAAC,CAAC;AACvB,SAAA;AACH,KAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAEX,IAAAE,4CAAe,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;IAEpFpB,qBAAe,CAAC,MAAK;AACnB,QAAA,IAAI,SAAS,CAAC,cAAc,CAAC,EAAE;YAC7B,MAAM,OAAO,GAAG,cAAyB,CAAC;YAC1C,SAAS,CAAC,OAAO,CAAC,CAAC;YACnB,OAAO;AACR,SAAA;QACD,MAAM,MAAM,GAAG,cAAwB,CAAC;AACxC,QAAA,MAAM,SAAS,GAAmB;YAChC,qBAAqB,GAAA;gBACnB,OAAO;AACL,oBAAA,KAAK,EAAE,CAAC;AACR,oBAAA,MAAM,EAAE,CAAC;oBACT,CAAC,EAAE,MAAO,CAAC,CAAC;oBACZ,CAAC,EAAE,MAAO,CAAC,CAAC;oBACZ,GAAG,EAAE,MAAO,CAAC,CAAC;oBACd,IAAI,EAAE,MAAO,CAAC,CAAC;oBACf,KAAK,EAAE,MAAO,CAAC,CAAC;oBAChB,MAAM,EAAE,MAAO,CAAC,CAAC;iBAClB,CAAC;aACH;SACF,CAAC;AACF,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE;YAC9B,SAAS,CAAC,SAAS,CAAC,CAAC;AACtB,SAAA;AACH,KAAC,EAAE,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;IAEhC,MAAM,SAAS,GAAGC,aAAO,CAAC,MAAMC,gCAAS,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC3E,MAAM,aAAa,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;AAE1C,IAAA,IAAI,YAAY,GAAG,EAAE,CAAC;AACtB,IAAA,IAAI,eAAe,EAAE;QACnB,YAAY,GAAGmB,0CAAgB,CAAC;AAC9B,YAAA,CAACC,wDAAY,CAAC,eAAe,GAAG,eAAe;AAChD,SAAA,CAAC,CAAC;AACJ,KAAA;IAED,MAAM,gBAAgB,GACpB,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAGC,kEAAwB,CAAC,MAAM,GAAGA,kEAAwB,CAAC,OAAO,CAAC;AAC9F,IAAA,MAAM,eAAe,GAAGnB,qBAAU,CAAC,CAAC,SAAS,EAAEoB,uDAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC;IACjF,MAAM,OAAO,IACXrB,eAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,eAAe,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,GAAG,aAAa,EAAE,GAAG,YAAY,EAAE,EAAA,QAAA,EAAA,CACtF,QAAQ,EACTE,cAAC,CAAA,YAAY,IACX,GAAG,EAAE,QAAQ,EACb,eAAe,EAAE,eAAe,EAChC,IAAI,EAAE,YAAY,EAClB,SAAS,EAAE,SAAS,EACpB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EAAA,CACZ,CACE,EAAA,CAAA,CACP,CAAC;AACF,IAAA,OAAO,OAAO,CAAC;AACjB,CAAC;;;;"}