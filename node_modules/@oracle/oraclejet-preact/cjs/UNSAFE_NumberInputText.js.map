{"version":3,"file":"UNSAFE_NumberInputText.js","sources":["../../src/UNSAFE_NumberInputText/StepButton.tsx","../../src/UNSAFE_NumberInputText/Steppers.tsx","../../src/UNSAFE_NumberInputText/useSteppers.tsx","../../src/UNSAFE_NumberInputText/NumberInputText.tsx","../../src/UNSAFE_NumberInputText/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { useCallback } from 'preact/hooks';\n\nimport { IconButton } from '../UNSAFE_IconButton';\nimport { BundleType } from '../resources/nls/bundle';\nimport { StepDirection, StepEvent } from './useSteppers';\nimport { TabbableModeContext } from '../hooks/UNSAFE_useTabbableMode';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\n\ntype Props = {\n  /**\n   * The direction of the step.\n   */\n  direction: StepDirection;\n\n  /**\n   * Whether the button is disabled.\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Called when a step request is made by clicking the button.\n   */\n  onStep?: (event: StepEvent) => void;\n\n  /**\n   * The children are Icons for the button.\n   */\n  children: ComponentChildren;\n};\n\n/**\n * A StepButton is used to request a \"step up\" or \"step down\" to a value in NumberInputText.\n * @param direction The direction of the step\n * @param isDisabled Whether the button should be disabled\n * @param onStep Handler called when the button is clicked\n * @param variant Represents different visual variants for the button\n */\nexport function StepButton({ direction, isDisabled, onStep, children }: Props) {\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const labelIncrease = translations.inputNumber_increase();\n  const labelDecrease = translations.inputNumber_decrease();\n  const label = direction === 'increase' ? labelIncrease : labelDecrease;\n\n  const handleClick = useCallback(() => {\n    onStep?.({ direction });\n  }, [onStep, direction]);\n\n  return (\n    <TabbableModeContext.Provider value={{ isTabbable: false }}>\n      <IconButton\n        isDisabled={isDisabled}\n        tooltip={label}\n        onAction={handleClick}\n        variant=\"borderless\">\n        {children}\n      </IconButton>\n    </TabbableModeContext.Provider>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\nimport { Grid } from '../UNSAFE_Grid';\n\nexport type Props = {\n  /**\n   *The children are StepButtons.\n   */\n  children: ComponentChildren;\n};\n\n// TODO: Replace Steppers with Buttonset when it becomes available\nexport function Steppers({ children }: Props) {\n  return (\n    <Grid align=\"center\" gap=\"1x\" gridTemplateColumns=\"1fr 1fr\">\n      {children}\n    </Grid>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Ref, useCallback } from 'preact/hooks';\nimport { useSpinning, StepProps } from '../hooks/UNSAFE_useSpinning';\nimport { StepButton } from './StepButton';\nimport { Steppers } from './Steppers';\nimport { IncrementIcon } from '../PRIVATE_ThemedIcons/IncrementIcon';\nimport { DecrementIcon } from '../PRIVATE_ThemedIcons/DecrementIcon';\nimport { MinusIcon } from '../PRIVATE_ThemedIcons/MinusIcon';\nimport { PlusIcon } from '../PRIVATE_ThemedIcons/PlusIcon';\n\nexport { StepDirection, StepEvent } from '../hooks/UNSAFE_useSpinning';\n\ntype Props = StepProps & {\n  /**\n   * Controls whether the step buttons are shown.\n   */\n  hasSteppers?: boolean;\n\n  /**\n   * Variant style of step buttons.\n   * @default directional\n   */\n  stepperVariant?: 'directional' | 'quantitative';\n\n  /**\n   * A ref to the input element.\n   */\n  inputRef: Ref<HTMLInputElement>;\n};\n\n/**\n * A hook for using stepping functionality with NumberInputText. Stepping can\n * be accomplished using the step up or down buttons or by pressing the arrow\n * up or arrow down keys. Holding down the buttons or keys produces continuous\n * step events.\n *\n * The hook returns a JSX element containing the step buttons, which can be\n * placed in the endContent of NumberInputText. It also returns\n * stepHandlerProps which should be spread onto the component to handle\n * keyboard stepping.\n *\n * @param hasSteppers Controls whether the step buttons are shown\n * @param stepperVariant Variant style of step buttons.\n * @param inputRef A ref to the input element\n * @param isStepDownDisabled Controls whether stepping down is disabled\n * @param isStepUpDisabled Controls whether stepping up is disabled\n * @param onSpin Called when a continuous step (aka spin) is requested\n * @param onSpinComplete Called when spinning is complete\n * @param onStep Called when a single step is requested\n * @returns An object containing the steppers and stepHandlerProps\n */\nexport const useSteppers = ({\n  hasSteppers,\n  stepperVariant,\n  inputRef,\n  isStepDownDisabled,\n  isStepUpDisabled,\n  onSpin,\n  onSpinComplete,\n  onStep\n}: Props) => {\n  const { keyboardHandlerProps, pointerIncreaseHandlerProps, pointerDecreaseHandlerProps } =\n    useSpinning({ isStepDownDisabled, isStepUpDisabled, onSpin, onSpinComplete, onStep });\n\n  const handleClick = useCallback(() => {\n    // When a step button is clicked, set focus to the input.\n    // Don't need to call onStep because it's already called from onPointerDown.\n    // Button only calls its onAction handler after the mouse is released.\n    // If the button is disabled while stepping or spinning and you hit the min/max, the\n    // button handler is not called for this reason. Work around this by adding onClick\n    // to the outer div (when enabled, Button handles clicks and calls stopPropagation).\n    inputRef.current?.focus();\n  }, [inputRef]);\n\n  // when stepperVariant is directional, both buttons are wrapped in Steppers and placed in the endContent slot\n  // if it equals quantitative, only the increase button is placed in the endContent slot\n  const endContent = hasSteppers ? (\n    stepperVariant === 'directional' ? (\n      <Steppers>\n        <div aria-hidden=\"true\" {...pointerDecreaseHandlerProps}>\n          <StepButton direction=\"decrease\" isDisabled={isStepDownDisabled} onStep={handleClick}>\n            <DecrementIcon />\n          </StepButton>\n        </div>\n\n        <div aria-hidden=\"true\" {...pointerIncreaseHandlerProps}>\n          <StepButton direction=\"increase\" isDisabled={isStepUpDisabled} onStep={handleClick}>\n            <IncrementIcon />\n          </StepButton>\n        </div>\n      </Steppers>\n    ) : (\n      <div aria-hidden=\"true\" {...pointerIncreaseHandlerProps}>\n        <StepButton direction=\"increase\" isDisabled={isStepUpDisabled} onStep={handleClick}>\n          <PlusIcon />\n        </StepButton>\n      </div>\n    )\n  ) : undefined;\n\n  // when stepperVariant is quantitative, the decrease button is placed in the startContent slot\n  const startContent =\n    hasSteppers && stepperVariant === 'quantitative' ? (\n      <div aria-hidden=\"true\" {...pointerDecreaseHandlerProps}>\n        <StepButton direction=\"decrease\" isDisabled={isStepDownDisabled} onStep={handleClick}>\n          <MinusIcon />\n        </StepButton>\n      </div>\n    ) : undefined;\n\n  // stepHandlerProps will be spread onto the parent to handle\n  // stepping functionality via the arrow up or down keys.\n  const stepHandlerProps = hasSteppers ? keyboardHandlerProps : {};\n\n  return { startContent, endContent, stepHandlerProps };\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps, Ref } from 'preact';\nimport { forwardRef } from 'preact/compat';\nimport { useCallback, useRef } from 'preact/hooks';\nimport { FocusableHandle, useFocusableTextField } from '../hooks/UNSAFE_useFocusableTextField';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { FormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { useHover } from '../hooks/UNSAFE_useHover';\nimport { useTextField } from '../hooks/UNSAFE_useTextField';\nimport { Label } from '../UNSAFE_Label';\nimport { usePrefixSuffix } from '../hooks/UNSAFE_usePrefixSuffix';\n\nimport {\n  ReadonlyTextField,\n  ReadonlyTextFieldInput,\n  TextField,\n  TextFieldInput\n} from '../UNSAFE_TextField';\nimport {\n  InlineUserAssistance,\n  CompactUserAssistance,\n  UserAssistanceDensityType\n} from '../UNSAFE_UserAssistance';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\nimport { Size } from '../utils/UNSAFE_size';\nimport { StepEvent, useSteppers } from './useSteppers';\nimport { ValueUpdateDetail } from '../utils/UNSAFE_valueUpdateDetail';\nimport { useCurrentValueReducer } from '../hooks/UNSAFE_useCurrentValueReducer';\n\ntype TextFieldInputProps = ComponentProps<typeof TextFieldInput>;\n\ntype InlineUserAssistanceProps = ComponentProps<typeof InlineUserAssistance>;\n\ntype StepperProps = Parameters<typeof useSteppers>[0];\n\ntype NumberInputTextProps = {\n  /**\n   * Controls whether the step down button is disabled.\n   */\n  isStepDownDisabled?: boolean;\n\n  /**\n   * Controls whether the step up button is disabled.\n   */\n  isStepUpDisabled?: boolean;\n\n  /**\n   * Called when a continuous step is requested (aka \"spin\")\n   * by holding down the arrow up or arrow down keys, or\n   * by pressing and holding down a step button.\n   */\n  onSpin?: (event: StepEvent) => void;\n\n  /**\n   * Called when spinning is complete and the user has\n   * released the arrow key or step button.\n   */\n  onSpinComplete?: () => void;\n\n  /**\n   * Called when a step is requested by clicking a step button\n   * or by pressing the arrow up or arrow down keys.\n   */\n  onStep?: (event: StepEvent) => void;\n};\n\ntype Props = NumberInputTextProps &\n  Pick<StepperProps, 'stepperVariant' | 'hasSteppers'> & {\n    /**+\n     * The ID of an element (or space separated IDs of multiple elements) that\n     * describes the input.\n     */\n    'aria-describedby'?: TextFieldInputProps['aria-describedby'];\n\n    /**\n     * The maximum allowed value. Used for the aria-valuemax attribute.\n     */\n    'aria-valuemax'?: TextFieldInputProps['aria-valuemax'];\n\n    /**\n     * The minimum allowed value. Used for the aria-valuemin attribute.\n     */\n    'aria-valuemin'?: TextFieldInputProps['aria-valuemin'];\n\n    /**\n     * The number value of the component. Used for the aria-valuenow attribute.\n     */\n    'aria-valuenow'?: TextFieldInputProps['aria-valuenow'];\n\n    /**\n     * The formatted value of the component. Used for the aria-valueText\n     * attribute to provide a more human readable text alternative for\n     * aria-valuenow.\n     */\n    'aria-valuetext'?: TextFieldInputProps['aria-valuetext'];\n\n    /**\n     * Text to provide guidance to help the user understand what data to enter.\n     */\n    assistiveText?: InlineUserAssistanceProps['assistiveText'];\n\n    /**\n     * Dictates component's autocomplete state.\n     * This attribute indicates whether the value of the control can be automatically completed by the browser.\n     * The common values are \"on\" and \"off\".\n     */\n    autoComplete?: TextFieldInputProps['autoComplete'];\n\n    /**\n     * Autofocus specifies whether the component will get focus when the page is loaded.\n     * If it is set to true then the associated component will get input focus when the page is loaded.\n     * Setting this property doesn't set the focus to the component: it tells the browser to focus\n     * to it when the element is inserted in the document.\n     */\n    autoFocus?: TextFieldInputProps['autoFocus'];\n\n    /**\n     * Help source URL associated with the component.\n     */\n    helpSourceLink?: InlineUserAssistanceProps['helpSourceLink'];\n\n    /**\n     * Custom text to be rendered for the <code>helpSourceLink</code>.\n     */\n    helpSourceText?: InlineUserAssistanceProps['helpSourceText'];\n\n    /**\n     * Specifies whether the component is disabled.\n     */\n    isDisabled?: boolean;\n\n    /**\n     * Specifies whether the component is readonly.\n     */\n    isReadonly?: boolean;\n\n    /**\n     * Specifies for accessibility purposes whether a value is required.\n     *\n     * Setting this property to <code>false</code> means that a value is not required to be\n     * committed by the user. Setting this property to <code>true</code> means that a value\n     * is required to be committed by the user.\n     */\n    isRequired?: TextFieldInputProps['isRequired'];\n\n    /**\n     * Specifies whether to show an indicator on screen that a value is required, for example\n     * before the user has committed a value.\n     */\n    isRequiredShown?: InlineUserAssistanceProps['isRequiredShown'];\n\n    /**\n     * Specifies the label associated with the field.\n     */\n    label: string;\n\n    /**\n     * Specifies where the label is positioned relative to the field.\n     */\n    labelEdge?: 'inside' | 'start' | 'top' | 'none';\n\n    /**\n     * Specifies the width of the label when <code>labelEdge</code> is <code>\"start\"</code>.\n     */\n    labelStartWidth?: Size;\n\n    /**\n     * Messages to show on screen that are associated with the component.\n     */\n    messages?: InlineUserAssistanceProps['messages'];\n\n    /**\n     * A short hint to display before the user enters a value.\n     */\n    placeholder?: TextFieldInputProps['placeholder'];\n\n    /**\n     * The prefix displays as regular text before the input text, and inline with it.\n     * The prefix is not editable or focusable.\n     */\n    prefix?: string;\n\n    /**\n     * The suffix displays as regular text after the input text, and inline with it.\n     * The suffix is not editable or focusable.\n     */\n    suffix?: string;\n\n    /**\n     * Specifies how to align text within the field.\n     */\n    textAlign?: TextFieldInputProps['textAlign'];\n\n    /**\n     * Specifies the density of the user assistance presentation. It can be set to:\n     * <ul>\n     * <li><code>'efficient'</code>: Show inline and reserve space to prevent layout reflow when user\n     * assistance text is displayed.</li>\n     * <li><code>'reflow'</code>: Show inline. Layout will reflow when text is displayed.</li>\n     * <li><code>'compact'</code>: Messages, help, hints, and required will not be shown inline; they will show in a mode that keeps the screen more compact, like a popup for the messages, and a required icon to indicate Required. </li>\n     * </ul>\n     */\n    userAssistanceDensity?: UserAssistanceDensityType;\n\n    /**\n     * The current possibly formatted display value of the component.\n     */\n    value?: TextFieldInputProps['value'];\n\n    /**\n     * The style variant of the component.\n     */\n    variant?: TextFieldInputProps['variant'];\n\n    /**\n     * The type of virtual keyboard to display for entering a value on mobile browsers.\n     * This property has no effect on desktop browsers.\n     */\n    virtualKeyboard?: 'auto' | 'number' | 'text';\n\n    /**\n     * Callback invoked when the user commits the entered value by either blurring or pressing Enter.\n     */\n    onCommit?: TextFieldInputProps['onCommit'];\n\n    /**\n     * Callback invoked each time the user changes the value of the field. For example, if the user\n     * types 'abcd', this callback will be called four times with the value as 'a', 'ab', 'abc' and 'abcd'\n     * respectively.\n     */\n    onInput: TextFieldInputProps['onInput'];\n  };\n\nexport const NumberInputText = forwardRef(\n  (\n    {\n      'aria-describedby': ariaDescribedBy,\n      'aria-valuemax': ariaValueMax,\n      'aria-valuemin': ariaValueMin,\n      'aria-valuenow': ariaValueNow,\n      'aria-valuetext': ariaValueText,\n      assistiveText,\n      autoComplete = 'off',\n      autoFocus = false,\n      helpSourceLink,\n      helpSourceText,\n      isDisabled: propIsDisabled,\n      isReadonly: propIsReadonly,\n      isRequired = false,\n      isRequiredShown,\n      isStepDownDisabled: propIsStepDownDisabled,\n      isStepUpDisabled: propIsStepUpDisabled,\n      hasSteppers = false,\n      stepperVariant = 'directional',\n      label,\n      labelEdge: propLabelEdge,\n      labelStartWidth: propLabelStartWidth,\n      messages,\n      placeholder,\n      prefix,\n      suffix,\n      textAlign: propTextAlign,\n      userAssistanceDensity: propUserAssistanceDensity,\n      value,\n      variant = 'default',\n      virtualKeyboard,\n      onInput,\n      onCommit,\n      onSpin,\n      onSpinComplete,\n      onStep\n    }: Props,\n    ref?: Ref<FocusableHandle>\n  ) => {\n    const { currentCommitValue, dispatch } = useCurrentValueReducer({ value });\n    const onInputAndDispatch = useCallback(\n      (detail: ValueUpdateDetail<string>) => {\n        dispatch({ type: 'input', payload: detail.value });\n        onInput?.(detail);\n      },\n      [onInput, dispatch]\n    );\n    const onCommitAndDispatch = useCallback(\n      (detail: ValueUpdateDetail<string>) => {\n        dispatch({ type: 'commit', payload: detail.value });\n        onCommit?.(detail);\n      },\n      [onCommit, dispatch]\n    );\n    const {\n      isDisabled: isFormDisabled,\n      isReadonly: isFormReadonly,\n      labelEdge: formLabelEdge,\n      labelStartWidth: formLabelStartWidth,\n      textAlign: formTextAlign,\n      userAssistanceDensity: formUserAssistanceDensity\n    } = useFormContext();\n    // default to FormContext values if component properties are not specified\n    const isDisabled = propIsDisabled ?? isFormDisabled;\n    const isReadonly = propIsReadonly ?? isFormReadonly;\n    const labelEdge = propLabelEdge ?? formLabelEdge;\n    const labelStartWidth = propLabelStartWidth ?? formLabelStartWidth;\n    const textAlign = propTextAlign ?? formTextAlign;\n    const userAssistanceDensity = propUserAssistanceDensity ?? formUserAssistanceDensity;\n\n    const { enabledElementRef, focusProps, isFocused, readonlyElementRef } = useFocusableTextField<\n      HTMLInputElement,\n      HTMLDivElement\n    >({ isDisabled, isReadonly, ref });\n    const { hoverProps } = useHover({ isDisabled: isReadonly || isDisabled || false });\n    const {\n      baseId,\n      formFieldContext,\n      inputProps,\n      labelProps,\n      textFieldProps,\n      userAssistanceProps\n    } = useTextField({\n      ariaDescribedBy,\n      helpSourceLink,\n      helpSourceText,\n      isDisabled,\n      isFocused,\n      isReadonly,\n      isRequiredShown,\n      labelEdge,\n      messages,\n      styleVariant: variant,\n      userAssistanceDensity,\n      value\n    });\n    // Disable the steppers if the number input is disabled.\n    const isStepDownDisabled = isDisabled || propIsStepDownDisabled;\n    const isStepUpDisabled = isDisabled || propIsStepUpDisabled;\n\n    // stepHandlerProps contains keyup and keydown handlers\n    // for stepping using the arrow up and down keys.\n    const { startContent, endContent, stepHandlerProps } = useSteppers({\n      hasSteppers,\n      stepperVariant,\n      inputRef: enabledElementRef,\n      isStepDownDisabled,\n      isStepUpDisabled,\n      onSpin,\n      onSpinComplete,\n      onStep\n    });\n\n    const {\n      renderedPrefix,\n      renderedSuffix,\n      text: valuePrefixSuffix,\n      ariaLabelledBy\n    } = usePrefixSuffix({\n      baseId,\n      hasEndContent: endContent !== undefined,\n      hasInsideLabel: label !== undefined && labelEdge === 'inside',\n      hasStartContent: startContent !== undefined,\n      hasValue: formFieldContext.hasValue,\n      isDisabled,\n      isFocused,\n      labelId: labelProps.id,\n      prefix,\n      suffix,\n      value\n    });\n\n    const labelComp = labelEdge !== 'none' ? <Label {...labelProps}>{label}</Label> : undefined;\n\n    const fieldLabelProps = {\n      label: labelEdge !== 'none' ? labelComp : undefined,\n      labelEdge: labelEdge !== 'none' ? labelEdge : undefined,\n      labelStartWidth: labelEdge !== 'none' ? labelStartWidth : undefined\n    };\n\n    const ariaLabel = labelEdge === 'none' ? label : undefined;\n    const isInlineDensity =\n      userAssistanceDensity === 'efficient' || userAssistanceDensity === 'reflow';\n\n    const inlineUserAssistance = isInlineDensity ? (\n      isDisabled || isReadonly ? (\n        // save space for user assistance if density is 'efficient', even though we don't\n        // render user assistance for disabled or readonly fields\n        userAssistanceDensity !== 'efficient' ? undefined : (\n          <InlineUserAssistance\n            userAssistanceDensity={userAssistanceDensity}\n            {...userAssistanceProps}\n          />\n        )\n      ) : (\n        <InlineUserAssistance\n          assistiveText={assistiveText}\n          fieldLabel={label}\n          helpSourceLink={helpSourceLink}\n          helpSourceText={helpSourceText}\n          messages={messages}\n          isRequiredShown={isRequiredShown}\n          userAssistanceDensity={userAssistanceDensity}\n          {...userAssistanceProps}\n        />\n      )\n    ) : undefined;\n\n    const anchorRef = useRef<HTMLDivElement>(null);\n\n    const compactUserAssistance =\n      userAssistanceDensity === 'compact' ? (\n        <CompactUserAssistance\n          anchorRef={anchorRef}\n          messages={messages}\n          assistiveText={assistiveText}\n          {...userAssistanceProps}\n        />\n      ) : undefined;\n\n    if (isReadonly) {\n      return (\n        <FormFieldContext.Provider value={formFieldContext}>\n          <ReadonlyTextField\n            role=\"presentation\"\n            compactUserAssistance={compactUserAssistance}\n            inlineUserAssistance={inlineUserAssistance}\n            onBlur={focusProps.onfocusout}\n            onFocus={focusProps.onfocusin}\n            ref={anchorRef}\n            {...fieldLabelProps}>\n            <ReadonlyTextFieldInput\n              aria-describedby={inputProps['aria-describedby']}\n              aria-label={ariaLabel}\n              aria-labelledby={labelProps.id}\n              as=\"div\"\n              autoFocus={autoFocus}\n              elementRef={readonlyElementRef}\n              textAlign={textAlign}\n              value={valuePrefixSuffix}\n              hasEmptyLabel={label === '' && labelEdge === 'none'}\n              hasInsideLabel={label !== undefined && labelEdge === 'inside'}\n            />\n          </ReadonlyTextField>\n        </FormFieldContext.Provider>\n      );\n    }\n\n    // If ariaValueText is the same as ariaValueNow.toString, no need to show it.\n    const valueText =\n      ariaValueNow === undefined\n        ? ariaValueText\n        : ariaValueNow.toString() !== ariaValueText\n        ? ariaValueText\n        : undefined;\n\n    const mainContent = (\n      <>\n        {renderedPrefix}\n        <TextFieldInput\n          aria-labelledby={ariaLabelledBy}\n          aria-label={ariaLabel}\n          aria-valuemax={ariaValueMax}\n          aria-valuemin={ariaValueMin}\n          aria-valuenow={ariaValueNow}\n          aria-valuetext={valueText}\n          autoComplete={autoComplete}\n          autoFocus={autoFocus}\n          currentCommitValue={currentCommitValue}\n          hasEmptyLabel={label === '' && labelEdge === 'none'}\n          hasEndContent={endContent !== undefined}\n          hasInsideLabel={labelComp !== undefined && labelEdge === 'inside'}\n          hasPrefix={renderedPrefix !== undefined}\n          hasStartContent={startContent !== undefined}\n          hasSuffix={renderedSuffix !== undefined}\n          inputRef={enabledElementRef}\n          isRequired={isRequired}\n          placeholder={placeholder}\n          role={hasSteppers ? 'spinbutton' : undefined}\n          textAlign={textAlign}\n          type={isMobile() ? virtualKeyboard : undefined}\n          value={isDisabled ? valuePrefixSuffix : value}\n          onCommit={onCommitAndDispatch}\n          onInput={onInputAndDispatch}\n          {...inputProps}\n          {...stepHandlerProps}\n        />\n        {renderedSuffix}\n      </>\n    );\n\n    return (\n      <FormFieldContext.Provider value={formFieldContext}>\n        <TextField\n          startContent={startContent}\n          endContent={endContent}\n          compactUserAssistance={compactUserAssistance}\n          inlineUserAssistance={inlineUserAssistance}\n          mainContent={mainContent}\n          onBlur={focusProps.onfocusout}\n          onFocus={focusProps.onfocusin}\n          mainFieldRef={anchorRef}\n          hasZeroStartMargin={hasSteppers && stepperVariant === 'quantitative'}\n          {...textFieldProps}\n          {...fieldLabelProps}\n          {...hoverProps}\n        />\n      </FormFieldContext.Provider>\n    );\n  }\n);\n\n/**\n * Helper function to determine whether the current device is a mobile device\n * @returns true if running on a mobile device, false otherwise\n */\nfunction isMobile() {\n  const deviceType = getClientHints().deviceType;\n  return deviceType === 'phone' || deviceType === 'tablet';\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { NumberInputText } from './NumberInputText';\n"],"names":["useTranslationBundle","useCallback","_jsx","TabbableModeContext","IconButton","Grid","useSpinning","_jsxs","DecrementIcon","IncrementIcon","PlusIcon","MinusIcon","forwardRef","useCurrentValueReducer","useFormContext","useFocusableTextField","useHover","useTextField","usePrefixSuffix","Label","InlineUserAssistance","useRef","CompactUserAssistance","FormFieldContext","ReadonlyTextField","ReadonlyTextFieldInput","_Fragment","TextFieldInput","TextField","getClientHints"],"mappings":"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"}