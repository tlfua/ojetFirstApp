/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');
require('./utils/UNSAFE_classNames.js');
var hooks_UNSAFE_usePress = require('./hooks/UNSAFE_usePress.js');
var hooks_UNSAFE_useComponentTheme = require('./hooks/UNSAFE_useComponentTheme.js');
var hooks_UNSAFE_useInteractionStyle = require('./hooks/UNSAFE_useInteractionStyle.js');
var UNSAFE_Link_themes_redwood_LinkTheme = require('./UNSAFE_Link/themes/redwood/LinkTheme.js');
var classNames = require('./classNames-d619a292.js');

const noop = () => { };
function Link({ href, variant, placement, target, 'aria-describedby': ariaDescribedBy, 'aria-label': accessibleLabel, 'aria-labelledby': ariaLabelledBy, children, onClick }) {
    const { interactionProps, applyPseudoHoverStyle, applyHoverStyle } = hooks_UNSAFE_useInteractionStyle.useInteractionStyle();
    const { classes } = hooks_UNSAFE_useComponentTheme.useComponentTheme(UNSAFE_Link_themes_redwood_LinkTheme.LinkRedwoodTheme, {
        needsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',
        pseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',
        variant,
        placement
    });
    const linkClasses = classNames.classNames([classes]);
    const { pressProps } = hooks_UNSAFE_usePress.usePress(onClick ?? noop);
    return (jsxRuntime.jsx("a", { href: href, "aria-describedby": ariaDescribedBy, "aria-label": accessibleLabel, "aria-labelledby": ariaLabelledBy, target: target, ...pressProps, ...interactionProps, class: linkClasses, children: children }));
}

exports.Link = Link;
//# sourceMappingURL=Link-7ecefc54.js.map
