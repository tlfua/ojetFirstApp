{"version":3,"file":"Label-bb9ff3c9.js","sources":["../../src/UNSAFE_Label/Label.tsx"],"sourcesContent":["import { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { StyledComponentProps } from '../utils/UNSAFE_typeUtils';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { CompactLabelAssistance } from '../UNSAFE_UserAssistance';\n\nimport { LabelStyles, LabelVariantOptions } from './themes/LabelStyles.css';\nimport { TextFieldRedwoodTheme } from '../UNSAFE_TextField/themes/redwood/TextFieldTheme';\nimport { LabelRedwoodTheme } from './themes/redwood/LabelTheme';\n\ntype StyleProps = Exclude<Props, 'children' | 'forId' | 'id'> & {\n  hasValue?: boolean;\n  isFocused?: boolean;\n};\n\ntype StyledLabelProps = StyledComponentProps<'label', StyleProps>;\n\nconst StyledLabel = ({\n  hasValue,\n  readonly,\n  disabled,\n  isFocused,\n  isRequiredShown,\n  helpIconId,\n  helpSourceLink,\n  helpSourceText,\n  userAssistanceDensity = 'reflow',\n  variant = 'inside',\n  parentComponentVariant = 'textField',\n  ...props\n}: StyledLabelProps) => {\n  const { isFormLayout, isReadonly: isReadonlyForm, labelWrapping } = useFormContext();\n\n  const isInside = variant === 'inside' || variant === 'insideError' || variant === 'insideWarning';\n  const inTextField = parentComponentVariant === 'textField';\n\n  // because variants have to match strings, we have to take any boolean props and convert\n  // them to a string value, (ie prefixed with \"is\" or \"non\")\n  const {\n    classes,\n    styles: { uaDensityCompactLabel, uaDensityCompactLabelStart, uaDensityCompactLabelTopInside }\n  } = useComponentTheme<LabelVariantOptions, LabelStyles>(LabelRedwoodTheme, {\n    labelWrapping,\n    position: variant,\n    inside: isInside ? 'isInside' : 'notInside',\n    inEnabledForm: isFormLayout && !isReadonlyForm ? 'isInEnabledForm' : 'notInEnabledForm',\n    readonly: readonly ? 'isReadonly' : 'notReadonly',\n    focused: isFocused ? 'isFocused' : 'nonFocused',\n    formLayout: isFormLayout ? 'isFormLayout' : 'nonFormLayout',\n    readonlyForm: isReadonlyForm ? 'isReadonlyForm' : 'notReadonlyForm',\n    value: hasValue ? 'hasValue' : 'noValue',\n    valueOrFocus: hasValue || isFocused ? 'hasValueOrFocus' : 'noValueOrFocus',\n    animatedWhenInside: inTextField ? 'isAnimated' : 'notAnimated',\n    disabled: inTextField && disabled ? 'isDisabled' : 'nonDisabled',\n    userAssistanceDensity\n  });\n\n  const { baseTheme: textFieldTheme } = useComponentTheme(TextFieldRedwoodTheme);\n\n  // TODO: We need to decide whether to standardize on 'class' or 'className'.  Otherwise, we'll\n  // run into issues destructuring style interpolations, for example having to concatenate both.\n\n  const compactLabelStyles = classNames([\n    uaDensityCompactLabel,\n    variant === 'start' ? uaDensityCompactLabelStart : uaDensityCompactLabelTopInside\n  ]);\n  const compactUADLabel = <label {...props} class={compactLabelStyles} />;\n\n  return userAssistanceDensity === 'compact' ? (\n    <div class={classNames([classes, textFieldTheme])}>\n      {variant !== 'start' && compactUADLabel}\n      <CompactLabelAssistance\n        isRequiredShown={isRequiredShown}\n        helpIconId={helpIconId}\n        helpSourceLink={helpSourceLink}\n        helpSourceText={helpSourceText}\n        labelEdge={variant === 'top' || variant === 'start' ? variant : 'inside'}\n      />\n      {variant === 'start' && compactUADLabel}\n    </div>\n  ) : (\n    <label {...props} class={classNames([classes, textFieldTheme])} />\n  );\n};\n\ntype Props = {\n  /**\n   * Specifies how messages and assistive text are shown.\n   */\n  userAssistanceDensity?: 'reflow' | 'efficient' | 'compact';\n  /**\n   * Id to use for the help icon in compact user assistance density.\n   */\n  helpIconId?: string;\n  /**\n   * Help source link for compact user assistance density.\n   */\n  helpSourceLink?: string;\n  /**\n   * Help source text for compact user assistance density.\n   */\n  helpSourceText?: string;\n  /**\n   * Specifies whether to show an indicator on screen that a value is required, for example\n   * before the user has committed a value.\n   */\n  isRequiredShown?: boolean;\n  /**\n   * The text to be used for the label\n   */\n  children?: string;\n  /**\n   * The id to set on the label\n   */\n  id?: string;\n  /**\n   * The id of the form control for which this label will be used\n   */\n  forId?: string;\n  /**\n   * Determines how the label is going to be styled\n   */\n  variant?: 'inside' | 'start' | 'top' | 'insideError' | 'insideWarning';\n  /**\n   * Determines how the label is going to be styled in based on parent component.\n   */\n  parentComponentVariant?: 'textField' | 'radioGroup';\n};\n\nexport const Label = ({ forId, ...props }: Props) => {\n  const { hasValue, isDisabled, isFocused, isReadonly } = useFormFieldContext();\n  return (\n    <StyledLabel\n      for={forId}\n      hasValue={hasValue}\n      disabled={isDisabled}\n      isFocused={isFocused}\n      readonly={isReadonly}\n      {...props}\n    />\n  );\n};\n"],"names":["useFormContext","useComponentTheme","LabelRedwoodTheme","TextFieldRedwoodTheme","classNames","_jsx","_jsxs","CompactLabelAssistance","useFormFieldContext"],"mappings":"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"}