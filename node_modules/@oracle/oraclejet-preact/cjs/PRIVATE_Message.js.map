{"version":3,"file":"PRIVATE_Message.js","sources":["../../src/PRIVATE_Message/MessageCustomStartIcon.tsx","../../src/PRIVATE_Message/MessageHeader.tsx","../../src/PRIVATE_Message/Message.tsx","../../src/PRIVATE_Message/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { messageStartIconStyles } from './themes/MessageStyles.css';\nimport { MessageRendererDataItem } from './Message.types';\n\n/**\n * Props for the StartIcon component\n */\ntype Props<K, D> = {\n  /**\n   * The data item for rendering the start icon\n   */\n  item: MessageRendererDataItem<K, D>;\n\n  /**\n   * A custom renderer for rendering the start icon\n   */\n  renderer: (item: MessageRendererDataItem<K, D>) => ComponentChildren;\n};\n\n/**\n * Component for rendering custom icon/content for start icon in Message\n */\nfunction MessageCustomStartIcon<K, D>({ item, renderer }: Props<K, D>) {\n  // TODO:  Refactor to utilize useComponentTheme and multiVariantStyles.\n  const classes = classNames([\n    messageStartIconStyles.base,\n    // for now only toast has support for custom icon\n    messageStartIconStyles.toast,\n    messageStartIconStyles.customToast\n  ]);\n  return (\n    <div class={classes} role=\"presentation\" data-oj-message-custom-icon=\"\">\n      {renderer(item)}\n    </div>\n  );\n}\n\nexport { MessageCustomStartIcon };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { messageHeaderStyles } from './themes/MessageStyles.css';\nimport { MessageVariant } from './Message.types';\n\n/**\n * Props for the MessageHeader component\n */\ntype MessageHeaderProps = {\n  variant?: MessageVariant;\n  children?: ComponentChildren;\n};\n/**\n * A component that styles the header for the message component\n * @param param0 Props\n * @returns MessageHeader component instance\n */\nexport function MessageHeader({ children, variant = 'banner' }: MessageHeaderProps) {\n  const rootClasses = classNames([messageHeaderStyles.base, messageHeaderStyles[variant]]);\n  return (\n    <div role=\"presentation\" class={rootClasses}>\n      {children}\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, Ref, VNode } from 'preact';\nimport { useCallback, useEffect, useRef } from 'preact/hooks';\nimport { Flex } from '../UNSAFE_Flex';\nimport { MessageToastItem } from '../UNSAFE_MessageToast';\nimport { Timer } from '../utils/PRIVATE_timer';\nimport { classNames as cx } from '../utils/UNSAFE_classNames';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { messageStyles } from './themes/MessageStyles.css';\nimport { MessageRendererDataItem, MessageSeverity } from './Message.types';\nimport { MessageCloseButton } from './MessageCloseButton';\nimport { MessageCustomStartIcon } from './MessageCustomStartIcon';\nimport { MessageDetail } from './MessageDetail';\nimport { isValidValueForProp } from './MessageFormattingUtils';\nimport { MessageHeader } from './MessageHeader';\nimport { MessageStartIcon } from './MessageStartIcon';\nimport { MessageSummary } from './MessageSummary';\nimport { MessageTimestamp } from './MessageTimestamp';\nimport { playSound, severityBasedStyleClass } from './MessageUtils';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { MessageBannerVariantOptions } from '../UNSAFE_MessageBanner';\nimport { MessageBannerRedwoodTheme } from '../UNSAFE_MessageBanner/themes/redwood/MessageBannerTheme';\n\n// TODO: Refactor Message Item types\n// \n\n/**\n * An object representing a single message in Message component.\n */\nexport type MessageItem = {\n  /**\n   * Defines whether or not to include the close icon for the message\n   *\n   * @default 'on'\n   */\n  closeAffordance?: 'on' | 'off';\n\n  /**\n   * Defines the detail text of the message\n   */\n  detail?: string;\n\n  /**\n   * Defines the severity of the message\n   */\n  severity?: MessageSeverity;\n\n  /**\n   * Defines the sound to be played when opening the message\n   */\n  sound?: 'default' | 'none' | string;\n\n  /**\n   * Defines the primary text of the message\n   */\n  summary?: string;\n\n  /**\n   * Defines the timestamp for the message in ISO format\n   */\n  timestamp?: string;\n};\n\n/**\n * Props for the Message Component\n */\ntype Props<Key, Data> = {\n  /**\n   * A ref object for holding reference to this component\n   */\n  messageRef?: Ref<HTMLDivElement>;\n\n  /**\n   * The index of the current message instance\n   */\n  index?: number;\n\n  /**\n   * The message item with all the necessary data in it\n   */\n  item: Item<Key, Data>;\n\n  /**\n   * A renderer that renders the close button in the message.\n   */\n  closeButtonRenderer?: (title: string, onAction: (event?: Event) => void) => VNode;\n\n  /**\n   * A custom renderer for rendering the detail content\n   */\n  detailRenderer?: (item: MessageRendererDataItem<Key, Data>) => ComponentChildren;\n\n  /**\n   * A custom renderer for rendering the start icon\n   */\n  iconRenderer?: (item: MessageRendererDataItem<Key, Data>) => ComponentChildren;\n\n  /**\n   * Triggered when a user tries to close a message through UI interaction. The parent\n   * should listen to this event and remove the corresponding message item from the data\n   * which would then result in the message to be removed from the DOM. If the parent\n   * fails to remove the message item from the data, then no change will be done in the\n   * UI by the component.\n   */\n  onClose?: (item: Item<Key, Data>) => void;\n\n  /**\n   * A message can be a Banner message or Toast message.\n   *\n   * Furthermore, a Banner message can have a different look and feel. For example, when using page-level\n   * messaging the messages need to be rendered from edge to edge without any outline. On the other\n   * hand, when they are being used in a section of a page or a dialog, they need to be rendered\n   * with an outline. This attribute can be used to specify where the component is being used so that\n   * it will render the messages accordingly.\n   */\n  variant?: 'pageBanner' | 'sectionBanner' | 'toast';\n\n  /**\n   * Translations resources\n   */\n  translations?: {\n    /**\n     * Label for the message close button\n     */\n    close?: string;\n\n    /**\n     * Text for 'error' severity level\n     */\n    error?: string;\n\n    /**\n     * Text for 'warning' severity level\n     */\n    warning?: string;\n\n    /**\n     * Text for 'info' severity level\n     */\n    info?: string;\n\n    /**\n     * Text for 'confirmation' severity level\n     */\n    confirmation?: string;\n  };\n};\n\n/**\n * Determines the base variant of the message - banner or toast\n *\n * @param variant The message variant\n * @returns The base variant\n */\nfunction getBaseVariant(variant: 'pageBanner' | 'sectionBanner' | 'toast') {\n  if (variant === 'pageBanner' || variant === 'sectionBanner') {\n    return 'banner';\n  }\n  return 'toast';\n}\n\n/**\n * Determines if a severity icon is needed based on the component severity\n *\n * @param severity The component severity\n * @returns Whether or not to render the severity icon\n */\nfunction isSeverityIconNeeded(\n  severity: MessageSeverity\n): severity is Exclude<MessageSeverity, 'none'> {\n  const isValidSeverity = isValidValueForProp(severity, 'severity');\n  return isValidSeverity && severity !== 'none';\n}\n\n/**\n * Default timeout duration for autoTimeout in milliseconds\n */\nconst MIN_SECONDS = 5;\nconst DEFAULT_TIMEOUT = MIN_SECONDS * 1000;\n\n/**\n * Component that renders an individual message\n */\nfunction Message<K extends string | number = string | number, D extends MessageItem = MessageItem>({\n  closeButtonRenderer,\n  detailRenderer,\n  iconRenderer,\n  index = -1,\n  item,\n  onClose,\n  messageRef = () => {},\n  variant = 'pageBanner',\n  translations\n}: Props<K, D>) {\n  const { closeAffordance = 'on', severity = 'error', sound, summary, timestamp } = item.data;\n  const { autoTimeout = 'off' } = item.data as MessageToastItem;\n  const baseVariant = getBaseVariant(variant);\n\n  /**\n   * Handles clicking on the close icon of the message\n   */\n  const handleClose = useCallback(() => {\n    onClose?.(item);\n  }, [item, onClose]);\n\n  /**\n   * Handles closing the message on pressing Esc\n   */\n  const handleCloseOnEsc = useCallback(\n    (event: KeyboardEvent) => {\n      // Close the message only when closeAffordance is on\n      if (event.key === 'Escape' && closeAffordance === 'on') {\n        onClose?.(item);\n      }\n    },\n    [closeAffordance, item, onClose]\n  );\n\n  /**\n   * Set auto timeout for toast messages\n   */\n  const shouldTimeout = baseVariant === 'toast' && autoTimeout !== 'off';\n  const currentTimerRef = useRef<Timer>();\n  const timeout = typeof autoTimeout === 'number' ? autoTimeout : DEFAULT_TIMEOUT;\n  const timeoutDuration = autoTimeout === 'on' ? DEFAULT_TIMEOUT : timeout;\n\n  const startTimer = useCallback(() => {\n    if (currentTimerRef.current) return;\n\n    currentTimerRef.current = new Timer(handleClose, timeoutDuration);\n  }, [handleClose, timeoutDuration]);\n\n  const clearTimer = useCallback(() => {\n    if (!currentTimerRef.current) return;\n\n    currentTimerRef.current.clear();\n    currentTimerRef.current = undefined;\n  }, []);\n\n  const pauseTimer = useCallback(() => {\n    currentTimerRef.current?.pause();\n  }, []);\n\n  const resumeTimer = useCallback(() => {\n    currentTimerRef.current?.resume();\n  }, []);\n\n  useEffect(() => {\n    if (isValidValueForProp(sound)) {\n      // It is sufficient to check for the value to be a\n      // non-empty string. The playSound method takes care of the rest.\n      playSound(sound);\n    }\n\n    // on mount, start timer for toast messages if needed\n    if (shouldTimeout) {\n      startTimer();\n    }\n\n    return () => {\n      // clear out any pending timer\n      clearTimer();\n    };\n    // eslint-disable-next-line\n  }, []); // No deps to run this only on mount\n\n  const { variantClasses } = useComponentTheme<MessageBannerVariantOptions>(\n    MessageBannerRedwoodTheme,\n    {\n      severity\n    }\n  );\n\n  // TODO:  Refactor to utilize useComponentTheme and multiVariantStyles.\n  const rootClasses = cx([\n    baseVariant === 'banner' && variantClasses,\n    messageStyles.base[baseVariant],\n    // for now, we do not have severity based styling on toast. So, we ignore this class for toasts\n    variant !== 'toast' && severityBasedStyleClass(severity, baseVariant),\n    variant === 'sectionBanner' && messageStyles.section\n  ]);\n\n  const contentClasses = cx([messageStyles.content.base, messageStyles.content[baseVariant]]);\n\n  // We will be animating the root div, so add padding to an inner wrapper div so that\n  // when animating height looks smooth. If padding were to be added to the root\n  // div, the animation will not be smooth as height will never reach 0 due to the\n  // padding.\n  return (\n    <div\n      ref={messageRef}\n      class={rootClasses}\n      role=\"alert\"\n      aria-atomic=\"true\"\n      data-oj-key={`${typeof item.key}-${item.key}`}\n      tabIndex={0}\n      onKeyUp={handleCloseOnEsc}\n      onfocusin={pauseTimer}\n      onfocusout={resumeTimer}>\n      <div class={contentClasses}>\n        {iconRenderer ? (\n          <MessageCustomStartIcon item={{ ...item, index }} renderer={iconRenderer} />\n        ) : isSeverityIconNeeded(severity) ? (\n          <MessageStartIcon severity={severity} variant={baseVariant} translations={translations} />\n        ) : null}\n        <Flex direction=\"column\" flex=\"1\" gap=\"--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x\">\n          <MessageHeader variant={baseVariant}>\n            <MessageSummary variant={baseVariant} text={summary} />\n            {isValidValueForProp(timestamp, 'timestamp') && variant !== 'toast' && (\n              <MessageTimestamp variant={baseVariant} value={timestamp!} />\n            )}\n          </MessageHeader>\n          <MessageDetail\n            variant={baseVariant}\n            item={{ ...item, index }}\n            renderer={detailRenderer}\n          />\n        </Flex>\n        {closeAffordance === 'on' && (\n          <MessageCloseButton\n            buttonRenderer={closeButtonRenderer}\n            title={translations?.close}\n            variant={baseVariant}\n            onAction={handleClose}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { Message };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport { Message } from './Message';\nexport { MessageCloseButton } from './MessageCloseButton';\nexport { MessageDetail } from './MessageDetail';\nexport { formatTimestamp, isValidValueForProp } from './MessageFormattingUtils';\nexport { MessagesManager } from './MessagesManager';\nexport { MessageStartIcon } from './MessageStartIcon';\nexport { MessageSummary } from './MessageSummary';\nexport { MessageTimestamp } from './MessageTimestamp';\nexport {\n  getRenderer,\n  getRendererWithoutIndex,\n  playSound,\n  throwError,\n  severityBasedStyleClass,\n  isSeverityIconNeeded\n} from './MessageUtils';\nexport type { MessageSeverity, MessageRendererDataItem } from './Message.types';\nexport { severities } from './Message.types';\n"],"names":["classNames","messageStartIconStyles","_jsx","messageHeaderStyles","isValidValueForProp","useCallback","useRef","Timer","useEffect","playSound","useComponentTheme","MessageBannerRedwoodTheme","cx","messageStyles","severityBasedStyleClass","_jsxs","MessageStartIcon","Flex","MessageSummary","MessageTimestamp","MessageDetail","MessageCloseButton"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEG;AACH,SAAS,sBAAsB,CAAO,EAAE,IAAI,EAAE,QAAQ,EAAe,EAAA;;IAEnE,MAAM,OAAO,GAAGA,qBAAU,CAAC;AACzB,QAAAC,+DAAsB,CAAC,IAAI;;AAE3B,QAAAA,+DAAsB,CAAC,KAAK;AAC5B,QAAAA,+DAAsB,CAAC,WAAW;AACnC,KAAA,CAAC,CAAC;AACH,IAAA,QACEC,cAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,OAAO,EAAE,IAAI,EAAC,cAAc,EAA6B,6BAAA,EAAA,EAAE,YACpE,QAAQ,CAAC,IAAI,CAAC,EAAA,CACX,EACN;AACJ;;ACxBA;;;;AAIG;AACG,SAAU,aAAa,CAAC,EAAE,QAAQ,EAAE,OAAO,GAAG,QAAQ,EAAsB,EAAA;AAChF,IAAA,MAAM,WAAW,GAAGF,qBAAU,CAAC,CAACG,4DAAmB,CAAC,IAAI,EAAEA,4DAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACzF,IAAA,QACED,cAAA,CAAA,KAAA,EAAA,EAAK,IAAI,EAAC,cAAc,EAAC,KAAK,EAAE,WAAW,EAAA,QAAA,EACxC,QAAQ,EAAA,CACL,EACN;AACJ;;AC0HA;;;;;AAKG;AACH,SAAS,cAAc,CAAC,OAAiD,EAAA;AACvE,IAAA,IAAI,OAAO,KAAK,YAAY,IAAI,OAAO,KAAK,eAAe,EAAE;AAC3D,QAAA,OAAO,QAAQ,CAAC;AACjB,KAAA;AACD,IAAA,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;;;;;AAKG;AACH,SAAS,oBAAoB,CAC3B,QAAyB,EAAA;IAEzB,MAAM,eAAe,GAAGE,0CAAmB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAClE,IAAA,OAAO,eAAe,IAAI,QAAQ,KAAK,MAAM,CAAC;AAChD,CAAC;AAED;;AAEG;AACH,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,MAAM,eAAe,GAAG,WAAW,GAAG,IAAI,CAAC;AAE3C;;AAEG;AACH,SAAS,OAAO,CAAmF,EACjG,mBAAmB,EACnB,cAAc,EACd,YAAY,EACZ,KAAK,GAAG,CAAC,CAAC,EACV,IAAI,EACJ,OAAO,EACP,UAAU,GAAG,MAAK,GAAG,EACrB,OAAO,GAAG,YAAY,EACtB,YAAY,EACA,EAAA;AACZ,IAAA,MAAM,EAAE,eAAe,GAAG,IAAI,EAAE,QAAQ,GAAG,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5F,MAAM,EAAE,WAAW,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,IAAwB,CAAC;AAC9D,IAAA,MAAM,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;AAE5C;;AAEG;AACH,IAAA,MAAM,WAAW,GAAGC,iBAAW,CAAC,MAAK;AACnC,QAAA,OAAO,GAAG,IAAI,CAAC,CAAC;AAClB,KAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;AAEpB;;AAEG;AACH,IAAA,MAAM,gBAAgB,GAAGA,iBAAW,CAClC,CAAC,KAAoB,KAAI;;QAEvB,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI,eAAe,KAAK,IAAI,EAAE;AACtD,YAAA,OAAO,GAAG,IAAI,CAAC,CAAC;AACjB,SAAA;KACF,EACD,CAAC,eAAe,EAAE,IAAI,EAAE,OAAO,CAAC,CACjC,CAAC;AAEF;;AAEG;IACH,MAAM,aAAa,GAAG,WAAW,KAAK,OAAO,IAAI,WAAW,KAAK,KAAK,CAAC;AACvE,IAAA,MAAM,eAAe,GAAGC,YAAM,EAAS,CAAC;AACxC,IAAA,MAAM,OAAO,GAAG,OAAO,WAAW,KAAK,QAAQ,GAAG,WAAW,GAAG,eAAe,CAAC;AAChF,IAAA,MAAM,eAAe,GAAG,WAAW,KAAK,IAAI,GAAG,eAAe,GAAG,OAAO,CAAC;AAEzE,IAAA,MAAM,UAAU,GAAGD,iBAAW,CAAC,MAAK;QAClC,IAAI,eAAe,CAAC,OAAO;YAAE,OAAO;QAEpC,eAAe,CAAC,OAAO,GAAG,IAAIE,yBAAK,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AACpE,KAAC,EAAE,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC,CAAC;AAEnC,IAAA,MAAM,UAAU,GAAGF,iBAAW,CAAC,MAAK;QAClC,IAAI,CAAC,eAAe,CAAC,OAAO;YAAE,OAAO;AAErC,QAAA,eAAe,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AAChC,QAAA,eAAe,CAAC,OAAO,GAAG,SAAS,CAAC;KACrC,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,MAAM,UAAU,GAAGA,iBAAW,CAAC,MAAK;AAClC,QAAA,eAAe,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;KAClC,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,MAAM,WAAW,GAAGA,iBAAW,CAAC,MAAK;AACnC,QAAA,eAAe,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC;KACnC,EAAE,EAAE,CAAC,CAAC;IAEPG,eAAS,CAAC,MAAK;AACb,QAAA,IAAIJ,0CAAmB,CAAC,KAAK,CAAC,EAAE;;;YAG9BK,sBAAS,CAAC,KAAK,CAAC,CAAC;AAClB,SAAA;;AAGD,QAAA,IAAI,aAAa,EAAE;AACjB,YAAA,UAAU,EAAE,CAAC;AACd,SAAA;AAED,QAAA,OAAO,MAAK;;AAEV,YAAA,UAAU,EAAE,CAAC;AACf,SAAC,CAAC;;AAEJ,KAAC,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,MAAM,EAAE,cAAc,EAAE,GAAGC,gDAAiB,CAC1CC,gFAAyB,EACzB;QACE,QAAQ;AACT,KAAA,CACF,CAAC;;IAGF,MAAM,WAAW,GAAGC,qBAAE,CAAC;QACrB,WAAW,KAAK,QAAQ,IAAI,cAAc;AAC1C,QAAAC,sDAAa,CAAC,IAAI,CAAC,WAAW,CAAC;;QAE/B,OAAO,KAAK,OAAO,IAAIC,oCAAuB,CAAC,QAAQ,EAAE,WAAW,CAAC;AACrE,QAAA,OAAO,KAAK,eAAe,IAAID,sDAAa,CAAC,OAAO;AACrD,KAAA,CAAC,CAAC;AAEH,IAAA,MAAM,cAAc,GAAGD,qBAAE,CAAC,CAACC,sDAAa,CAAC,OAAO,CAAC,IAAI,EAAEA,sDAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;;;IAM5F,QACEX,wBACE,GAAG,EAAE,UAAU,EACf,KAAK,EAAE,WAAW,EAClB,IAAI,EAAC,OAAO,EAAA,aAAA,EACA,MAAM,EAAA,aAAA,EACL,CAAG,EAAA,OAAO,IAAI,CAAC,GAAG,CAAI,CAAA,EAAA,IAAI,CAAC,GAAG,EAAE,EAC7C,QAAQ,EAAE,CAAC,EACX,OAAO,EAAE,gBAAgB,EACzB,SAAS,EAAE,UAAU,EACrB,UAAU,EAAE,WAAW,EAAA,QAAA,EACvBa,eAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,cAAc,EAAA,QAAA,EAAA,CACvB,YAAY,IACXb,cAAC,CAAA,sBAAsB,IAAC,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAI,CAAA,IAC1E,oBAAoB,CAAC,QAAQ,CAAC,IAChCA,cAAA,CAACc,iCAAgB,EAAA,EAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,YAAY,EAAA,CAAI,IACxF,IAAI,EACRD,eAAA,CAACE,SAAI,EAAA,EAAC,SAAS,EAAC,QAAQ,EAAC,IAAI,EAAC,GAAG,EAAC,GAAG,EAAC,2CAA2C,EAC/E,QAAA,EAAA,CAAAF,eAAA,CAAC,aAAa,EAAA,EAAC,OAAO,EAAE,WAAW,EACjC,QAAA,EAAA,CAAAb,cAAA,CAACgB,6BAAc,EAAA,EAAC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,GAAI,EACtDd,0CAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,IAAI,OAAO,KAAK,OAAO,KACjEF,cAAC,CAAAiB,iCAAgB,EAAC,EAAA,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,SAAU,EAAA,CAAI,CAC9D,CAAA,EAAA,CACa,EAChBjB,cAAC,CAAAkB,2BAAa,IACZ,OAAO,EAAE,WAAW,EACpB,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,KAAK,EAAE,EACxB,QAAQ,EAAE,cAAc,GACxB,CACG,EAAA,CAAA,EACN,eAAe,KAAK,IAAI,KACvBlB,cAAC,CAAAmB,qCAAkB,EACjB,EAAA,cAAc,EAAE,mBAAmB,EACnC,KAAK,EAAE,YAAY,EAAE,KAAK,EAC1B,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,WAAW,GACrB,CACH,CAAA,EAAA,CACG,EACF,CAAA,EACN;AACJ;;AC/UA;;;;;;AAMG;;;;;;;;;;;;;;;;;;;"}