{"version":3,"file":"UNSAFE_TextField.js","sources":["../../src/UNSAFE_TextField/ReadonlyTextField.tsx","../../src/UNSAFE_TextField/TextFieldContent.tsx","../../src/UNSAFE_TextField/StyledTextField.tsx","../../src/UNSAFE_TextField/TextField.tsx","../../src/UNSAFE_TextField/MaxLengthLiveRegion.tsx","../../src/UNSAFE_TextField/index.ts"],"sourcesContent":["import { ComponentChildren } from 'preact';\n\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { StyledComponentProps } from '../utils/UNSAFE_typeUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { Size } from '../utils/UNSAFE_size';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { ReadonlyTextFieldVariantOptions } from './themes/ReadonlyTextFieldStyles.css';\nimport { TextFieldStyles } from './themes/TextFieldStyles.css';\nimport { useInputGroupContext } from '../hooks/UNSAFE_useInputGroupContext';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { TextFieldRedwoodTheme } from './themes/redwood/TextFieldTheme';\nimport { LabelRedwoodTheme } from '../UNSAFE_Label/themes/redwood/LabelTheme';\nimport { FormLayoutRedwoodTheme } from './themes/redwood/FormLayoutTheme';\nimport { ReadonlyTextFieldRedwoodTheme } from './themes/redwood/ReadonlyTextFieldTheme';\n\ntype DivProps = HTMLAttributesSignalExcluded<HTMLDivElement>;\ntype UAProps = {\n  compactUserAssistance?: ComponentChildren;\n  inlineUserAssistance?: ComponentChildren;\n};\ntype InnerOuterClassNamesProps = {\n  outerClassNames?: string;\n  innerClassNames?: string;\n};\n\ntype StartTopLabelReadonlyTextFieldProps = Omit<DivProps, 'label'> &\n  UAProps &\n  InnerOuterClassNamesProps & {\n    label?: ComponentChildren;\n    labelEdge?: 'start' | 'top';\n    labelStartWidth?: Size;\n  };\n\nconst StartTopLabelReadonlyTextField = ({\n  outerClassNames,\n  innerClassNames,\n  label,\n  labelEdge,\n  labelStartWidth,\n  compactUserAssistance,\n  inlineUserAssistance,\n  children,\n  ...props\n}: StartTopLabelReadonlyTextFieldProps) => {\n  return (\n    <div {...props} class={outerClassNames}>\n      {compactUserAssistance}\n      <LabelValueLayout label={label} labelEdge={labelEdge} labelStartWidth={labelStartWidth}>\n        <div class={innerClassNames}>{children}</div>\n      </LabelValueLayout>\n      {inlineUserAssistance}\n    </div>\n  );\n};\n\ntype InsideLabelReadonlyTextFieldProps = DivProps & UAProps & InnerOuterClassNamesProps;\nconst InsideLabelReadonlyTextField = ({\n  outerClassNames,\n  innerClassNames,\n  compactUserAssistance,\n  inlineUserAssistance,\n  children,\n  ...props\n}: InsideLabelReadonlyTextFieldProps) => {\n  return (\n    <div {...props} class={outerClassNames}>\n      {compactUserAssistance}\n      <div class={innerClassNames}>{children}</div>\n      {inlineUserAssistance}\n    </div>\n  );\n};\n\nexport type StyleProps = UAProps & {\n  label?: ComponentChildren;\n  labelEdge?: 'inside' | 'start' | 'top';\n  variant?: 'textarea';\n};\n\ntype Props = StyledComponentProps<'div', StyleProps>;\n\nexport const ReadonlyTextField = ({ label, labelEdge, children, variant, ...props }: Props) => {\n  const { isFormLayout, isReadonly: isReadonlyForm } = useFormContext();\n  const { isLoading } = useFormFieldContext();\n  const hasInsideLabel = label !== undefined && labelEdge === 'inside';\n  const isInsideNonReadonlyForm = isFormLayout && !isReadonlyForm;\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n  const inputGroupContext = useInputGroupContext();\n  const hasGroupContext = inputGroupContext !== null;\n  // depending on browser direction, apply the appropriate styling.\n  // when 'rtl' the flex row direction is reversed.\n  const inputGroupPosition = inputGroupContext\n    ? inputGroupContext.last\n      ? isLtr\n        ? 'groupRight'\n        : 'groupLeft'\n      : inputGroupContext.index === 0\n      ? isLtr\n        ? 'groupLeft'\n        : 'groupRight'\n      : 'groupMiddle'\n    : undefined;\n\n  const { classes, styles } = useComponentTheme(TextFieldRedwoodTheme, {\n    readonly: 'isReadonly'\n  });\n  const { baseTheme: labelBaseTheme } = useComponentTheme(LabelRedwoodTheme);\n  const { baseTheme: formLayoutTheme } = useComponentTheme(FormLayoutRedwoodTheme);\n  const { classes: readonlyClassNames } = useComponentTheme<\n    ReadonlyTextFieldVariantOptions,\n    TextFieldStyles\n  >(ReadonlyTextFieldRedwoodTheme, {\n    insideNonReadonlyForm: isInsideNonReadonlyForm\n      ? 'isInsideNonReadonlyForm'\n      : 'notInsideNonReadonlyForm',\n    insideLabel: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n    textarea: variant === 'textarea' ? 'isTextArea' : 'notTextArea',\n    loading: isLoading ? 'isLoading' : 'notLoading',\n    withinGroup: hasGroupContext ? 'isWithinGroup' : undefined,\n    inputGroupPosition\n  });\n\n  const { formControlBase } = styles;\n  const outerClassNames = classNames([classes, formControlBase, formLayoutTheme, labelBaseTheme]);\n\n  if (label !== undefined && (labelEdge === 'start' || labelEdge === 'top')) {\n    return (\n      <StartTopLabelReadonlyTextField\n        outerClassNames={outerClassNames}\n        innerClassNames={readonlyClassNames}\n        label={label}\n        labelEdge={labelEdge}\n        {...props}>\n        {children}\n      </StartTopLabelReadonlyTextField>\n    );\n  }\n\n  return (\n    <InsideLabelReadonlyTextField\n      outerClassNames={outerClassNames}\n      innerClassNames={readonlyClassNames}\n      {...props}>\n      {label}\n      {children}\n    </InsideLabelReadonlyTextField>\n  );\n};\n","import { ComponentChildren, Ref } from 'preact';\n\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { Flex } from '../UNSAFE_Flex';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { TextFieldStyles, TextFieldVariantOptions } from './themes/TextFieldStyles.css';\nimport { useInputGroupContext } from '../hooks/UNSAFE_useInputGroupContext';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { TextFieldRedwoodTheme } from './themes/redwood/TextFieldTheme';\n\ntype VariantProps = {\n  contentVariant?: 'input' | 'textarea';\n  statusVariant?: 'error' | 'none' | 'warning';\n  styleVariant?: 'default' | 'embedded';\n};\n\ntype Props = VariantProps & {\n  mainContent?: ComponentChildren;\n  insideLabel?: ComponentChildren;\n  startContent?: ComponentChildren;\n  endContent?: ComponentChildren;\n  resize?: 'horizontal' | 'vertical' | 'both';\n  rootRef?: Ref<HTMLDivElement>;\n  hasZeroStartMargin?: boolean;\n};\n\n// Renders the oj-text-field-container dom which includes the\n// start, middle (where the inside label and inputElem goes),\n// and end pieces of the form component.\n// This does not include user assistance because that is rendered outside the\n// oj-text-field-container; that is rendered in the TextField component.\nexport const TextFieldContent = ({\n  contentVariant = 'input',\n  insideLabel,\n  mainContent,\n  startContent,\n  statusVariant = 'none',\n  styleVariant = 'default',\n  endContent,\n  resize,\n  rootRef,\n  hasZeroStartMargin\n}: Props) => {\n  const { isDisabled, isFocused, isLoading } = useFormFieldContext();\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n  const hasInsideLabel = insideLabel !== undefined;\n  const inputGroupContext = useInputGroupContext();\n  const hasGroupContext = inputGroupContext !== null;\n  // depending on browser direction, apply the appropriate styling.\n  // when 'rtl' the flex row direction is reversed.\n  const inputGroupPosition = inputGroupContext\n    ? inputGroupContext.last\n      ? isLtr\n        ? 'groupRight'\n        : 'groupLeft'\n      : inputGroupContext.index === 0\n      ? isLtr\n        ? 'groupLeft'\n        : 'groupRight'\n      : 'groupMiddle'\n    : undefined;\n\n  const {\n    variantClasses,\n    styles: { textFieldContainerBase }\n  } = useComponentTheme<TextFieldVariantOptions, TextFieldStyles>(TextFieldRedwoodTheme, {\n    statusVariant,\n    styleVariant,\n    contentVariant,\n    insideLabel: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n    focused: isFocused ? 'isFocused' : 'notFocused',\n    disabled: isDisabled ? 'isDisabled' : 'notDisabled',\n    loading: isLoading ? 'isLoading' : 'notLoading',\n    resize: resize ?? 'none',\n    withinGroup: hasGroupContext ? 'isWithinGroup' : undefined,\n    inputGroupPosition\n  });\n\n  const { variantClasses: startContentStyles } = useComponentTheme<TextFieldVariantOptions>(\n    TextFieldRedwoodTheme,\n    {\n      startContent: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n      startContentMargin: hasZeroStartMargin ? 'noStartMargin' : 'hasStartMargin',\n      startContentDisabled: isDisabled ? 'isDisabled' : 'notDisabled'\n    }\n  );\n  const { variantClasses: middleStyles } = useComponentTheme<TextFieldVariantOptions>(\n    TextFieldRedwoodTheme,\n    { middleContent: contentVariant }\n  );\n  const { variantClasses: endContentStyles } = useComponentTheme<TextFieldVariantOptions>(\n    TextFieldRedwoodTheme,\n    { endContent: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel' }\n  );\n\n  return (\n    <div\n      role=\"presentation\"\n      class={classNames([variantClasses, textFieldContainerBase])}\n      ref={rootRef}>\n      {startContent && (\n        <span class={startContentStyles}>\n          <Flex justify=\"center\" align=\"center\" hasZeroMargins={true}>\n            {startContent}\n          </Flex>\n        </span>\n      )}\n      <div class={middleStyles}>\n        {insideLabel}\n        {mainContent}\n      </div>\n      {endContent && (\n        <span class={endContentStyles}>\n          <Flex justify=\"center\" align=\"center\" hasZeroMargins={true}>\n            {endContent}\n          </Flex>\n        </span>\n      )}\n    </div>\n  );\n};\n","import { classNames } from '../utils/UNSAFE_classNames';\nimport { StyledComponentProps } from '../utils/UNSAFE_typeUtils';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TextFieldStyles, TextFieldVariantOptions } from './themes/TextFieldStyles.css';\nimport { useInputGroupContext } from '../hooks/UNSAFE_useInputGroupContext';\nimport { FormLayoutRedwoodTheme } from './themes/redwood/FormLayoutTheme';\nimport { LabelRedwoodTheme } from '../UNSAFE_Label/themes/redwood/LabelTheme';\nimport { TextFieldRedwoodTheme } from './themes/redwood/TextFieldTheme';\nimport { SkeletonRedwoodTheme } from '../UNSAFE_Skeleton/themes/redwood/SkeletonTheme';\n\nexport type StyleProps = {\n  hasInsideLabel?: boolean;\n  variant?: 'default' | 'embedded';\n};\ntype Props = StyledComponentProps<'div', StyleProps>;\n\nexport const StyledTextField = ({\n  hasInsideLabel = false,\n  variant = 'default',\n  ...props\n}: Props) => {\n  // because of the mismatch of height for inputs with inside labels and no labels,\n  // we'll have to set everything to the same min-height while within an input group context.\n  // Here we'll look to see if it's present and apply the style as needed\n  const groupContext = useInputGroupContext();\n  const { isReadonly } = useFormFieldContext();\n  const { baseTheme: formLayoutTheme } = useComponentTheme(FormLayoutRedwoodTheme);\n  const { baseTheme: labelBaseTheme } = useComponentTheme(LabelRedwoodTheme);\n  const { classes: textFieldClasses, styles } = useComponentTheme<\n    TextFieldVariantOptions,\n    TextFieldStyles\n  >(TextFieldRedwoodTheme, {\n    readonly: isReadonly ? 'isReadonly' : 'notReadonly',\n    formControlInsideLabel: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n    withinGroup: groupContext !== null ? 'isWithinGroup' : undefined\n  });\n\n  const { formControlBase, textFieldBase, textFieldEmbedded } = styles;\n\n  // because TextField components reference Skeleton scoped vars, we need to bring in the Skeleton base theme\n  // to pick up the scoped var definitions.\n  const { baseTheme: skeletonBaseTheme } = useComponentTheme(SkeletonRedwoodTheme);\n\n  const classes = classNames([\n    skeletonBaseTheme,\n    formControlBase,\n    textFieldBase,\n    variant === 'embedded' && textFieldEmbedded,\n    textFieldClasses,\n    formLayoutTheme,\n    labelBaseTheme\n  ]);\n\n  return <div {...props} class={classes} />;\n};\n","import { ComponentChildren, ComponentProps, Ref } from 'preact';\n\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { TextFieldContent } from './TextFieldContent';\nimport { StyledTextField } from './StyledTextField';\nimport { Size } from '../utils/UNSAFE_size';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\n// TextField takes the inputElem and userAssistanceContainer\n// and renders the form component's root dom, along with the\n// TextFieldContent, and the user assistance container.\n\n// The PickedProps are the ones we pass through to the the TextFieldContent\ntype PickedPropsFromTextFieldContent = Pick<\n  ComponentProps<typeof TextFieldContent>,\n  | 'hasZeroStartMargin'\n  | 'contentVariant'\n  | 'startContent'\n  | 'statusVariant'\n  | 'styleVariant'\n  | 'mainContent'\n  | 'endContent'\n  | 'resize'\n>;\ntype PickedPropsFromHTMLElement = Pick<HTMLAttributesSignalExcluded<HTMLElement>, 'id'>;\n// TODO: How should a parent component listen to events for the text field?  The recommendation\n// was to remove event listeners from TextField itself and instead configure the TextFieldInput\n// with them, for example, thus keeping TextField a more pure layout component.  The\n// TextFieldInput renders the focusable input element, and may be a more natural place for\n// listeners.  We would potentially have to add similar listeners for the ReadonlyTextField, but\n// that component renders the focusable element itself;  there is no TextFieldInput or analogous\n// component passed in.  (from review on 3/8/22)\ntype FocusEvents = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'onFocus' | 'onBlur'>;\ntype KeyEvents = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'onKeyDown'>;\ntype MouseEvents = Pick<\n  HTMLAttributesSignalExcluded<HTMLDivElement>,\n  'onMouseDown' | 'onMouseEnter' | 'onMouseLeave'\n>;\ntype LabelProps = {\n  label?: ComponentChildren;\n  labelEdge?: 'inside' | 'start' | 'top';\n  labelStartWidth?: Size;\n};\ntype Props = PickedPropsFromTextFieldContent &\n  PickedPropsFromHTMLElement &\n  FocusEvents &\n  KeyEvents &\n  MouseEvents &\n  LabelProps & {\n    compactUserAssistance?: ComponentChildren;\n    inlineUserAssistance?: ComponentChildren;\n    mainFieldRef?: Ref<HTMLDivElement>;\n  };\n\n// TODO: Do we need named props for start/endContent, or could they just be children that get\n// wrapped in a flex layout?  (from review on 3/8/22)\n\n// TODO: Instead of passing the inputElem, label, and userAssistance as named props here, should we\n// have a separate layout component that lays them out, which could just be passed as a child\n// to the TextField?  (from review on 3/8/22)\n\nexport const TextField = ({\n  contentVariant,\n  id,\n  endContent,\n  mainContent,\n  startContent,\n  compactUserAssistance,\n  inlineUserAssistance,\n  label,\n  labelEdge,\n  labelStartWidth,\n  mainFieldRef,\n  resize,\n  statusVariant,\n  styleVariant,\n  hasZeroStartMargin,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  onMouseDown,\n  onMouseEnter,\n  onMouseLeave\n}: Props) => {\n  // TODO: What are the implications for interoperability between new preact-based form components\n  // and the existing JET oj-form-layout?  The preact form components create their own start/top\n  // labels, while oj-form-layout expects to create those itself and wire them to the existing form\n  // components through attributes like labelled-by.  (from review on 3/8/22)\n\n  // TODO: How should a parent form component render component-specific content within TextField,\n  // for example an aria live region?  Instead of a children prop on TextField, could the parent\n  // component pass comp-specific content through other props, like inputElem?   The parent could\n  // have its own component that composes inputElem with additional DOM.  (from review on 3/8/22)\n\n  const isStartTop = label !== undefined && (labelEdge === 'start' || labelEdge === 'top');\n  const textFieldContent = (\n    <TextFieldContent\n      contentVariant={contentVariant}\n      endContent={endContent}\n      mainContent={mainContent}\n      resize={resize}\n      rootRef={mainFieldRef}\n      startContent={startContent}\n      statusVariant={statusVariant}\n      styleVariant={styleVariant}\n      hasZeroStartMargin={hasZeroStartMargin}\n      {...(!isStartTop ? { insideLabel: label } : {})}\n    />\n  );\n\n  const innerContent = (\n    <>\n      {compactUserAssistance}\n      {textFieldContent}\n      {inlineUserAssistance}\n    </>\n  );\n\n  const styledTextFieldChildren = isStartTop ? (\n    <LabelValueLayout label={label} labelEdge={labelEdge} labelStartWidth={labelStartWidth}>\n      {innerContent}\n    </LabelValueLayout>\n  ) : (\n    innerContent\n  );\n\n  return (\n    <StyledTextField\n      id={id}\n      hasInsideLabel={label !== undefined && labelEdge === 'inside'}\n      onfocusin={onFocus}\n      onfocusout={onBlur}\n      onKeyDown={onKeyDown}\n      onMouseDown={onMouseDown}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      variant={styleVariant}>\n      {styledTextFieldChildren}\n    </StyledTextField>\n  );\n};\n","import { Fragment } from 'preact';\nimport { useDebounce } from '../hooks/UNSAFE_useDebounce';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { LiveRegion } from '../UNSAFE_LiveRegion';\n\ntype Props = {\n  isMaxLengthExceeded?: boolean;\n  maxLength: number;\n  valueLength?: number;\n};\n\nconst MAX_LENGTH_UPDATE_DELAY = 500;\n\nexport function MaxLengthLiveRegion({ isMaxLengthExceeded, maxLength, valueLength = 0 }: Props) {\n  // Comment copied from InputBase.js in Big JET:\n  // Only update the aria-live div when the user has paused for more than\n  // 500 milliseconds. That way, we avoid queued up aria-live messages which\n  // would be annoying and not helpful. The 500ms was agreed upon in the\n  // accessibility review meeting.\n  const debouncedRemainingChars = useDebounce(maxLength - valueLength, MAX_LENGTH_UPDATE_DELAY);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const maxLengthExceededTranslatedString = translations.formControl_maxLengthExceeded({\n    MAX_LENGTH: `${maxLength}`\n  });\n  const remainingCharsTranslatedString = translations.formControl_maxLengthRemaining({\n    CHARACTER_COUNT: `${debouncedRemainingChars}`\n  });\n\n  return (\n    <Fragment>\n      <LiveRegion>{remainingCharsTranslatedString}</LiveRegion>\n      {isMaxLengthExceeded && (\n        <LiveRegion type=\"assertive\">{maxLengthExceededTranslatedString}</LiveRegion>\n      )}\n    </Fragment>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { ReadonlyTextFieldInput } from './ReadonlyTextFieldInput';\nexport { ReadonlyTextField } from './ReadonlyTextField';\nexport { TextField } from './TextField';\nexport { TextFieldInput } from './TextFieldInput';\nexport { getInputId } from './TextFieldUtils';\nexport { MaxLengthLiveRegion } from './MaxLengthLiveRegion';\n"],"names":["_jsxs","_jsx","LabelValueLayout","useFormContext","useFormFieldContext","useUser","useInputGroupContext","useComponentTheme","TextFieldRedwoodTheme","LabelRedwoodTheme","FormLayoutRedwoodTheme","ReadonlyTextFieldRedwoodTheme","classNames","Flex","SkeletonRedwoodTheme","_Fragment","useDebounce","useTranslationBundle","Fragment","LiveRegion"],"mappings":"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"}