{"version":3,"file":"UNSAFE_units.js","sources":["../../../src/utils/UNSAFE_units/units.ts"],"sourcesContent":["import { stringLiteralArray } from '../UNSAFE_arrayUtils';\nimport { isString } from '../UNSAFE_stringUtils';\n\nconst is = (Ctor: any) => (val: any) =>\n  (val != null && val.constructor === Ctor) || val instanceof Ctor;\n\nconst isNumber = is(Number);\nconst isNumeral = (n: any) => !isNaN(parseFloat(n)) && !isNaN(n - 0);\nconst isZero = (n: any) => n === 0 || n === '0';\n\nconst units = stringLiteralArray(['px', '%', 'em', 'rem', 'vh', 'vw']);\nconst endsWithUnitRegExp = new RegExp(`(${units.join('|')})$`);\n\ntype Unit = typeof units[number];\n\nconst hasUnit = (val: any) => isString(val) && endsWithUnitRegExp.test(val);\nconst toUnit = (unit: Unit) => (n: string | number) =>\n  isZero(n) || hasUnit(n) || !isNumeral(n) ? n : n + unit;\n\nconst px = toUnit('px');\n\nexport { isNumber, isZero, hasUnit, px };\n"],"names":["stringLiteralArray","isString"],"mappings":";;;;;;;;;AAGA,MAAM,EAAE,GAAG,CAAC,IAAS,KAAK,CAAC,GAAQ,KACjC,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,WAAW,KAAK,IAAI,KAAK,GAAG,YAAY,IAAI,CAAC;AAEnE,MAAM,QAAQ,GAAG,EAAE,CAAC,MAAM,EAAE;AAC5B,MAAM,SAAS,GAAG,CAAC,CAAM,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACrE,MAAM,MAAM,GAAG,CAAC,CAAM,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI;AAEhD,MAAM,KAAK,GAAGA,0CAAkB,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACvE,MAAM,kBAAkB,GAAG,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,EAAA,CAAI,CAAC,CAAC;AAI/D,MAAM,OAAO,GAAG,CAAC,GAAQ,KAAKC,oBAAQ,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE;AAC5E,MAAM,MAAM,GAAG,CAAC,IAAU,KAAK,CAAC,CAAkB,KAChD,MAAM,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;AAE1D,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI;;;;;;;"}