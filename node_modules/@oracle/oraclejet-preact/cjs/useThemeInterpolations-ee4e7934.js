/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

var hooks_UNSAFE_useColorScheme = require('./hooks/UNSAFE_useColorScheme.js');
var hooks_UNSAFE_useScale = require('./hooks/UNSAFE_useScale.js');
var utils_UNSAFE_interpolations_theme = require('./utils/UNSAFE_interpolations/theme.js');
var utils_UNSAFE_mergeInterpolations = require('./utils/UNSAFE_mergeInterpolations.js');
var UNSAFE_Environment = require('./index-c3ee789d.js');

/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
// This hook encasulates the logic required to determine which theme style classes are needed
// for the current environment context's colorScheme and scale value.  This would be used when
// rendering dom outside of the current dom tree, but desire to match the colorScheme and scale
// of the original dom tree.
function useThemeInterpolations() {
    const colorScheme = hooks_UNSAFE_useColorScheme.useColorScheme();
    const currentScale = hooks_UNSAFE_useScale.useScale();
    // We don't want to interpolate the default environment values for scacle.  Those should get picked up by default.
    // This fixes an issue for core pack components that utilize the Layer component, when in a legacy cookbook page.
    const scale = currentScale !== UNSAFE_Environment.DefaultEnvironment.scale ? currentScale : undefined;
    const interpolations = utils_UNSAFE_mergeInterpolations.mergeInterpolations([...Object.values(utils_UNSAFE_interpolations_theme.themeInterpolations)]);
    const { class: classes } = interpolations({ colorScheme, scale });
    return classes;
}

exports.useThemeInterpolations = useThemeInterpolations;
//# sourceMappingURL=useThemeInterpolations-ee4e7934.js.map
