{"version":3,"file":"ReadonlyTextFieldInput-df771dd2.js","sources":["../../src/UNSAFE_TextField/ReadonlyTextFieldInput.tsx"],"sourcesContent":["import { ComponentChildren, Ref } from 'preact';\nimport { useAccessibleContext } from '../hooks/UNSAFE_useAccessibleContext';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { textInterpolations } from '../utils/UNSAFE_interpolations/text';\nimport type { TextProps } from '../utils/UNSAFE_interpolations/text';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport {\n  ReadonlyTextFieldInputVariantOptions,\n  ReadonlyTextFieldInputStyles\n} from './themes/ReadonlyTextFieldInputStyles.css';\nimport { ReadonlyTextFieldInputRedwoodTheme } from './themes/redwood/ReadonlyTextFieldInputTheme';\nimport { BundleType } from '../resources/nls/bundle';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\n\ntype AutoFocusProp = HTMLAttributesSignalExcluded<HTMLInputElement>['autofocus'];\n\ntype ReadonlyAsInputProps = {\n  as: 'input';\n  type: HTMLAttributesSignalExcluded<HTMLInputElement>['type'];\n  elementRef?: Ref<HTMLInputElement>;\n  rows?: never;\n};\n\ntype ReadonlyAsTextAreaProps = {\n  as: 'textarea';\n  elementRef?: Ref<HTMLTextAreaElement | HTMLDivElement>;\n  type?: never;\n  rows?: number;\n};\n\ntype ReadonlyAsDivProps = {\n  as?: 'div';\n  elementRef?: Ref<HTMLTextAreaElement | HTMLDivElement>;\n  type?: never;\n  rows?: never;\n};\n\ntype Props = TextProps &\n  (ReadonlyAsDivProps | ReadonlyAsInputProps | ReadonlyAsTextAreaProps) & {\n    'aria-describedby'?: string;\n    'aria-label'?: string;\n    'aria-labelledby'?: string;\n    autoFocus?: AutoFocusProp;\n    hasEmptyLabel?: boolean;\n    hasInsideLabel?: boolean;\n    inlineUserAssistance?: ComponentChildren;\n    innerReadonlyField?: ComponentChildren;\n    value?: string;\n    variant?: 'textarea';\n  };\n\n/**\n * Merge multiple ids into a space-separated list\n * @param ids The ids to be merged\n * @returns The space separated string of ids\n */\nfunction mergeIDs(...ids: (string | undefined)[]) {\n  return ids.filter(Boolean).join(' ') || undefined;\n}\n\nexport function ReadonlyTextFieldInput({\n  'aria-describedby': ariaDescribedBy,\n  'aria-label': ariaLabel,\n  'aria-labelledby': inputLabelledBy,\n  autoFocus,\n  as = 'div',\n  elementRef,\n  hasEmptyLabel,\n  hasInsideLabel = false,\n  inlineUserAssistance,\n  innerReadonlyField,\n  rows,\n  type,\n  value = '',\n  variant,\n  ...props\n}: Props) {\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const loadingAriaLabel = translations.formControl_loading();\n  const { isFormLayout, isReadonly: isReadonlyForm } = useFormContext();\n  const { isLoading } = useFormFieldContext();\n  const ariaLabelForReadonly = isLoading ? loadingAriaLabel : ariaLabel;\n\n  // get classes for text align\n  const interpolations = [...Object.values(textInterpolations)];\n  const styleInterpolations = mergeInterpolations<Props>(interpolations);\n  const { class: styleInterpolationClasses } = styleInterpolations(props);\n  const { classes: themeClasses } = useComponentTheme<\n    ReadonlyTextFieldInputVariantOptions,\n    ReadonlyTextFieldInputStyles\n  >(ReadonlyTextFieldInputRedwoodTheme, {\n    textarea: variant === 'textarea' ? 'isTextArea' : 'notTextArea',\n    formLayout: isFormLayout ? 'isFormLayout' : 'notFormLayout',\n    readonlyForm: isReadonlyForm ? 'isReadonlyForm' : 'notReadonlyForm',\n    insideLabel: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel'\n  });\n\n  const readonlyDivClasses = classNames([themeClasses, styleInterpolationClasses]);\n\n  // JET-52914 - Implement Tabbable mode API contract in InputText\n  // spread tabbableModeProps on component\n  const { isTabbable, tabbableModeProps } = useTabbableMode();\n\n  // JET-52089: add unsafe API for specifying an external label which is added to ariaLabelledBy on the input or div,\n  // only when labelEdge is 'none' and label is ''. Since ariaLabelledBy takes precedence over all other\n  // kinds of labels, this helps to ensure we don't override a meaningful label.\n  const { UNSAFE_ariaLabelledBy } = useAccessibleContext();\n  const ariaLabelledBy = hasEmptyLabel\n    ? mergeIDs(inputLabelledBy, UNSAFE_ariaLabelledBy)\n    : inputLabelledBy;\n\n  if (as === 'input') {\n    return (\n      <input\n        aria-describedby={ariaDescribedBy}\n        aria-label={ariaLabelForReadonly}\n        aria-labelledby={ariaLabelledBy}\n        autofocus={autoFocus}\n        class={readonlyDivClasses}\n        readonly={true}\n        // @ts-ignore\n        ref={elementRef}\n        type={type}\n        value={value}\n        {...(!isTabbable && tabbableModeProps)}\n      />\n    );\n  }\n  if (as === 'textarea') {\n    return (\n      <textarea\n        aria-describedby={ariaDescribedBy}\n        aria-label={ariaLabelForReadonly}\n        aria-labelledby={ariaLabelledBy}\n        autofocus={autoFocus}\n        class={readonlyDivClasses}\n        readonly={true}\n        // @ts-ignore\n        ref={elementRef}\n        rows={rows}\n        {...(!isTabbable && tabbableModeProps)}>\n        {value}\n      </textarea>\n    );\n  }\n  return (\n    <div\n      aria-describedby={ariaDescribedBy}\n      aria-label={ariaLabelForReadonly}\n      aria-labelledby={ariaLabelledBy}\n      aria-readonly={true}\n      autofocus={autoFocus}\n      class={readonlyDivClasses}\n      // @ts-ignore\n      ref={elementRef}\n      role=\"textbox\"\n      {...tabbableModeProps}>\n      {value}\n    </div>\n  );\n}\n"],"names":["useTranslationBundle","useFormContext","useFormFieldContext","textInterpolations","mergeInterpolations","useComponentTheme","ReadonlyTextFieldInputRedwoodTheme","classNames","useTabbableMode","useAccessibleContext","_jsx"],"mappings":";;;;;;;;;;;;;;;;AAwDA;;;;AAIG;AACH,SAAS,QAAQ,CAAC,GAAG,GAA2B,EAAA;AAC9C,IAAA,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC;AACpD,CAAC;AAEK,SAAU,sBAAsB,CAAC,EACrC,kBAAkB,EAAE,eAAe,EACnC,YAAY,EAAE,SAAS,EACvB,iBAAiB,EAAE,eAAe,EAClC,SAAS,EACT,EAAE,GAAG,KAAK,EACV,UAAU,EACV,aAAa,EACb,cAAc,GAAG,KAAK,EACtB,oBAAoB,EACpB,kBAAkB,EAClB,IAAI,EACJ,IAAI,EACJ,KAAK,GAAG,EAAE,EACV,OAAO,EACP,GAAG,KAAK,EACF,EAAA;AACN,IAAA,MAAM,YAAY,GAAGA,sDAAoB,CAAa,0BAA0B,CAAC,CAAC;AAClF,IAAA,MAAM,gBAAgB,GAAG,YAAY,CAAC,mBAAmB,EAAE,CAAC;IAC5D,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,cAAc,EAAE,GAAGC,0CAAc,EAAE,CAAC;AACtE,IAAA,MAAM,EAAE,SAAS,EAAE,GAAGC,oDAAmB,EAAE,CAAC;IAC5C,MAAM,oBAAoB,GAAG,SAAS,GAAG,gBAAgB,GAAG,SAAS,CAAC;;IAGtE,MAAM,cAAc,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAACC,mDAAkB,CAAC,CAAC,CAAC;AAC9D,IAAA,MAAM,mBAAmB,GAAGC,oDAAmB,CAAQ,cAAc,CAAC,CAAC;IACvE,MAAM,EAAE,KAAK,EAAE,yBAAyB,EAAE,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACxE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,GAAGC,gDAAiB,CAGjDC,8FAAkC,EAAE;QACpC,QAAQ,EAAE,OAAO,KAAK,UAAU,GAAG,YAAY,GAAG,aAAa;QAC/D,UAAU,EAAE,YAAY,GAAG,cAAc,GAAG,eAAe;QAC3D,YAAY,EAAE,cAAc,GAAG,gBAAgB,GAAG,iBAAiB;QACnE,WAAW,EAAE,cAAc,GAAG,gBAAgB,GAAG,eAAe;AACjE,KAAA,CAAC,CAAC;IAEH,MAAM,kBAAkB,GAAGC,qBAAU,CAAC,CAAC,YAAY,EAAE,yBAAyB,CAAC,CAAC,CAAC;;;IAIjF,MAAM,EAAE,UAAU,EAAE,iBAAiB,EAAE,GAAGC,4CAAe,EAAE,CAAC;;;;AAK5D,IAAA,MAAM,EAAE,qBAAqB,EAAE,GAAGC,sDAAoB,EAAE,CAAC;IACzD,MAAM,cAAc,GAAG,aAAa;AAClC,UAAE,QAAQ,CAAC,eAAe,EAAE,qBAAqB,CAAC;UAChD,eAAe,CAAC;IAEpB,IAAI,EAAE,KAAK,OAAO,EAAE;AAClB,QAAA,QACEC,cACoB,CAAA,OAAA,EAAA,EAAA,kBAAA,EAAA,eAAe,gBACrB,oBAAoB,EAAA,iBAAA,EACf,cAAc,EAC/B,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,kBAAkB,EACzB,QAAQ,EAAE,IAAI;;AAEd,YAAA,GAAG,EAAE,UAAU,EACf,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACR,IAAC,CAAC,UAAU,IAAI,iBAAiB,CAAC,EAAA,CACtC,EACF;AACH,KAAA;IACD,IAAI,EAAE,KAAK,UAAU,EAAE;AACrB,QAAA,QACEA,cACoB,CAAA,UAAA,EAAA,EAAA,kBAAA,EAAA,eAAe,gBACrB,oBAAoB,EAAA,iBAAA,EACf,cAAc,EAC/B,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,kBAAkB,EACzB,QAAQ,EAAE,IAAI;;AAEd,YAAA,GAAG,EAAE,UAAU,EACf,IAAI,EAAE,IAAI,EACN,IAAC,CAAC,UAAU,IAAI,iBAAiB,CAAC,YACrC,KAAK,EAAA,CACG,EACX;AACH,KAAA;AACD,IAAA,QACEA,cACoB,CAAA,KAAA,EAAA,EAAA,kBAAA,EAAA,eAAe,EACrB,YAAA,EAAA,oBAAoB,qBACf,cAAc,EAAA,eAAA,EAChB,IAAI,EACnB,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,kBAAkB;;AAEzB,QAAA,GAAG,EAAE,UAAU,EACf,IAAI,EAAC,SAAS,EACV,GAAA,iBAAiB,EACpB,QAAA,EAAA,KAAK,EACF,CAAA,EACN;AACJ;;;;"}