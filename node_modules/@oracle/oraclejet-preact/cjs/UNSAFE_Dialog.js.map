{"version":3,"file":"UNSAFE_Dialog.js","sources":["../../src/UNSAFE_Dialog/Dialog.tsx"],"sourcesContent":["import { ComponentChild, RefObject } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\n\nimport { useAnimation, UseAnimationConfig } from '../hooks/UNSAFE_useAnimation';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { DialogStyles } from './themes/DialogStyles.css';\n\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { Layer } from '../UNSAFE_Layer';\nimport { Modal } from '../UNSAFE_Modal';\nimport { FocusTrap } from '../UNSAFE_FocusTrap';\nimport { WindowOverlay, WindowOverlayPlacement, Offset } from '../UNSAFE_WindowOverlay';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { DialogRedwoodTheme } from './themes/redwood/DialogTheme';\n\n// animation states\ntype Status = 'opening' | 'closing' | 'unmounted';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children' | 'role'>;\n\ntype OnCloseDetail = {\n  reason: 'escapeKey';\n};\n\ntype DialogProps = IntrinsicProps & {\n  /**\n   * Optional ref for an element to focus on when component mounts\n   */\n  autoFocusRef?: RefObject<HTMLElement>;\n\n  /**\n   * On Close callback.\n   */\n  onClose?: (detail: OnCloseDetail) => void;\n\n  /**\n   * On opening or closing transition end callback.\n   */\n  onTransitionEnd?: (value: boolean) => void;\n\n  /**\n   * Determines whether the Dialog is open.\n   */\n  isOpen: boolean;\n\n  /**\n   * Dialog header content. Can be a string or VNode (Component Child).\n   * <p>\n   * When a plain string is passed, it will be used as the dialog title. Otherwise, the prop value\n   * will be used as the header content.\n   * </p>\n   * <p>\n   * Dialog will automatically refer to the header content as the accessible label.\n   * The user can override this behavior by specifying the <code>aria-labelledby</code> property\n   * and setting its value as needed.\n   * </p>\n   */\n  header?: ComponentChild;\n\n  /**\n   * Dialog footer content.\n   */\n  footer?: ComponentChild;\n\n  /**\n   * Determines dialog modality. Default is 'modal'.\n   */\n  modality?: 'modal' | 'modeless';\n\n  /**\n   * Determines placement of the dialog relative to the viewport.\n   * Supported values are:\n   * <p> <code>center</code>, <code>top</code>, <code>top-start</code>, <code>top-end</code>,\n   * <code>end</code>, <code>end-top</code>, <code>end-bottom</code>,\n   * <code>bottom</code>, <code>bottom-start</code>, <code>bottom-end</code>,\n   * <code>start</code>, <code>start-top</code>, <code>start-bottom</code>\n   * </p>\n   * Default is <code>center</code>.\n   */\n  placement?: WindowOverlayPlacement;\n\n  /**\n   * Determines the offset of the Dialog from its core placement along the specified axes.\n   *\n   * Offset could be a number or an object\n   *\n   * An object has the following type:\n   * <pre>\n   *   {\n   *     mainAxis?: number;\n   *     crossAxis?: number;\n   *   }\n   * </pre>\n   * For the <code>center</code> placement the convention for the offset type is that mainAxis defines\n   * offset from the top, crossAxis defines offset from the left side of the view port.\n   *\n   * A number is a shortcut for setting the mainAxis.\n   */\n  offset?: Offset;\n\n  /**\n   * Specifies the ARIA role type. Depending on how the dialog is used in the page, the developer\n   * should choose from the following:\n   * <ul>\n   *   <li><code>dialog</code> defines an application window that is designed to interrupt the current\n   *      processing of an application in order to prompt the user to enter information or require\n   *      a response.</li>\n   *   <li><code>alertdialog</code> defines type of dialog that contains an alert message, where initial\n   *      focus goes to an element within the dialog.</li>\n   * </ul>\n   */\n  role?: 'dialog' | 'alertdialog';\n\n  /**\n   * Optional <code>aria-labelledby</code> property referring to the content to be used as Dialog's\n   * accessible <label htmlFor=\"\" className=\"\"></label>\n   * If not specified, the Dialog will automatically refer to the entire header content as the accessible label.\n   */\n  'aria-labelledby'?: string;\n\n  /**\n   * Optional accessible description for the dialog.\n   */\n  'aria-describedby'?: string;\n};\n\n// dialog header\n\ntype DialogHeaderProps = Pick<DialogProps, 'header'> & {\n  id?: string;\n};\n\nconst StyledDialogHeader = ({ header, id }: DialogHeaderProps) => {\n  const { styles } = useComponentTheme<never, DialogStyles>(DialogRedwoodTheme);\n  const content: ComponentChild =\n    typeof header === 'string' ? (\n      <h1 id={id} className={styles.dialogTitleStyle}>\n        {header}\n      </h1>\n    ) : (\n      header\n    );\n\n  return (\n    <div aria-labelledby={id} className={styles.dialogHeaderStyle}>\n      {content}\n    </div>\n  );\n};\n\n// styled dialog\n\ntype MainProps = Pick<DialogProps, 'children' | 'header' | 'footer' | 'role'> &\n  Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'onKeyDown'> & {\n    labelId?: string;\n    ariaLabelledBy?: string;\n    ariaDescribedBy?: string;\n  };\n\nconst StyledDialog = forwardRef(\n  (\n    {\n      children,\n      header,\n      footer,\n      labelId,\n      role,\n      ariaLabelledBy,\n      ariaDescribedBy,\n      onKeyDown\n    }: MainProps,\n    ref: ForwardedRef<HTMLDivElement | null>\n  ) => {\n    const { classes, styles } = useComponentTheme<never, DialogStyles>(DialogRedwoodTheme);\n\n    return (\n      <div\n        ref={ref}\n        className={classes}\n        style={{ opacity: 0 }}\n        onKeyDown={onKeyDown}\n        role={role}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}>\n        <div className={styles.dialogContainerStyle}>\n          <StyledDialogHeader id={labelId} header={header} />\n          <div className={styles.dialogContentStyle}>\n            <div className={styles.dialogBodyStyle}>{children}</div>\n          </div>\n          <div className={styles.dialogFooterStyle}>{footer}</div>\n        </div>\n      </div>\n    );\n  }\n);\n\n// main Dialog component\n\n/**\n * WAI-ARIA-compliant dialog component. A dialog is a floating window that typically contains\n * a title bar and a content area.\n * The dialog is generally placed on top of the rest of the page content. It can be either modal\n * (only the content in the dialog can be interacted with) or non-modal (it's still possible\n * to interact with content outside of the dialog).\n */\nexport const Dialog = ({\n  autoFocusRef,\n  children,\n  isOpen,\n  header = '',\n  footer,\n  modality = 'modal',\n  placement = 'center',\n  offset = 0,\n  onClose,\n  onTransitionEnd,\n  role = 'dialog',\n  'aria-labelledby': ariaLabelledBy,\n  'aria-describedby': ariaDescribedBy\n}: DialogProps) => {\n  const [state, setState] = useState<Status>(isOpen ? 'opening' : 'unmounted');\n\n  const uniqueId = useId();\n  const labelId = ariaLabelledBy ? ariaLabelledBy : uniqueId;\n\n  useEffect(() => {\n    // Ignore state update on initial render\n    if (state === 'unmounted' && !isOpen) {\n      return;\n    }\n    setState(isOpen ? 'opening' : 'closing');\n  }, [isOpen, state]);\n\n  const { nodeRef } = useAnimation<Status, HTMLDivElement>(state, {\n    animationStates,\n    isAnimatedOnMount: true,\n    onAnimationEnd: ({ animationState }) => {\n      if (animationState === 'closing') {\n        setState('unmounted');\n        onTransitionEnd?.(false);\n      } else {\n        onTransitionEnd?.(true);\n      }\n    }\n  });\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    switch (event.code) {\n      case 'Escape': {\n        onClose?.({ reason: 'escapeKey' });\n        break;\n      }\n    }\n  };\n\n  const renderDialog = () => {\n    return (\n      <WindowOverlay placement={placement} offset={offset}>\n        <FocusTrap autoFocusRef={autoFocusRef}>\n          <StyledDialog\n            ref={nodeRef}\n            labelId={labelId}\n            header={header}\n            footer={footer}\n            role={role}\n            ariaLabelledBy={labelId}\n            ariaDescribedBy={ariaDescribedBy}\n            onKeyDown={handleKeyDown}>\n            {children}\n          </StyledDialog>\n        </FocusTrap>\n      </WindowOverlay>\n    );\n  };\n\n  if (modality === 'modal') {\n    return <Modal isOpen={state !== 'unmounted'}>{renderDialog()}</Modal>;\n  } else {\n    return state !== 'unmounted' ? <Layer>{renderDialog()}</Layer> : null;\n  }\n};\n\nconst animationStates: UseAnimationConfig<Status, HTMLElement>['animationStates'] = {\n  opening: {\n    from: {\n      scaleX: 0,\n      scaleY: 0,\n      transformOrigin: 'center',\n      opacity: 0\n    },\n    to: {\n      scaleX: 1,\n      scaleY: 1,\n      opacity: 1\n    },\n    options: {\n      duration: 200\n    }\n  },\n  closing: {\n    from: {\n      scaleX: 1,\n      scaleY: 1,\n      transformOrigin: 'center',\n      opacity: 1\n    },\n    to: {\n      scaleX: 0,\n      scaleY: 0,\n      opacity: 0\n    },\n    options: {\n      duration: 200\n    }\n  }\n};\n"],"names":["useComponentTheme","DialogRedwoodTheme","_jsx","forwardRef","_jsxs","useState","useId","useEffect","useAnimation","WindowOverlay","FocusTrap","Modal","Layer"],"mappings":"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"}