/* @oracle/oraclejet-preact: 15.1.2 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');
require('./utils/UNSAFE_classNames.js');
var PRIVATE_ThemedIcons_MessageConfirmationIcon = require('./PRIVATE_ThemedIcons/MessageConfirmationIcon.js');
var PRIVATE_ThemedIcons_MessageErrorIcon = require('./PRIVATE_ThemedIcons/MessageErrorIcon.js');
var PRIVATE_ThemedIcons_MessageInfoIcon = require('./PRIVATE_ThemedIcons/MessageInfoIcon.js');
var PRIVATE_ThemedIcons_MessageWarningIcon = require('./PRIVATE_ThemedIcons/MessageWarningIcon.js');
require('./UNSAFE_Flex.js');
var PRIVATE_Message_themes_MessageStyles_css = require('./PRIVATE_Message/themes/MessageStyles.css.js');
var Flex = require('./Flex-2eb09dad.js');
var classNames = require('./classNames-d619a292.js');

const severityIcons = {
    confirmation: PRIVATE_ThemedIcons_MessageConfirmationIcon.MessageConfirmationIcon,
    error: PRIVATE_ThemedIcons_MessageErrorIcon.MessageErrorIcon,
    info: PRIVATE_ThemedIcons_MessageInfoIcon.MessageInfoIcon,
    warning: PRIVATE_ThemedIcons_MessageWarningIcon.MessageWarningIcon
};
/**
 * StartIcon Component for rendering the severity based icon in Message
 */
function MessageStartIcon({ severity, variant = 'banner', translations }) {
    const IconComponent = severityIcons[severity];
    // TODO: JET-50793
    const iconContent = variant !== 'inline' ? (jsxRuntime.jsx(Flex.Flex, { align: "center", height: "100%", children: jsxRuntime.jsx("span", { class: PRIVATE_Message_themes_MessageStyles_css.startIconContainerStyles[variant], role: "img", title: translations?.[severity], children: jsxRuntime.jsx(IconComponent, {}) }) })) : (jsxRuntime.jsx("span", { class: PRIVATE_Message_themes_MessageStyles_css.startIconContainerStyles.inline, role: "img", title: translations?.[severity], children: jsxRuntime.jsx(IconComponent, {}) }));
    // If detail content is rendered, then wrap it in a div with specified style classes
    // TODO: JET-48715 - remove marker classes
    // Right now, oj-message-banner component uses this for unit tests and has no alternate way for
    // testing. This will need to be removed as we work on oj-c-message-banner.
    const markerClassForTests = 'oj-c-messagebanner-start-icon';
    return (jsxRuntime.jsx("div", { class: classNames.classNames([
            variant === 'banner' && markerClassForTests,
            PRIVATE_Message_themes_MessageStyles_css.messageStartIconStyles.base,
            PRIVATE_Message_themes_MessageStyles_css.messageStartIconStyles[variant],
            PRIVATE_Message_themes_MessageStyles_css.severityIconStyles[variant]
        ]), role: "presentation", children: iconContent }));
}

exports.MessageStartIcon = MessageStartIcon;
//# sourceMappingURL=MessageStartIcon-8a59b0b6.js.map
