{"version":3,"file":"UNSAFE_Layer.js","sources":["../../src/UNSAFE_Layer/Layer.tsx"],"sourcesContent":["import { VNode, RefObject } from 'preact';\nimport { createPortal, useContext, useLayoutEffect, useMemo, useState } from 'preact/compat';\nimport { LayerContext } from './LayerContext';\nimport { useThemeInterpolations } from '../hooks/UNSAFE_useThemeInterpolations/useThemeInterpolations';\n\nconst _LOGICAL_PARENT = '__oj_logical_parent';\n\ntype Props = {\n  /**\n   * The content to be re-parented using Portal\n   */\n  children: VNode;\n  /**\n   * Logical parent of the re-parented content. Typically the 'launcher' associated\n   * with the popup.\n   */\n  logicalParentRef?: RefObject<Element> | null;\n};\n\ntype LayerElement = HTMLDivElement & {\n  __oj_logical_parent?: Element | null;\n};\n\nconst Layer = (props: Props) => {\n  const context = useContext(LayerContext);\n  const defaultHost = context.getHost?.();\n  const host = useMemo(() => defaultHost, [defaultHost]);\n  const [layerContainer, setLayerContainer] = useState<Element | null>(null);\n\n  // because the children are being rendered into a portal that is out of the flow of parent dom,\n  // we need to specify the colorScheme and scale class names here to pick up the correct CSS styles.\n  const classes = useThemeInterpolations();\n\n  // Really need useLayoutEffect instead of useEffect here. Otherwise the re-parented\n  // content does not get re-rendered with valid ref's\n  useLayoutEffect(() => {\n    if (!host) return;\n    const doc = host.ownerDocument ?? document;\n    const layer: LayerElement = doc.createElement('div');\n\n    if (props.logicalParentRef) {\n      layer[_LOGICAL_PARENT] = props.logicalParentRef.current;\n    }\n\n    host.appendChild(layer);\n    setLayerContainer(layer);\n\n    return () => {\n      if (host && layer && host.contains(layer)) {\n        delete layer[_LOGICAL_PARENT];\n        host.removeChild(layer);\n      }\n      setLayerContainer(null);\n    };\n  }, [host]);\n\n  // add the colorScheme and scale classes if there is a layerContainer\n  if (layerContainer) {\n    // use the theme interpolations to set the appropriate style classes for colorScheme and scale\n    layerContainer.className = classes;\n  }\n\n  return layerContainer && createPortal(props.children, layerContainer);\n};\n\nexport default Layer;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAKA,MAAM,eAAe,GAAG,qBAAqB,CAAC;AAkB9C,MAAM,KAAK,GAAG,CAAC,KAAY,KAAI;AAC7B,IAAA,MAAM,OAAO,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;AACzC,IAAA,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,IAAI,CAAC;AACxC,IAAA,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,WAAW,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IACvD,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,QAAQ,CAAiB,IAAI,CAAC,CAAC;;;AAI3E,IAAA,MAAM,OAAO,GAAG,sBAAsB,EAAE,CAAC;;;IAIzC,eAAe,CAAC,MAAK;AACnB,QAAA,IAAI,CAAC,IAAI;YAAE,OAAO;AAClB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,IAAI,QAAQ,CAAC;QAC3C,MAAM,KAAK,GAAiB,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAErD,IAAI,KAAK,CAAC,gBAAgB,EAAE;YAC1B,KAAK,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC;AACzD,SAAA;AAED,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxB,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAEzB,QAAA,OAAO,MAAK;YACV,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AACzC,gBAAA,OAAO,KAAK,CAAC,eAAe,CAAC,CAAC;AAC9B,gBAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACzB,aAAA;YACD,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAC1B,SAAC,CAAC;AACJ,KAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;;AAGX,IAAA,IAAI,cAAc,EAAE;;AAElB,QAAA,cAAc,CAAC,SAAS,GAAG,OAAO,CAAC;AACpC,KAAA;IAED,OAAO,cAAc,IAAI,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;AACxE;;;;"}