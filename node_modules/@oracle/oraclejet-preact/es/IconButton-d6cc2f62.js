/* @oracle/oraclejet-preact: 15.1.2 */
import { jsxs, jsx } from 'preact/jsx-runtime';
import { Fragment } from 'preact';
import './UNSAFE_BaseButton.js';
import './UNSAFE_ButtonLayout.js';
import { forwardRef } from 'preact/compat';
import { useTooltip } from './hooks/UNSAFE_useTooltip.js';
import { B as BaseButton } from './BaseButton-06d74a34.js';
import { B as ButtonLayout } from './ButtonLayout-8ea4b106.js';

const IconButton = forwardRef(({ variant = 'outlined', isDisabled = false, isRepeat = false, size = 'md', autofocus, onAction, tooltip, 'aria-label': accessibleLabel, 'aria-describedby': ariaDescribedBy, ...props }, ref) => {
    const { tooltipContent, tooltipProps } = useTooltip({
        text: tooltip ? tooltip : accessibleLabel
    });
    return (jsxs(Fragment, { children: [jsx(BaseButton, { ...tooltipProps, ref: ref, isDisabled: isDisabled, isRepeat: isRepeat, size: size, autofocus: autofocus, variant: variant, styling: ['min'], onAction: onAction, "aria-describedby": ariaDescribedBy, "aria-label": accessibleLabel ?? tooltip, children: jsx(ButtonLayout, { display: 'icons', startIcon: props.children, size: size }) }), tooltipContent] }));
});

export { IconButton as I };
//# sourceMappingURL=IconButton-d6cc2f62.js.map
