{"version":3,"file":"Chip-58b02e10.js","sources":["../../src/UNSAFE_Chip/Chip.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useActionable } from '../hooks/UNSAFE_useActionable';\nimport { useCallback } from 'preact/hooks';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\nimport { multiVariantStyles } from './themes/ChipStyles.css';\nimport { useInteractionStyle } from '../hooks/UNSAFE_useInteractionStyle';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\n\ntype SelectedChangeDetail = { previousValue?: boolean; value?: boolean };\n\ntype Props = {\n  /**\n   * Specifies if the chip component is selected.\n   */\n  isSelected?: boolean;\n  /**\n   * Disables the component.\n   */\n  isDisabled?: boolean;\n  /**\n   * Specifies some screen reader text.\n   */\n  'aria-label'?: string;\n  children: string;\n  /**\n   * Triggered when a chip is clickable, whether by keyboard, mouse, or touch events.\n   */\n  onToggle?: (detail: SelectedChangeDetail) => void;\n  //\n};\n\nexport function Chip({\n  isSelected,\n  isDisabled,\n  'aria-label': accessibleLabel,\n  children,\n  onToggle\n}: Props) {\n  const handleAction = useCallback(() => {\n    onToggle?.({ previousValue: isSelected, value: !isSelected });\n  }, [isSelected, onToggle]);\n  const { actionableProps } = useActionable(handleAction);\n  const { interactionProps, applyActiveStyle, applyHoverStyle, applyPseudoHoverStyle } =\n    useInteractionStyle();\n\n  const mergedProps = mergeProps(actionableProps, interactionProps);\n\n  const classes = multiVariantStyles({\n    disabled: isDisabled ? 'isDisabled' : 'notDisabled',\n    hover: applyHoverStyle && !isDisabled && !isSelected ? 'isHover' : 'notHover',\n    pseudoHover:\n      applyPseudoHoverStyle && !isDisabled && !isSelected ? 'isPseudoHover' : 'notPseudoHover',\n    active: isSelected || applyActiveStyle ? 'isActive' : 'notActive'\n  });\n\n  const { isTabbable } = useTabbableMode();\n\n  return isDisabled ? (\n    <div class={classes}>{children}</div>\n  ) : (\n    <div\n      {...mergedProps}\n      class={classes}\n      tabIndex={isTabbable ? 0 : -1}\n      aria-label={accessibleLabel}\n      role=\"switch\"\n      aria-checked={isSelected ? 'true' : 'false'}>\n      {children}\n    </div>\n  );\n}\n"],"names":["_jsx"],"mappings":";;;;;;;;;AAqCgB,SAAA,IAAI,CAAC,EACnB,UAAU,EACV,UAAU,EACV,YAAY,EAAE,eAAe,EAC7B,QAAQ,EACR,QAAQ,EACF,EAAA;AACN,IAAA,MAAM,YAAY,GAAG,WAAW,CAAC,MAAK;AACpC,QAAA,QAAQ,GAAG,EAAE,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC;AAChE,KAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC3B,MAAM,EAAE,eAAe,EAAE,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;AACxD,IAAA,MAAM,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,qBAAqB,EAAE,GAClF,mBAAmB,EAAE,CAAC;IAExB,MAAM,WAAW,GAAG,UAAU,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;IAElE,MAAM,OAAO,GAAG,kBAAkB,CAAC;QACjC,QAAQ,EAAE,UAAU,GAAG,YAAY,GAAG,aAAa;AACnD,QAAA,KAAK,EAAE,eAAe,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,UAAU;AAC7E,QAAA,WAAW,EACT,qBAAqB,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,GAAG,eAAe,GAAG,gBAAgB;QAC1F,MAAM,EAAE,UAAU,IAAI,gBAAgB,GAAG,UAAU,GAAG,WAAW;AAClE,KAAA,CAAC,CAAC;AAEH,IAAA,MAAM,EAAE,UAAU,EAAE,GAAG,eAAe,EAAE,CAAC;IAEzC,OAAO,UAAU,IACfA,GAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,OAAO,EAAG,QAAA,EAAA,QAAQ,EAAO,CAAA,KAErCA,GAAA,CAAA,KAAA,EAAA,EAAA,GACM,WAAW,EACf,KAAK,EAAE,OAAO,EACd,QAAQ,EAAE,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,EAAA,YAAA,EACjB,eAAe,EAC3B,IAAI,EAAC,QAAQ,EAAA,cAAA,EACC,UAAU,GAAG,MAAM,GAAG,OAAO,EAC1C,QAAA,EAAA,QAAQ,EACL,CAAA,CACP,CAAC;AACJ;;;;"}