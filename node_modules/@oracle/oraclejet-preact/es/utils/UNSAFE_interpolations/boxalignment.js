/* @oracle/oraclejet-preact: 15.1.2 */
import "./boxalignment.css";
import { k as keys_1 } from '../../keys-f766c992.js';
import { sizeToCSS } from '../UNSAFE_size.js';
import { coerceArray } from '../UNSAFE_arrayUtils.js';
import '../../_curry1-7629ff3f.js';
import '../../_has-057b6f90.js';
import '../../UNSAFE_Theme.js';
import '../../utils-9a0cb8dc.js';
import '../../Common/themes/themeContract.css.js';

// boxalignment are styles that help with alignment for Grid/Flex styles, like justifyContent,
// align, and gap.
const alignStyles = {
  baseline: "_1m3e7gi",
  center: "_1fef7u5",
  end: "_145hvzw",
  start: "_189tazq",
  inherit: "_1le3nti",
  initial: "_1wi46qp",
  stretch: "_1lildin"
};
const justifyStyles = {
  center: "_1ua877h",
  end: "zialjf",
  start: "tm4314",
  inherit: "_1xhxxpj",
  initial: "_67b5nf",
  around: "_1nnxib8",
  between: "ty75dt",
  evenly: "c9mvrk"
};
const boxAlignmentInterpolations = {
  align: ({
    align
  }) => align === undefined ? {} : {
    class: alignStyles[align]
  },
  justify: ({
    justify
  }) => justify === undefined ? {} : {
    class: justifyStyles[justify]
  },
  // See https://developer.mozilla.org/en-US/docs/Web/CSS/gap
  gap: ({
    gap
  }) => {
    if (gap === undefined) {
      return {};
    } else {
      const [rowSize, columnSize = rowSize] = coerceArray(gap);
      return {
        gap: `${sizeToCSS(rowSize)} ${sizeToCSS(columnSize)}`
      };
    }
  }
};
// These consts are exported so they can be used in stories to show the allowed options
// e.g., See Flex.stories.tsx:   align: {control: 'select',options: aligns}
const aligns = keys_1(alignStyles);
const justifies = keys_1(justifyStyles);

export { aligns, boxAlignmentInterpolations, justifies };
//# sourceMappingURL=boxalignment.js.map
