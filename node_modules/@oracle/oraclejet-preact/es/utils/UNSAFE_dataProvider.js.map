{"version":3,"file":"UNSAFE_dataProvider.js","sources":["../../../src/utils/UNSAFE_dataProvider/dataProvider.types.ts","../../../src/utils/UNSAFE_dataProvider/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\n/**\n * The interface for ItemMessage\n */\nexport type ItemMessage = {\n  detail: string;\n\n  severity?: ItemMessage.SEVERITY_TYPE | ItemMessage.SEVERITY_LEVEL;\n\n  summary: string;\n};\n\nnamespace ItemMessage {\n  export type SEVERITY_TYPE = 'confirmation' | 'info' | 'warning' | 'error' | 'fatal';\n  export type SEVERITY_LEVEL = 1 | 2 | 3 | 4 | 5;\n}\n\n/**\n * The interface for ItemMetadata<K>\n */\nexport type ItemMetadata<K> = {\n  readonly key: K;\n\n  readonly message?: ItemMessage;\n\n  [propName: string]: any; // allow arbitrary bonus properties\n};\n\n/**\n * The interface for Item<K, D>\n * Note: Using `Item` instead of `ItemContext` as context refers to preact Context in\n * this package.\n */\nexport type Item<K, D> = {\n  readonly key: K;\n\n  readonly data: D;\n\n  readonly metadata?: ItemMetadata<K>;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport * from './dataProvider.types';\n"],"names":[],"mappings":";AAAA;;;;;;AAMG;;ACNH;;;;;;AAMG"}