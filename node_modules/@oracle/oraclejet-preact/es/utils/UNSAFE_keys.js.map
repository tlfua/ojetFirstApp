{"version":3,"file":"UNSAFE_keys.js","sources":["../../../src/utils/UNSAFE_keys/keys.ts","../../../src/utils/UNSAFE_keys/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport type ImmutableSet<V> = {\n  size: number;\n  has(value: V): boolean;\n  values(): IterableIterator<V>;\n};\n\n/**\n * Type for key set used mainly for selection and expansion\n */\nexport type Keys<K> =\n  | {\n      all: true;\n      keys?: never;\n      deletedKeys: ImmutableSet<K>;\n    }\n  | {\n      all: false;\n      keys: ImmutableSet<K>;\n      deletedKeys?: never;\n    };\n\n/**\n * Returns true if the key is contains in keys, false otherwise\n */\nexport const containsKey = <K>(keys: Keys<K>, key: K) => {\n  if (keys == null) {\n    return false;\n  }\n  if (!keys.all) {\n    return keys.keys.has(key);\n  }\n  return !keys.deletedKeys.has(key);\n};\n\n/**\n * Returns a new Keys that includes the specified key.\n * If the key is already in keys, then just return keys.\n */\nexport const addKey = <K>(keys: Keys<K>, key: K) => {\n  if (keys.all && keys.deletedKeys.has(key)) {\n    const keySet = new Set(keys.deletedKeys.values());\n    keySet.delete(key);\n    keys = { all: true, deletedKeys: keySet };\n  } else if (!keys.all && !keys.keys.has(key)) {\n    const keySet = new Set(keys.keys.values());\n    keySet.add(key);\n    keys = { all: false, keys: keySet };\n  }\n  return keys;\n};\n\n/**\n * Returns a new Keys that excludes the specified key.\n * If the key is already in keys, then just return keys.\n * disallowEmpty if set to true, will ensure that the returning keys will not be empty.\n */\nexport const removeKey = <K>(keys: Keys<K>, key: K, disallowEmpty: boolean) => {\n  if (keys.all && !keys.deletedKeys.has(key)) {\n    const keySet = new Set(keys.deletedKeys.values());\n    keySet.add(key);\n    keys = { all: true, deletedKeys: keySet };\n  } else if (!keys.all && keys.keys.has(key) && (!disallowEmpty || keys.keys.size > 1)) {\n    const keySet = new Set(keys.keys.values());\n    keySet.delete(key);\n    keys = { all: false, keys: keySet };\n  }\n  return keys;\n};\n\n/**\n * Helper function for checking for an undefined key\n * Keys can be null or undefined when not set, but falsey check is not appropriate for this as 0 is a legitimate key\n */\nexport const isKeyDefined = <K>(key: K) => key !== undefined && key !== null;\n\n/**\n * Compares two Keys and return true if the keys inside each are the same including\n * having the same order.\n */\nexport const isSameKey = <K>(key1: Keys<K>, key2: Keys<K>) => {\n  if (key1.all !== key2.all) {\n    return false;\n  }\n  const arr1 = Array.from(key1.all ? key1.deletedKeys.values() : key1.keys.values());\n  const arr2 = Array.from(key2.all ? key2.deletedKeys.values() : key2.keys.values());\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport * from './keys';\n"],"names":[],"mappings":"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"}