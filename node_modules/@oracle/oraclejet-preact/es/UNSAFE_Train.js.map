{"version":3,"file":"UNSAFE_Train.js","sources":["../../src/UNSAFE_Train/TrainContext.tsx","../../src/UNSAFE_Train/Train.tsx","../../src/UNSAFE_Train/Connector.tsx","../../src/UNSAFE_Train/UserChosenIcon.tsx","../../src/UNSAFE_Train/StepIcon.tsx","../../src/UNSAFE_Train/StepLabel.tsx","../../src/UNSAFE_Train/Step.tsx","../../src/UNSAFE_Train/index.ts"],"sourcesContent":["import { createContext } from 'preact';\nexport interface TrainContextType {\n  onSelect: (event: Event, stepId: string) => void;\n  selectedStep: string;\n  numberOfSteps: number;\n  selectedStepIndex: number;\n  index: number;\n  isCurrent: boolean;\n}\n\nexport const Context = createContext<any>(null);\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useCallback } from 'preact/hooks';\nimport { toChildArray } from 'preact';\nimport { Context } from './TrainContext';\n\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TrainStyles } from './themes/TrainStyles.css';\nimport { TrainRedwoodTheme } from './themes/redwood/TrainTheme';\n\ninterface TrainProps {\n  /**\n   * Id of the currently selected step.\n   */\n  selectedStep: string;\n\n  /**\n   * Children of Train which are of type Step.\n   */\n  children: JSX.Element[];\n\n  /**\n   * A callback function to be invoked when the Step is selected.\n   */\n  onSelect?: (detail: selectDetail) => void;\n}\n\nexport type selectDetail = {\n  /**\n   * Click event object\n   */\n  event: Event;\n  /**\n   * To step id\n   */\n  toStep: string;\n};\n\n/**\nThe JET Train component serves as a visual navigator enabling users to traverse through different 'steps'. Each 'step' is represented by the Step sub-component which can manifest its own state - 'visited', 'unvisited', or 'disabled', and is capable of communicating various message types including 'error', 'confirmation', 'warning', or 'info'.\n */\nexport function Train({ onSelect, selectedStep, children }: TrainProps) {\n  const { classes, styles } = useComponentTheme<never, TrainStyles>(TrainRedwoodTheme);\n\n  const selectedStepIndex = children.findIndex((step) => step.props.id === selectedStep);\n\n  const onStepSelect = useCallback(\n    (event: Event, stepId: string) => {\n      onSelect?.({\n        event: event,\n        toStep: stepId\n      });\n    },\n    [onSelect]\n  );\n\n  const trainContext = {\n    onSelect: onStepSelect,\n    selectedStep: selectedStep,\n    selectedStepIndex: selectedStepIndex,\n    numberOfSteps: children.length,\n    index: 0\n  };\n\n  const childrenArray = toChildArray(children).filter(Boolean);\n\n  return (\n    <div class={classes}>\n      {childrenArray.map((step, index) => (\n        <Context.Provider value={{ ...trainContext, index }}>\n          <div class={styles.baseListStyle}>{step}</div>\n        </Context.Provider>\n      ))}\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TrainVariantOptions, TrainStyles } from './themes/TrainStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { TrainRedwoodTheme } from './themes/redwood/TrainTheme';\n\ninterface ConnectorProps {\n  /**\n   * Determines if the adjacent steps should be connected.\n   */\n  isConnected: boolean;\n}\n\nexport const Connector = ({ isConnected }: ConnectorProps) => {\n  const { styles, variantClasses } = useComponentTheme<TrainVariantOptions, TrainStyles>(\n    TrainRedwoodTheme,\n    {\n      connectorConnected: isConnected ? 'isConnected' : 'notConnected'\n    }\n  );\n\n  return <span class={classNames([styles.connectorBaseStyle, variantClasses])}></span>;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { MessageSeverity } from './TrainIcons.types';\nimport { MessageConfirmationIcon } from '../PRIVATE_ThemedIcons/MessageConfirmationIcon';\nimport { MessageErrorIcon } from '../PRIVATE_ThemedIcons/MessageErrorIcon';\nimport { MessageInfoIcon } from '../PRIVATE_ThemedIcons/MessageInfoIcon';\nimport { MessageWarningIcon } from '../PRIVATE_ThemedIcons/MessageWarningIcon';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TrainVariantOptions, TrainStyles } from './themes/TrainStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { TrainRedwoodTheme } from './themes/redwood/TrainTheme';\n\nconst messageTypeIcons = {\n  confirmation: MessageConfirmationIcon,\n  error: MessageErrorIcon,\n  fatal: MessageErrorIcon,\n  info: MessageInfoIcon,\n  warning: MessageWarningIcon\n};\n\n/**\n * Props for the UserChosenIcon component\n */\ntype Props = {\n  /**\n   * Determines the message type icon from the following types 'error', 'warning', 'confirmation', 'info' and 'none'.\n   */\n  messageType: Exclude<MessageSeverity, 'none'>;\n\n  /**\n   * Determines if the step is disabled or not\n   */\n  isDisabled: boolean;\n\n  /**\n   * Translations resources\n   */\n  translations?: {\n    /**\n     * Text for 'error' severity level\n     */\n    error?: string;\n\n    /**\n     * Text for 'error' severity level\n     */\n    fatal?: string;\n\n    /**\n     * Text for 'warning' severity level\n     */\n    warning?: string;\n\n    /**\n     * Text for 'info' severity level\n     */\n    info?: string;\n\n    /**\n     * Text for 'confirmation' severity level\n     */\n    confirmation?: string;\n  };\n};\n\n/**\n * UserChosenIcon Component for rendering the severity based icon in Message\n */\nfunction UserChosenIcon({ messageType, isDisabled = false }: Props) {\n  const IconComponent = messageTypeIcons[messageType];\n\n  const { styles, variantClasses } = useComponentTheme<TrainVariantOptions, TrainStyles>(\n    TrainRedwoodTheme,\n    {\n      messageType: messageType,\n      stepIconDisabled: isDisabled ? 'isDisabled' : 'notDisabled'\n    }\n  );\n  return (\n    <div class={classNames([styles.messageTypeIconBaseStyle, variantClasses])} role=\"presentation\">\n      <IconComponent />\n    </div>\n  );\n}\n\nexport { UserChosenIcon };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { UserChosenIcon } from './UserChosenIcon';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { MessageSeverity } from './TrainIcons.types';\nimport { useContext } from 'preact/hooks';\nimport { Context, TrainContextType } from './TrainContext';\nimport { useInteractionStyle } from '../hooks/UNSAFE_useInteractionStyle';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useActive } from '../hooks/UNSAFE_useActive';\n\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TrainVariantOptions, TrainStyles } from './themes/TrainStyles.css';\nimport { TrainRedwoodTheme } from './themes/redwood/TrainTheme';\n\ninterface StepIconProps {\n  /**\n   * Determines if the step is disabled or not\n   */\n  isDisabled: boolean;\n  /**\n   * Determines if the step has been visited\n   */\n  isVisited: boolean;\n\n  /**\n   * A string that defines which icon type the step should take\n   */\n  messageType?: Exclude<MessageSeverity, 'none'>;\n}\n\n/**\n * Step icon\n */\nexport const StepIcon = ({ isDisabled, isVisited, messageType }: StepIconProps) => {\n  const { index, selectedStepIndex } = useContext<TrainContextType>(Context);\n\n  const isCurrent = selectedStepIndex === index;\n\n  const { interactionProps, applyPseudoHoverStyle, applyHoverStyle } = useInteractionStyle(\n    isDisabled || isCurrent\n  );\n\n  const { isActive, activeProps } = useActive({ isDisabled: isDisabled || isCurrent });\n\n  console.log('isActive', isActive);\n  const mergedProps = mergeProps(interactionProps, activeProps);\n\n  const { styles, variantClasses } = useComponentTheme<TrainVariantOptions, TrainStyles>(\n    TrainRedwoodTheme,\n    {\n      stepIconDisabled: isDisabled ? 'isDisabled' : 'notDisabled',\n      stepIconCurrent: isCurrent ? 'isCurrent' : 'notCurrent',\n      stepIconVisited: isVisited ? 'isVisited' : 'notVisited',\n      stepIconNeedsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',\n      stepIconPseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',\n      stepIconActive: isActive ? 'isActive' : 'notActive'\n    }\n  );\n\n  const iconStyles = () => {\n    if (messageType) {\n      return <UserChosenIcon messageType={messageType} isDisabled={isDisabled} />;\n    } else {\n      return (\n        <span {...mergedProps} class={classNames([styles.stepIconBaseStyle, variantClasses])}>\n          {index + 1}\n        </span>\n      );\n    }\n  };\n\n  return <span class={styles.stepIconContainerStyle}>{iconStyles()}</span>;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { MessageSeverity } from './TrainIcons.types';\nimport { useContext } from 'preact/hooks';\nimport { Context, TrainContextType } from './TrainContext';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { useInteractionStyle } from '../hooks/UNSAFE_useInteractionStyle';\n\nimport type { BundleType } from '../resources/nls/bundle';\n\nimport { HiddenAccessible } from '../UNSAFE_HiddenAccessible';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TrainVariantOptions, TrainStyles } from './themes/TrainStyles.css';\nimport { TrainRedwoodTheme } from './themes/redwood/TrainTheme';\n\ninterface StepLabelProps {\n  /**\n   * Determines if the step is disabled or not\n   */\n  isDisabled: boolean;\n  /**\n   * Determines if the step is visited or not\n   */\n  isVisited: boolean;\n\n  /**\n   * Label of the step\n   */\n  label: string;\n\n  /**\n   * Determines the message type icon from the following types 'error', 'warning', 'confirmation', 'info' and 'none'.\n   */\n  messageType?: Exclude<MessageSeverity, 'none'>;\n}\n\n/**\n * Step label component\n */\nexport const StepLabel = ({ label, isDisabled, isVisited, messageType }: StepLabelProps) => {\n  const { numberOfSteps, index, selectedStepIndex } = useContext<TrainContextType>(Context);\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n  const isCurrent = selectedStepIndex === index;\n\n  const { interactionProps, applyPseudoHoverStyle, applyHoverStyle } = useInteractionStyle(\n    isDisabled || isCurrent\n  );\n\n  const currentStepStatus = isCurrent\n    ? translations.train_current()\n    : isVisited\n    ? translations.train_visited()\n    : translations.train_not_visited();\n\n  const currentStep = index + 1;\n\n  const statusTextForCurrentStep = messageType\n    ? `${translations.train_status({\n        currentStep: currentStep.toString(),\n        numberOfSteps: numberOfSteps.toString()\n      })}. ${currentStepStatus}, ${translations.train_message_type()}: ${messageType}`\n    : `${translations.train_status({\n        currentStep: currentStep.toString(),\n        numberOfSteps: numberOfSteps.toString()\n      })}. ${currentStepStatus}`;\n\n  const { styles, variantClasses } = useComponentTheme<TrainVariantOptions, TrainStyles>(\n    TrainRedwoodTheme,\n    {\n      stepLabelDisabled: isDisabled ? 'isDisabled' : 'notDisabled',\n      stepLabelCurrent: isCurrent ? 'isCurrent' : 'notCurrent',\n      stepLabelVisited: isVisited ? 'isVisited' : 'notVisited',\n      stepLabelNeedsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',\n      stepLabelPseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover'\n    }\n  );\n\n  const handleClick = (event: Event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <span class={styles.stepLabelWrapperStyle}>\n      <a\n        {...interactionProps}\n        href=\"#\"\n        class={classNames([styles.stepLabelBaseStyle, variantClasses])}\n        onClick={handleClick}>\n        {label}\n        <HiddenAccessible>{statusTextForCurrentStep}</HiddenAccessible>\n      </a>\n    </span>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { FunctionComponent } from 'preact';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { useCallback, useContext, useState } from 'preact/hooks';\nimport { Context, TrainContextType } from './TrainContext';\nimport { MessageSeverity } from './TrainIcons.types';\nimport { useInteractionStyle } from '../hooks/UNSAFE_useInteractionStyle';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\n\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\n\nimport { Connector } from './Connector';\nimport { StepIcon } from './StepIcon';\nimport { StepLabel } from './StepLabel';\nimport { TrainRedwoodTheme } from './themes/redwood/TrainTheme';\nimport { TrainVariantOptions, TrainStyles } from './themes/TrainStyles.css';\n\ninterface StepProps {\n  /**\n   * Unique step id\n   */\n  id: string;\n\n  /**\n   * Determines if the step is disabled or not\n   */\n  isDisabled: boolean;\n\n  /**\n   * Determines if the step has been visited or not\n   */\n  isVisited: boolean;\n\n  /**\n   * Determines which icon the step has from the following types 'error', 'warning', 'confirmation', 'info' and 'none'.\n   */\n  messageType?: Exclude<MessageSeverity, 'none'>;\n\n  /**\n   * Step Label\n   */\n  label: string;\n}\n\n/**\n * Step component\n */\n\nexport const Step: FunctionComponent<StepProps> = ({\n  id,\n  isDisabled,\n  isVisited,\n  messageType,\n  label\n}) => {\n  const { onSelect, /* selectedStep ,*/ numberOfSteps, selectedStepIndex, index } =\n    useContext<TrainContextType>(Context) || // get the context object or...\n    (() => {\n      // if there's no context object, throw an error\n      throw new Error('Step component must be rendered within a Train component.');\n    })();\n\n  const isCurrent = selectedStepIndex === index;\n\n  const [isActive, setIsActive] = useState(false);\n\n  const { interactionProps, applyPseudoHoverStyle, applyHoverStyle } = useInteractionStyle(\n    isDisabled || isCurrent\n  );\n\n  const isConnectorConnected = selectedStepIndex > index;\n\n  const onSelectHandler = useCallback(\n    (event: Event) => {\n      if (!isDisabled && !isCurrent) {\n        onSelect(event, id);\n      }\n    },\n    [isDisabled, onSelect, id]\n  );\n\n  const { pressProps } = usePress(onSelectHandler, {});\n\n  const isLast = index !== numberOfSteps - 1;\n\n  const onMouseUpHandler = useCallback(() => {\n    setIsActive(false);\n  }, [isActive]);\n\n  const onMouseDownHandler = useCallback(() => {\n    setIsActive(true);\n  }, [isActive]);\n\n  const { styles, variantClasses } = useComponentTheme<TrainVariantOptions, TrainStyles>(\n    TrainRedwoodTheme,\n    {\n      stepDisabled: isDisabled ? 'isDisabled' : 'notDisabled',\n      needsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',\n      pseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',\n      stepActive: isActive && !isCurrent ? 'isActive' : 'notActive'\n    }\n  );\n\n  const mergedProps = mergeProps(pressProps, interactionProps, {\n    onMouseUp: onMouseUpHandler,\n    onMouseDown: onMouseDownHandler\n  });\n\n  return (\n    <span class={styles.stepContainerStyle}>\n      {isLast && <Connector isConnected={isConnectorConnected} />}\n      <span {...mergedProps} class={classNames([styles.stepBaseStyle, variantClasses])}>\n        <StepIcon isVisited={isVisited} isDisabled={isDisabled} messageType={messageType} />\n        <StepLabel\n          label={label}\n          isVisited={isVisited}\n          isDisabled={isDisabled}\n          messageType={messageType}\n        />\n      </span>\n    </span>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport * from './Train';\nexport { Step } from './Step';\n"],"names":["_jsx","MessageConfirmationIcon","MessageErrorIcon","MessageInfoIcon","MessageWarningIcon","_jsxs"],"mappings":"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"}