{"version":3,"file":"PRIVATE_withDirectionIcon.js","sources":["../../../src/hoc/PRIVATE_withDirectionIcon/withDirectionIcon.tsx","../../../src/hoc/PRIVATE_withDirectionIcon/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentProps } from 'preact';\nimport { Icon } from '../../UNSAFE_Icon/Icon';\nimport { useUser } from '../../hooks/UNSAFE_useUser';\n\ntype Props = Omit<ComponentProps<typeof Icon>, 'viewBox'>;\n\n// Returns a component that renders one of the given icon components based on reading direction\nexport const withDirectionIcon = (LtrIcon: typeof Icon, RtlIcon: typeof Icon) => {\n  return (props: Props) => {\n    const { direction } = useUser();\n    return direction === 'ltr' ? <LtrIcon {...props} /> : <RtlIcon {...props} />;\n  };\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport { withDirectionIcon } from './withDirectionIcon';\n"],"names":["_jsx"],"mappings":";;;;;;;;;;;;AAaA;MACa,iBAAiB,GAAG,CAAC,OAAoB,EAAE,OAAoB,KAAI;IAC9E,OAAO,CAAC,KAAY,KAAI;AACtB,QAAA,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,CAAC;AAChC,QAAA,OAAO,SAAS,KAAK,KAAK,GAAGA,IAAC,OAAO,EAAA,EAAA,GAAK,KAAK,EAAI,CAAA,GAAGA,GAAA,CAAC,OAAO,EAAK,EAAA,GAAA,KAAK,GAAI,CAAC;AAC/E,KAAC,CAAC;AACJ;;ACnBA;;;;;;AAMG;;;;"}