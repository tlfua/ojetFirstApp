/* @oracle/oraclejet-preact: 15.1.2 */
import { jsx } from 'preact/jsx-runtime';
import { forwardRef } from 'preact/compat';

const BarTrack = forwardRef(({ id, length = '100%', children, color, orientation = 'horizontal', ariaProps, ...otherProps }, ref) => {
    const isHoriz = orientation === 'horizontal';
    return (jsx("div", { id: id, ref: ref, class: otherProps.class, ...ariaProps, style: {
            width: isHoriz ? length : undefined,
            height: isHoriz ? undefined : length,
            backgroundColor: color
        }, children: children }));
});
const BarValue = ({ length, size = '100%', orientation = 'horizontal', color, ...otherProps }) => {
    const isHoriz = orientation === 'horizontal';
    return (jsx("div", { class: otherProps.class, style: {
            width: isHoriz ? length : size,
            height: isHoriz ? size : length,
            backgroundColor: color
        } }));
};

const CircleWrapper = ({ id, children, color, clipPath, borderWidth, ariaProps, wrapperRef, ...otherProps }) => {
    return (jsx("div", { ref: wrapperRef, id: id, ...ariaProps, class: otherProps.class, style: {
            borderColor: color,
            borderWidth: borderWidth,
            clipPath: clipPath
        }, children: children }));
};
function getBorderWidth(section, borderWidth) {
    const border = {
        borderTopWidth: borderWidth,
        borderBottomWidth: borderWidth,
        borderRightWidth: borderWidth,
        borderLeftWidth: borderWidth
    };
    switch (section) {
        case 'top':
            border['borderBottomWidth'] = undefined;
            break;
        case 'bottom':
            border['borderTopWidth'] = undefined;
            break;
        case 'left':
            border['borderRightWidth'] = undefined;
            break;
        case 'right':
            border['borderLeftWidth'] = undefined;
            break;
    }
    return border;
}
const CircleInner = ({ clipPath, color, height, width, size, section = 'full', ...otherProps }) => {
    const borderWidth = getBorderWidth(section, size);
    return (jsx("div", { class: otherProps.class, style: {
            clipPath: clipPath,
            borderColor: color,
            height: height,
            width: width,
            ...borderWidth
        } }));
};

export { BarTrack, BarValue, CircleInner, CircleWrapper };
//# sourceMappingURL=PRIVATE_Meter.js.map
