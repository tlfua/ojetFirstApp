/* @oracle/oraclejet-preact: 15.1.2 */
import { jsx, jsxs } from 'preact/jsx-runtime';
import './UNSAFE_ButtonLayout.js';
import './PRIVATE_ThemedIcons/ChevronDownIcon.js';
import './UNSAFE_Menu.js';
import { useMenuAction } from './hooks/UNSAFE_useMenuAction.js';
import './UNSAFE_BaseButton.js';
import { mergeProps } from './utils/UNSAFE_mergeProps.js';
import { Fragment } from 'preact';
import { forwardRef } from 'preact/compat';
import { useRef, useImperativeHandle } from 'preact/hooks';
import { B as BaseButton } from './BaseButton-06d74a34.js';
import { B as ButtonLayout } from './ButtonLayout-8ea4b106.js';
import { S as SvgChevronDown } from './index-8b1d59ff.js';
import { M as Menu } from './Menu-31a689f5.js';

/**
 * A MenuButton is a combined action and menu button.
 */
const MenuButton = forwardRef(({ children, label, suffix, variant = 'outlined', isDisabled = false, isMenuOpen = false, onToggleMenu, size = 'md', width, icon, 'aria-describedby': ariaDescribedBy, onBlur, onFocus, onMouseEnter, onMouseLeave, onTouchEnd, onTouchStart }, ref) => {
    const buttonRef = useRef(null);
    useImperativeHandle(ref, () => buttonRef.current, [buttonRef]);
    const { triggerProps, menuProps } = useMenuAction({
        isDisabled: isDisabled,
        onToggleMenu: onToggleMenu,
        isMenuOpen: isMenuOpen,
        anchorRef: buttonRef
    });
    const globalEventProps = {
        onBlur,
        onFocus,
        onMouseEnter,
        onMouseLeave,
        onTouchEnd,
        onTouchStart
    };
    const rootButton = (jsx(BaseButton, { ...mergeProps(triggerProps, globalEventProps), styling: isMenuOpen ? ['min', 'active'] : ['min'], isDisabled: isDisabled, variant: variant, width: width, size: size, ref: buttonRef, "aria-label": `${label} ${suffix}`, "aria-describedby": ariaDescribedBy, children: jsx(ButtonLayout, { display: 'all', suffix: suffix, startIcon: icon, endIcon: jsx(SvgChevronDown, {}), size: size, children: label }) }));
    return isDisabled ? (rootButton) : (jsxs(Fragment, { children: [rootButton, jsx(Menu, { ...menuProps, children: children })] }));
});

export { MenuButton as M };
//# sourceMappingURL=MenuButton-81cf1051.js.map
