{"version":3,"file":"IconMenuButton-fd9ede56.js","sources":["../../src/UNSAFE_IconMenuButton/IconMenuButton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ButtonLayout } from '../UNSAFE_ButtonLayout';\n\nimport { ChevronDownIcon } from '../PRIVATE_ThemedIcons/ChevronDownIcon';\n\nimport { Menu } from '../UNSAFE_Menu';\nimport { useMenuAction, MenuToggleDetail } from '../hooks/UNSAFE_useMenuAction';\nimport { useTooltip } from '../hooks/UNSAFE_useTooltip';\n\nimport { BaseButton } from '../UNSAFE_BaseButton';\n\nimport type { DimensionProps } from '../utils/UNSAFE_interpolations/dimensions';\n\nimport { ComponentChildren, ComponentChild, Fragment } from 'preact';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { useRef, useImperativeHandle } from 'preact/hooks';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\n\ntype WidthInterpolationProps = Pick<DimensionProps, 'width'>;\n\nexport type BaseProps = WidthInterpolationProps & {\n  /**\n   * children - One or more MenuItems, dividers, or Menu groups\n   */\n  children?: ComponentChildren;\n\n  /**\n   * The icon is the button's icon.  Note that this is not the menu\n   * expand icon shown on the right (or to the left in right to left mode).\n   */\n  icon?: ComponentChild;\n\n  /**\n   * Specifies that the button element should be disabled.\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Specifies if only the icon is shown, and no down chevron.\n   */\n  isIconOnly?: boolean;\n\n  /**\n   * The ID of an element (or space separated IDs of multiple elements) that\n   * describes the button.\n   */\n  'aria-describedby'?: string;\n\n  /**\n   * Specifies if the menu is open\n   */\n  isMenuOpen?: boolean;\n\n  /**\n   * Property that triggers a callback immediately when toggle happens and value of expanded property should be updated\n   */\n  onToggleMenu?: (details: MenuToggleDetail) => void;\n\n  /**\n   * Indicates in what states the button has chrome (background and border).\n   *     \"borderless\"': \"Borderless buttons are a more prominent variation. Borderless\n   * buttons are useful for supplemental actions that require minimal emphasis.\",\n   *     \"outlined\"': \"Outlined buttons are salient, but lighter weight than\n   * solid buttons. Outlined buttons are useful for secondary actions.\",\n   *     \"solid\"': \"Solid buttons stand out, and direct the user's attention to the\n   *  most important actions in the UI.\"\n   */\n  variant?: 'borderless' | 'outlined' | 'solid';\n\n  /**\n   * The size indicates how large the button is rendered: \"sm\", \"md\" (default), \"lg\".\n   */\n  size?: 'sm' | 'md' | 'lg';\n};\n\n/**\n * Note that either an accessibleLabel or tooltip must be specified.\n */\ntype VariationAccessibleLabelProps =\n  | {\n      /**\n       * accessibleLabel - the aria label\n       */\n      accessibleLabel: string;\n\n      /**\n       * tooltip - overrides the accessibleLabel for the tooltip\n       */\n      tooltip?: string;\n    }\n  | {\n      accessibleLabel?: string;\n\n      tooltip: string;\n    };\n\n/**\n * A IconMenuButton is a combined action and menu button.\n */\nexport const IconMenuButton = forwardRef(\n  (\n    {\n      children,\n      tooltip,\n      accessibleLabel,\n      variant = 'outlined',\n      isDisabled = false,\n      isMenuOpen = false,\n      isIconOnly = false,\n      onToggleMenu,\n      size = 'md',\n      width,\n      icon,\n      'aria-describedby': ariaDescribedBy\n    }: BaseProps & VariationAccessibleLabelProps,\n    ref?: ForwardedRef<HTMLButtonElement>\n  ) => {\n    const buttonRef = useRef<HTMLButtonElement>(null);\n    useImperativeHandle(ref!, () => buttonRef.current!, [buttonRef]);\n\n    const { triggerProps, menuProps } = useMenuAction({\n      isDisabled: isDisabled,\n      onToggleMenu: onToggleMenu,\n      isMenuOpen: isMenuOpen,\n      anchorRef: buttonRef\n    });\n\n    const { tooltipContent, tooltipProps } = useTooltip({\n      text: tooltip ? tooltip : accessibleLabel,\n      isDisabled: isMenuOpen\n    });\n\n    const rootButton = (\n      <Fragment>\n        <BaseButton\n          {...mergeProps(tooltipProps, triggerProps)}\n          styling={isMenuOpen ? ['min', 'active'] : ['min']}\n          isDisabled={isDisabled}\n          variant={variant}\n          width={width}\n          size={size}\n          ref={buttonRef}\n          aria-describedby={ariaDescribedBy}\n          aria-label={accessibleLabel ?? tooltip}>\n          <ButtonLayout\n            display={'icons'}\n            startIcon={icon}\n            endIcon={isIconOnly ? null : <ChevronDownIcon />}\n            size={size}></ButtonLayout>\n          {tooltipContent}\n        </BaseButton>\n      </Fragment>\n    );\n\n    return isDisabled ? (\n      rootButton\n    ) : (\n      <Fragment>\n        {rootButton}\n        <Menu {...menuProps}>{children}</Menu>\n      </Fragment>\n    );\n  }\n);\n"],"names":["_jsx","_jsxs","ChevronDownIcon"],"mappings":";;;;;;;;;;;;;;;;;AAsGA;;AAEG;MACU,cAAc,GAAG,UAAU,CACtC,CACE,EACE,QAAQ,EACR,OAAO,EACP,eAAe,EACf,OAAO,GAAG,UAAU,EACpB,UAAU,GAAG,KAAK,EAClB,UAAU,GAAG,KAAK,EAClB,UAAU,GAAG,KAAK,EAClB,YAAY,EACZ,IAAI,GAAG,IAAI,EACX,KAAK,EACL,IAAI,EACJ,kBAAkB,EAAE,eAAe,EACO,EAC5C,GAAqC,KACnC;AACF,IAAA,MAAM,SAAS,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;AAClD,IAAA,mBAAmB,CAAC,GAAI,EAAE,MAAM,SAAS,CAAC,OAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AAEjE,IAAA,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,aAAa,CAAC;AAChD,QAAA,UAAU,EAAE,UAAU;AACtB,QAAA,YAAY,EAAE,YAAY;AAC1B,QAAA,UAAU,EAAE,UAAU;AACtB,QAAA,SAAS,EAAE,SAAS;AACrB,KAAA,CAAC,CAAC;AAEH,IAAA,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC;QAClD,IAAI,EAAE,OAAO,GAAG,OAAO,GAAG,eAAe;AACzC,QAAA,UAAU,EAAE,UAAU;AACvB,KAAA,CAAC,CAAC;IAEH,MAAM,UAAU,IACdA,GAAA,CAAC,QAAQ,EACP,EAAA,QAAA,EAAAC,IAAA,CAAC,UAAU,EACL,EAAA,GAAA,UAAU,CAAC,YAAY,EAAE,YAAY,CAAC,EAC1C,OAAO,EAAE,UAAU,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EACjD,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,SAAS,sBACI,eAAe,EAAA,YAAA,EACrB,eAAe,IAAI,OAAO,aACtCD,GAAC,CAAA,YAAY,IACX,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,IAAI,EACf,OAAO,EAAE,UAAU,GAAG,IAAI,GAAGA,GAAC,CAAAE,cAAe,KAAG,EAChD,IAAI,EAAE,IAAI,EAAA,CAAiB,EAC5B,cAAc,CAAA,EAAA,CACJ,EACJ,CAAA,CACZ,CAAC;IAEF,OAAO,UAAU,IACf,UAAU,KAEVD,IAAA,CAAC,QAAQ,EACN,EAAA,QAAA,EAAA,CAAA,UAAU,EACXD,GAAA,CAAC,IAAI,EAAA,EAAA,GAAK,SAAS,EAAA,QAAA,EAAG,QAAQ,EAAA,CAAQ,CAC7B,EAAA,CAAA,CACZ,CAAC;AACJ,CAAC;;;;"}