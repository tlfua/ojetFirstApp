{"version":3,"file":"UNSAFE_useLongPress.js","sources":["../../../src/hooks/UNSAFE_useLongPress/useLongPress.ts","../../../src/hooks/UNSAFE_useLongPress/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useRef, useCallback } from 'preact/hooks';\n\ntype LongPressOptions = {\n  isDisabled?: boolean;\n  minimumTime?: number;\n};\n\ntype LongPressInfo = {\n  x: number;\n  y: number;\n};\n\ntype LongPressState = {\n  pointerDownId: number | null;\n  startTime: number;\n};\n\nconst InitialPressState = {\n  pointerDownId: null,\n  startTime: 0\n};\n\nconst DefaultMinimumTime = 250;\n\nexport function useLongPress(\n  onLongPress: (e: LongPressInfo) => void,\n  { isDisabled = false, minimumTime = DefaultMinimumTime }: LongPressOptions = {\n    isDisabled: false,\n    minimumTime: DefaultMinimumTime\n  }\n): { longPressProps: Record<string, any> } {\n  const ref = useRef<LongPressState>(InitialPressState);\n\n  const onPointerDown = useCallback((e: PointerEvent) => {\n    // return if it is not a left click\n    if (e.pointerType == 'mouse' && e.button != 0) {\n      return;\n    }\n\n    ref.current = ref.current.pointerDownId\n      ? InitialPressState\n      : { pointerDownId: e.pointerId, startTime: e.timeStamp };\n  }, []);\n\n  const onPointerUp = useCallback(\n    (e: PointerEvent) => {\n      if (e.pointerId === ref.current.pointerDownId) {\n        const longPressTime = e.timeStamp - ref.current.startTime;\n        // 250ms minimum longPress time based on numbers used in Hammer\n        if (longPressTime > minimumTime) {\n          onLongPress({ x: e.offsetX, y: e.offsetY });\n        }\n      }\n      clearLongPress();\n    },\n    [onLongPress]\n  );\n\n  const clearLongPress = useCallback(() => {\n    ref.current = InitialPressState;\n  }, []);\n\n  const longPressProps = isDisabled\n    ? {}\n    : {\n        onPointerDown,\n        onPointerUp,\n        onPointerLeave: clearLongPress,\n        onPointerCancel: clearLongPress\n      };\n\n  return {\n    longPressProps\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { useLongPress } from './useLongPress';\n"],"names":[],"mappings":";;;AAAA;;;;;;AAMG;AAmBH,MAAM,iBAAiB,GAAG;AACxB,IAAA,aAAa,EAAE,IAAI;AACnB,IAAA,SAAS,EAAE,CAAC;CACb,CAAC;AAEF,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAEf,SAAA,YAAY,CAC1B,WAAuC,EACvC,EAAE,UAAU,GAAG,KAAK,EAAE,WAAW,GAAG,kBAAkB,EAAuB,GAAA;AAC3E,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,WAAW,EAAE,kBAAkB;AAChC,CAAA,EAAA;AAED,IAAA,MAAM,GAAG,GAAG,MAAM,CAAiB,iBAAiB,CAAC,CAAC;AAEtD,IAAA,MAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAe,KAAI;;QAEpD,IAAI,CAAC,CAAC,WAAW,IAAI,OAAO,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;YAC7C,OAAO;AACR,SAAA;AAED,QAAA,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa;AACrC,cAAE,iBAAiB;AACnB,cAAE,EAAE,aAAa,EAAE,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;KAC5D,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,MAAM,WAAW,GAAG,WAAW,CAC7B,CAAC,CAAe,KAAI;QAClB,IAAI,CAAC,CAAC,SAAS,KAAK,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE;YAC7C,MAAM,aAAa,GAAG,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC;;YAE1D,IAAI,aAAa,GAAG,WAAW,EAAE;AAC/B,gBAAA,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;AAC7C,aAAA;AACF,SAAA;AACD,QAAA,cAAc,EAAE,CAAC;AACnB,KAAC,EACD,CAAC,WAAW,CAAC,CACd,CAAC;AAEF,IAAA,MAAM,cAAc,GAAG,WAAW,CAAC,MAAK;AACtC,QAAA,GAAG,CAAC,OAAO,GAAG,iBAAiB,CAAC;KACjC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,cAAc,GAAG,UAAU;AAC/B,UAAE,EAAE;AACJ,UAAE;YACE,aAAa;YACb,WAAW;AACX,YAAA,cAAc,EAAE,cAAc;AAC9B,YAAA,eAAe,EAAE,cAAc;SAChC,CAAC;IAEN,OAAO;QACL,cAAc;KACf,CAAC;AACJ;;AClFA;;;;;;AAMG;;;;"}