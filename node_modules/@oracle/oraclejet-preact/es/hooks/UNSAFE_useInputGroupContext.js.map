{"version":3,"file":"UNSAFE_useInputGroupContext.js","sources":["../../../src/hooks/UNSAFE_useInputGroupContext/InputGroupContext.ts","../../../src/hooks/UNSAFE_useInputGroupContext/useInputGroupContext.ts"],"sourcesContent":["import { createContext } from 'preact';\n\ntype InputGroupContextProps = {\n  index: number;\n  last: boolean;\n};\n\n/**\n * Context used to determine if component is within an InputGroup\n */\nconst InputGroupContext = createContext<InputGroupContextProps | null>(null);\n\nInputGroupContext.displayName = 'InputGroupContext';\n\nexport { InputGroupContext, InputGroupContextProps };\n","import { useContext } from 'preact/hooks';\nimport { InputGroupContext } from './InputGroupContext';\n\n/**\n * Utility hook for consuming the InputGroupContext\n *\n * @returns The value of closest InputGroupContext provider\n */\nfunction useInputGroupContext() {\n  return useContext(InputGroupContext);\n}\n\nexport { useInputGroupContext };\n"],"names":[],"mappings":";;;;AAOA;;AAEG;AACH,MAAM,iBAAiB,GAAG,aAAa,CAAgC,IAAI,EAAE;AAE7E,iBAAiB,CAAC,WAAW,GAAG,mBAAmB;;ACTnD;;;;AAIG;AACH,SAAS,oBAAoB,GAAA;AAC3B,IAAA,OAAO,UAAU,CAAC,iBAAiB,CAAC,CAAC;AACvC;;;;"}