{"version":3,"file":"Skeleton-18c022d9.js","sources":["../../src/UNSAFE_Skeleton/Skeleton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { dimensionInterpolations } from '../utils/UNSAFE_interpolations/dimensions';\nimport type { DimensionProps } from '../utils/UNSAFE_interpolations/dimensions';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { borderInterpolations } from '../utils/UNSAFE_interpolations/borders';\nimport type { BorderProps } from '../utils/UNSAFE_interpolations/borders';\nimport { stringLiteralArray } from '../utils/UNSAFE_arrayUtils';\nimport { WithRequired } from '../utils/UNSAFE_typeUtils';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { SkeletonRedwoodTheme } from './themes/redwood/SkeletonTheme';\n\nconst dimensions = stringLiteralArray(['height', 'width']);\ntype Dimension = typeof dimensions[number];\nconst border = stringLiteralArray(['borderRadius']);\ntype BorderRadius = typeof border[number];\n\n// This component has some StyleInterpolationProps. Those are the height and width properties of the SkeletonProps.\ntype StyleInterpolationProps = Pick<DimensionProps, Dimension>;\n// This component has some BorderRadiusProps, which is the borderRadius property of the SkeletonProps.\ntype BorderRadiusProps = Pick<BorderProps, BorderRadius>;\n//This type has StyleInterpolationProps and BorderRadiusProps with the height prop made required.\ntype SkeletonProps = WithRequired<StyleInterpolationProps, 'height'> & BorderRadiusProps;\n\n// Create an array [dimensionInterpolations['height'], dimensionInterpolations['width']]\nconst skeletonDimensionInterpolation = Array.from(dimensions, (x) => dimensionInterpolations[x]);\nconst borderRadiusInterpolation = Array.from(border, (x) => borderInterpolations[x]);\nconst interpolations = [\n  ...Object.values(borderRadiusInterpolation),\n  ...Object.values(skeletonDimensionInterpolation)\n];\n\nconst SkeletonInterpolations = mergeInterpolations<SkeletonProps>(interpolations);\n/**\n * Skeleton component allows the appropriate skeleton to be rendered based on the\n * property values\n **/\nexport function Skeleton({ ...props }: SkeletonProps) {\n  const { classes: skeletonBase } = useComponentTheme(SkeletonRedwoodTheme);\n  const classes = classNames([skeletonBase]);\n\n  const skeletonDimensions = SkeletonInterpolations({ width: '100%', borderRadius: 0, ...props });\n  return <div style={skeletonDimensions} class={classes} />;\n}\n"],"names":["_jsx"],"mappings":";;;;;;;;;;;AAkBA,MAAM,UAAU,GAAG,kBAAkB,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAE3D,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;AAUpD;AACA,MAAM,8BAA8B,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,MAAM,yBAAyB,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,MAAM,cAAc,GAAG;AACrB,IAAA,GAAG,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC;AAC3C,IAAA,GAAG,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC;CACjD,CAAC;AAEF,MAAM,sBAAsB,GAAG,mBAAmB,CAAgB,cAAc,CAAC,CAAC;AAClF;;;AAGI;SACY,QAAQ,CAAC,EAAE,GAAG,KAAK,EAAiB,EAAA;IAClD,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;IAC1E,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AAE3C,IAAA,MAAM,kBAAkB,GAAG,sBAAsB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,CAAC;IAChG,OAAOA,GAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAA,CAAI,CAAC;AAC5D;;;;"}