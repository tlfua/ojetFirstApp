{"version":3,"file":"MessageDetail-558fff70.js","sources":["../../src/PRIVATE_Message/MessageDetail.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren, Fragment } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { messageDetailStyles } from './themes/MessageStyles.css';\nimport { MessageRendererDataItem, MessageVariant } from './Message.types';\nimport { isValidValueForProp } from './MessageFormattingUtils';\n\ntype MessageWithDetailText = {\n  /**\n   * The detail text for the message\n   */\n  detail?: string;\n};\n\n/**\n * Props for the Detail component\n */\ntype Props<K, D> = {\n  /**\n   * The data item for rendering the detail content\n   */\n  item: MessageRendererDataItem<K, D>;\n\n  /**\n   * A custom renderer for rendering the detail content\n   */\n  renderer?: (item: MessageRendererDataItem<K, D>) => ComponentChildren;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n};\n\n/**\n * Default renderer for rendering the detail content.\n *\n * @param item The data item object\n * @returns Rendered detail content\n */\nfunction defaultDetailRenderer<D extends MessageWithDetailText>(\n  item: MessageRendererDataItem<unknown, D>\n): ComponentChildren {\n  const { detail } = item.data;\n  // If the detail is null or an empty string, do not render the\n  // content row\n  if (!isValidValueForProp(detail)) {\n    return null;\n  }\n  return <Fragment>{detail}</Fragment>;\n}\n\n/**\n * Detail Component for rendering the detail content of the Message\n */\nfunction MessageDetail<K, D extends MessageWithDetailText>({\n  item,\n  renderer,\n  variant = 'banner'\n}: Props<K, D>) {\n  const isCustomRendered = renderer != null;\n  const renderedContent = (renderer ?? defaultDetailRenderer)(item);\n\n  if (renderedContent == null) return null;\n\n  // If detail content is rendered, then wrap it in a div with specified style classes\n  // TODO: JET-48715 - remove marker classes\n  // Right now, oj-message-banner component uses this for unit tests and has no alternate way for\n  // testing. This will need to be removed as we work on oj-c-message-banner.\n  const markerClassForTests = 'oj-c-messagebanner-detail';\n  const classes = classNames([\n    variant === 'banner' && markerClassForTests,\n    messageDetailStyles.base,\n    messageDetailStyles[variant]\n  ]);\n  return (\n    <div class={classes} {...(isCustomRendered ? { 'data-oj-message-custom-detail': '' } : {})}>\n      {renderedContent}\n    </div>\n  );\n}\n\nexport { MessageDetail };\n"],"names":["_jsx"],"mappings":";;;;;;;;AAyCA;;;;;AAKG;AACH,SAAS,qBAAqB,CAC5B,IAAyC,EAAA;AAEzC,IAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;;;AAG7B,IAAA,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE;AAChC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,OAAOA,GAAC,CAAA,QAAQ,EAAE,EAAA,QAAA,EAAA,MAAM,GAAY,CAAC;AACvC,CAAC;AAED;;AAEG;AACH,SAAS,aAAa,CAAqC,EACzD,IAAI,EACJ,QAAQ,EACR,OAAO,GAAG,QAAQ,EACN,EAAA;AACZ,IAAA,MAAM,gBAAgB,GAAG,QAAQ,IAAI,IAAI,CAAC;IAC1C,MAAM,eAAe,GAAG,CAAC,QAAQ,IAAI,qBAAqB,EAAE,IAAI,CAAC,CAAC;IAElE,IAAI,eAAe,IAAI,IAAI;AAAE,QAAA,OAAO,IAAI,CAAC;;;;;IAMzC,MAAM,mBAAmB,GAAG,2BAA2B,CAAC;IACxD,MAAM,OAAO,GAAG,UAAU,CAAC;QACzB,OAAO,KAAK,QAAQ,IAAI,mBAAmB;AAC3C,QAAA,mBAAmB,CAAC,IAAI;QACxB,mBAAmB,CAAC,OAAO,CAAC;AAC7B,KAAA,CAAC,CAAC;IACH,QACEA,GAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,OAAO,MAAO,gBAAgB,GAAG,EAAE,+BAA+B,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EACvF,QAAA,EAAA,eAAe,EACZ,CAAA,EACN;AACJ;;;;"}