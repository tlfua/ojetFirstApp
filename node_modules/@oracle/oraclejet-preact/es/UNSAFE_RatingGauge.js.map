{"version":3,"file":"UNSAFE_RatingGauge.js","sources":["../../src/UNSAFE_RatingGauge/RatingUtils.ts","../../src/UNSAFE_RatingGauge/RatingStar.tsx","../../src/UNSAFE_RatingGauge/RatingGaugeItem.tsx","../../src/UNSAFE_RatingGauge/useEvents.tsx","../../src/UNSAFE_RatingGauge/useTooltipOrDatatip.ts","../../src/UNSAFE_RatingGauge/RatingGauge.tsx"],"sourcesContent":["import type { Ref } from 'preact/hooks';\n\nexport function getValue(\n  pageX: number,\n  max: number,\n  step: number,\n  dimensionsRef: Ref<{ width: number; x: number }>,\n  isRtl: boolean\n): number {\n  const dimensions = dimensionsRef.current;\n  if (!dimensions || dimensions.width === 0) {\n    return -1;\n  }\n  const width = pageX - dimensions.x;\n  const val = (max * (isRtl ? dimensions.width - width : width)) / dimensions.width;\n  const numSteps = val / step;\n\n  return numSteps < 0.5 ? 0 : Math.min(max, Math.ceil(numSteps) * step);\n}\n\nexport function getDimensions(element: HTMLElement | null) {\n  if (!element) {\n    return {\n      width: 0,\n      x: 0\n    };\n  }\n\n  const rect = element.getBoundingClientRect();\n  return {\n    width: rect.width,\n    x: rect.x + window.scrollX\n  };\n}\n\n/**\n * Returns The color in rating gauge, if the color enum is supported. undefined otherwise.\n * @param color The color in rating gauge.\n * @returns The color in rating gauge, if the color enum is supported. undefined otherwise.\n */\nexport function getColorEnum(color: string | undefined) {\n  return color === 'neutral' ||\n    color === 'gold' ||\n    color === 'danger' ||\n    color === 'warning' ||\n    color === 'success'\n    ? color\n    : undefined;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { getColorEnum } from './RatingUtils';\nimport { ratingGaugeVars } from './themes/RatingGaugeContract.css';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { RatingGaugeVariantOptions, RatingGaugeStyles } from './themes/RatingGaugeStyles.css';\nimport { assignInlineVars } from '@vanilla-extract/dynamic';\nimport { DvtThresholdsColors } from '../utils/UNSAFE_dvtCommonUtils';\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { RatingGaugeRedwoodTheme } from './themes/redwood/RatingGaugeTheme';\n\ntype Props = {\n  isSelected: boolean;\n  isDisabled?: boolean;\n  isReadOnly?: boolean;\n  color: 'neutral' | 'gold' | ColorProps['color'] | DvtThresholdsColors;\n};\n\nconst RatingStar = ({ isSelected, isDisabled, isReadOnly, color = 'neutral' }: Props) => {\n  const { forcedColors } = useUser();\n  const isHighContrast = forcedColors === 'active';\n  const needsHighContrastStyle = isHighContrast && isDisabled;\n  const enumColor = getColorEnum(color);\n  const customColors = assignInlineVars({\n    [ratingGaugeVars.colorSelected]: color,\n    [ratingGaugeVars.borderColorSelected]: color,\n    [ratingGaugeVars.colorSelectedReadonly]: color\n  });\n  const {\n    variantClasses,\n    styles: {\n      ratingStarBaseStyle,\n      innerRatingStarColor,\n      outerRatingStarColor,\n      outerDisabledHighContrastBaseStyle,\n      outerDisabledHighContrastSelectedStyle,\n      outerDisabledHighContrastUnselectedStyle\n    }\n  } = useComponentTheme<RatingGaugeVariantOptions, RatingGaugeStyles>(RatingGaugeRedwoodTheme, {\n    color: enumColor,\n    selectionState: isSelected ? 'isSelected' : 'isNotSelected',\n    disabledState: isDisabled ? 'isDisabled' : 'isNotDisabled',\n    readonlyState: isReadOnly ? 'isReadonly' : 'isNotReadonly',\n    highContrastState: isHighContrast ? 'isHighContrast' : 'isNotHighContrast'\n  });\n\n  return (\n    <svg\n      viewBox=\"0 0 36 36\"\n      height=\"100%\"\n      width=\"100%\"\n      style={!enumColor ? customColors : undefined}\n      class={classNames([ratingStarBaseStyle, enumColor ? variantClasses : ''])}>\n      <g>\n        <path\n          class={innerRatingStarColor}\n          d=\"m18 1 5.0061 11.9524 12.9939 1.0344-9.9 8.4215 3.0246 12.5917-11.1246-6.7476-11.12461 6.7476 3.02461-12.5917-9.9-8.4215 12.9939-1.0344z\"\n        />\n        <path\n          class={classNames([\n            outerRatingStarColor,\n            needsHighContrastStyle ? outerDisabledHighContrastBaseStyle : '',\n            needsHighContrastStyle\n              ? isSelected\n                ? outerDisabledHighContrastSelectedStyle\n                : outerDisabledHighContrastUnselectedStyle\n              : ''\n          ])}\n          d=\"m23.0061 12.9524-5.0061-11.9524-5.0061 11.9524-12.9939 1.0344 9.9 8.4215-3.02461 12.5917 11.12461-6.7476 11.1246 6.7476-3.0246-12.5917 9.9-8.4215zm10.5043 1.8394-8.5262 7.2528 2.6077 10.8562-9.5919-5.818-9.59192 5.818 2.60772-10.8562-8.52615-7.2528 11.19115-.891 4.3192-10.31227 4.3192 10.31227z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport { RatingStar };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Fragment } from 'preact';\nimport { RatingStar } from './RatingStar';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { RatingGaugeStyles } from './themes/RatingGaugeStyles.css';\nimport { DvtThresholdsColors } from '../utils/UNSAFE_dvtCommonUtils';\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { RatingGaugeRedwoodTheme } from './themes/redwood/RatingGaugeTheme';\n\ntype Props = {\n  fillRatio: number;\n  isDisabled?: boolean;\n  isReadonly?: boolean;\n  color: 'neutral' | 'gold' | ColorProps['color'] | DvtThresholdsColors;\n};\n\nconst RatingGaugeItem = ({ fillRatio, isDisabled, isReadonly, color }: Props) => {\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n\n  if (fillRatio === 1 || fillRatio === 0) {\n    return (\n      <RatingStar\n        isSelected={fillRatio === 1}\n        isDisabled={isDisabled}\n        isReadOnly={isReadonly}\n        color={color}\n      />\n    );\n  }\n\n  const {\n    styles: { fractionalStarBaseStyle }\n  } = useComponentTheme<never, RatingGaugeStyles>(RatingGaugeRedwoodTheme);\n\n  // if fillRatio is not 1 or zero, absolutely position selected star above the\n  // unselected star and clip both to form partially selected star.\n\n  return (\n    <Fragment>\n      <div\n        class={fractionalStarBaseStyle}\n        style={{\n          clipPath: `inset(0% ${isRtl ? (1 - fillRatio) * 100 : 0}% 0% ${\n            isRtl ? 0 : fillRatio * 100\n          }%)`\n        }}>\n        <RatingStar\n          isSelected={false}\n          isDisabled={isDisabled}\n          isReadOnly={isReadonly}\n          color={color}\n        />\n      </div>\n      <div\n        class={fractionalStarBaseStyle}\n        style={{\n          clipPath: `inset(0% ${isRtl ? 0 : (1 - fillRatio) * 100}% 0% ${\n            isRtl ? (1 - fillRatio) * 100 : 0\n          }%)`\n        }}>\n        <RatingStar\n          isSelected={true}\n          isDisabled={isDisabled}\n          isReadOnly={isReadonly}\n          color={color}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport { RatingGaugeItem };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useRef } from 'preact/hooks';\nimport type { Ref, MutableRef } from 'preact/hooks';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { getValue, getDimensions } from './RatingUtils';\nimport { CommitDetail, InputDetail } from '../utils/UNSAFE_meterTypes/meterTypes';\nimport { useKeyboardEvents } from '../hooks/PRIVATE_useDvtMeterEvents';\n\nexport const useEvents = (\n  max: number,\n  step: number,\n  value: number,\n  rootRef: Ref<HTMLElement>,\n  dimensionsRef: MutableRef<{ width: number; x: number }>,\n  isInteractive: boolean,\n  onCommit?: (detail: CommitDetail) => void,\n  onInput?: (detail: InputDetail) => void\n) => {\n  const currentInputRef = useRef<number>();\n  const { direction } = useUser();\n\n  if (!isInteractive) {\n    return {};\n  }\n\n  const isRtl = direction === 'rtl';\n\n  const handleInput = (inputValue: number | undefined) => {\n    onInput?.({ value: inputValue } as InputDetail);\n    currentInputRef.current = inputValue;\n  };\n\n  const pointerUpHandler = (event: PointerEvent) => {\n    const val = getValue(event.pageX, max, step, dimensionsRef, isRtl);\n    if (val !== -1) {\n      onCommit?.({ value: val } as CommitDetail);\n    }\n  };\n\n  // When the document or rating gauge parent scrolls, we need to update the dimensionRef.current.x.\n  // Instead of updating it for every scroll event, recalculate the dims the first time mouse enters\n  // so we get fresh dimension value.\n  const pointerEnterHandler = () => {\n    dimensionsRef.current = getDimensions(rootRef.current);\n  };\n\n  const hoverHandler = (event: PointerEvent) => {\n    const val = getValue(event.pageX, max, step, dimensionsRef, isRtl);\n    if (val !== -1 && val != currentInputRef.current) {\n      handleInput(val);\n    }\n  };\n\n  const blurHandler = () => {\n    onCommit?.({ value: value } as CommitDetail);\n  };\n\n  const pointerLeaveHandler = () => {\n    handleInput(undefined);\n  };\n\n  const keyboardEventsProps = useKeyboardEvents(\n    value,\n    0,\n    max,\n    step,\n    currentInputRef,\n    onCommit,\n    onInput\n  );\n\n  return {\n    onPointerUp: pointerUpHandler,\n    onBlur: blurHandler,\n    onPointerMove: hoverHandler,\n    onKeyUp: keyboardEventsProps.onKeyUp,\n    onKeyDown: keyboardEventsProps.onKeyDown,\n    onPointerLeave: pointerLeaveHandler,\n    onPointerEnter: pointerEnterHandler\n  };\n};\n","import { ComponentChild } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { findThreshold } from '../utils/PRIVATE_meterUtils';\nimport { Threshold } from '../utils/UNSAFE_meterTypes';\nimport { useTooltipControlled } from '../hooks/UNSAFE_useTooltip';\n\ntype Props = {\n  max: number;\n  value: number;\n  isReadonly?: boolean;\n  isDisabled?: boolean;\n  tooltip?: string;\n  datatip?: string;\n  thresholds?: Threshold[];\n  ariaDescribedBy?: string;\n  width: number;\n};\n\nexport function useTooltipOrDatatip({\n  max,\n  value,\n  isReadonly,\n  isDisabled,\n  tooltip,\n  datatip,\n  thresholds,\n  ariaDescribedBy,\n  width\n}: Props): {\n  tooltipContent: ComponentChild;\n  tooltipProps: Record<string, any>;\n} {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const tooltipVariant = isReadonly && !isDisabled ? 'tooltip' : 'datatip';\n  let disabled =\n    isDisabled ||\n    !((tooltipVariant === 'tooltip' && tooltip) || (tooltipVariant === 'datatip' && datatip));\n  const datatipIndex = Math.max(1, Math.ceil(value));\n  const offset =\n    tooltipVariant === 'tooltip' ? 0 : ((datatipIndex - Math.ceil(max / 2)) * width) / max;\n  let text = tooltipVariant === 'tooltip' ? tooltip : datatip;\n  if (!text && thresholds && !isDisabled) {\n    text = findThreshold(value, thresholds)?.accessibleLabel;\n    disabled = false;\n  }\n\n  const { tooltipContent, tooltipProps } = useTooltipControlled({\n    text,\n    isOpen,\n    anchor: {\n      x: 'element',\n      y: 'element'\n    },\n    position: 'bottom',\n    offset: {\n      mainAxis: 8, // redwood tooltip design spec\n      crossAxis: offset\n    },\n    isDisabled: disabled,\n    onToggle: ({ value }) => setIsOpen(value),\n    variant: tooltipVariant\n  });\n\n  tooltipProps['aria-describedby'] = [ariaDescribedBy, tooltipProps['aria-describedby']]\n    .filter(Boolean)\n    .join(' ');\n\n  return {\n    tooltipContent,\n    tooltipProps\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { Fragment } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { RatingGaugeItem } from './RatingGaugeItem';\nimport { useEvents } from './useEvents';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { getDimensions } from './RatingUtils';\nimport { useTooltipOrDatatip } from './useTooltipOrDatatip';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\nimport { Threshold, CommitDetail, InputDetail } from '../utils/UNSAFE_meterTypes';\nimport {\n  getThresholdColorFromValue,\n  getMeterAriaProps,\n  validateRange\n} from '../utils/PRIVATE_meterUtils';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { RatingGaugeStyles, RatingGaugeVariantOptions } from './themes/RatingGaugeStyles.css';\nimport { RatingGaugeRedwoodTheme } from './themes/redwood/RatingGaugeTheme';\n\n/**\n * Props for the RatingGauge\n */\ntype Props = {\n  /**\n   * Defines whether the rating gauge should be read only. User interaction is prevented if set to true.\n   */\n  isReadonly?: boolean;\n\n  /**\n   * Defines whether the rating gauge is disabled or not. User interaction is prevented and the rating gauge is hidden from screen readers if set to true.\n   */\n  isDisabled?: boolean;\n\n  /**\n   * The size of the individual rating gauge items. The default value of this property is theme driven.\n   */\n  size?: 'sm' | 'md' | 'lg';\n\n  /**\n   * The color of the individual rating gauge items.\n   */\n  color?: 'neutral' | 'gold';\n\n  /**\n   * The value of the rating gauge.\n   */\n  value?: number;\n\n  /**\n   * Specifies the increment by which values can be changed.\n   */\n  step?: number;\n\n  /**\n   * Integer value specifying the maximum value of the rating gauge, which determines the number of items that are displayed\n   */\n  max?: number;\n\n  /**\n   * The callback called in response to hover or focus interactions with the rating gauge items.\n   */\n  onInput?: (detail: InputDetail) => void;\n\n  /**\n   * The callback called when value of rating gauge changes on blur or Enter or click.\n   */\n  onCommit?: (detail: CommitDetail) => void;\n\n  /**\n   * The rating gauge tooltip. Tooltip is only used for read only rating gauges. If aria-label is not specified, tooltip will be used as the aria-label.\n   */\n  tooltip?: string;\n\n  /**\n   * The rating gauge datatip string. Datatip is used for interactive rating gauges.\n   */\n  datatip?: string;\n\n  /**\n   * A label to be used for accessibility purposes. Default label will be used if not provided. This will be used for the aria-label of the DOM element.\n   */\n  'aria-label'?: string;\n\n  /**\n   * One or more ids (separated by spaces) of elements that label the rating gauge. This will be used for the aria-labelledby of the DOM element.\n   */\n  'aria-labelledby'?: string;\n\n  /**\n   * One or more ids (separated by spaces) of elements that describe the rating gauge. This will be used for the aria-describedby of the DOM element.\n   */\n  'aria-describedby'?: string;\n\n  /**\n   * An array of Threshold objects.\n   * Applications are required to include information about thresholds for screen readers to make their component accessible by using aria-describedby, aria-labelledby or aria-label.\n   */\n  thresholds?: Threshold[];\n};\n\n/**\n * A rating gauge displays information graphically, typically displaying or accepting user feedback on a product or service.\n */\nexport function RatingGauge({\n  max = 5,\n  value = 0,\n  size,\n  color = 'neutral',\n  step = 1,\n  isReadonly,\n  isDisabled,\n  ...props\n}: Props) {\n  validateRange(0, max, value, step);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const dimensionsRef = useRef(getDimensions(null));\n\n  const isInteractive = !isReadonly && !isDisabled;\n\n  // Since the dimension are compute lazily after render, store width and x in ref\n  // This is used to identify hovered and clicked star.\n  // width of the rating gauge depends on size and max so passing them as dependencies for useEffect\n  useEffect(() => {\n    dimensionsRef.current = getDimensions(rootRef.current);\n  }, [size, max]);\n\n  const eventProps = useEvents(\n    max,\n    step,\n    value,\n    rootRef,\n    dimensionsRef,\n    isInteractive,\n    props.onCommit,\n    props.onInput\n  );\n\n  const { tooltipContent, tooltipProps } = useTooltipOrDatatip({\n    max,\n    value,\n    isReadonly,\n    isDisabled,\n    tooltip: props.tooltip,\n    datatip: props.datatip,\n    thresholds: props.thresholds,\n    width: dimensionsRef.current.width,\n    ariaDescribedBy: props['aria-describedby']\n  });\n\n  const ariaProps = getMeterAriaProps(\n    value,\n    0,\n    max,\n    props['aria-label'],\n    props['aria-labelledby'],\n    props.thresholds,\n    isDisabled,\n    isReadonly,\n    props.tooltip\n  );\n\n  const mergedEventProps = mergeProps(eventProps, tooltipProps);\n\n  const itemColor = getThresholdColorFromValue(value, color, props.thresholds);\n\n  const { isTabbable } = useTabbableMode();\n  const {\n    classes,\n    styles: { baseStyle, interactiveStyle, itemStyle, sizeStyle }\n  } = useComponentTheme<RatingGaugeVariantOptions, RatingGaugeStyles>(RatingGaugeRedwoodTheme, {\n    size\n  });\n\n  return (\n    <Fragment>\n      <div\n        {...ariaProps}\n        ref={rootRef}\n        class={classNames([classes, baseStyle, isInteractive ? interactiveStyle : undefined])}\n        tabIndex={isTabbable && !isDisabled ? 0 : -1}\n        {...mergedEventProps}>\n        {[...Array(max)].map((_, index: number) => {\n          const fillRatio = Math.min(Math.max(0, value - index), 1);\n          return (\n            <div className={classNames([sizeStyle, itemStyle])}>\n              <RatingGaugeItem\n                fillRatio={fillRatio}\n                isDisabled={isDisabled}\n                isReadonly={isReadonly}\n                color={itemColor}\n              />\n            </div>\n          );\n        })}\n      </div>\n      {tooltipContent}\n    </Fragment>\n  );\n}\n"],"names":["_jsx","_jsxs"],"mappings":"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"}