/* @oracle/oraclejet-preact: 15.1.2 */
import { jsxs, jsx } from 'preact/jsx-runtime';
import { useComponentTheme } from './hooks/UNSAFE_useComponentTheme.js';
import { useTranslationBundle } from './hooks/UNSAFE_useTranslationBundle.js';
import './PRIVATE_Message.js';
import './UNSAFE_HiddenAccessible.js';
import { ComponentMessageRedwoodTheme } from './UNSAFE_ComponentMessage/themes/redwood/ComponentMessageTheme.js';
import { H as HiddenAccessible } from './HiddenAccessible-6ca9b782.js';
import { i as isSeverityIconNeeded } from './MessageUtils-7e2e288a.js';
import { M as MessageStartIcon } from './MessageStartIcon-a9a1a453.js';
import { M as MessageSummary } from './MessageSummary-29c1f7ef.js';

/**
 * The component that renders an individual message for inline component messaging.
 */
function ComponentMessage({ detail, fieldLabel, severity = 'error' }) {
    const { classes } = useComponentTheme(ComponentMessageRedwoodTheme, {
        severity: severity ?? 'none'
    });
    const translations = useTranslationBundle('@oracle/oraclejet-preact');
    const severityTranslations = {
        confirmation: translations.confirmation(),
        error: translations.error(),
        info: translations.info(),
        warning: translations.warn()
    };
    return (jsxs("div", { class: classes, role: "alert", "aria-atomic": "true", children: [fieldLabel && jsx(HiddenAccessible, { children: fieldLabel }), isSeverityIconNeeded(severity) && (jsx(MessageStartIcon, { variant: "inline", severity: severity, translations: severityTranslations })), jsx(MessageSummary, { variant: "inline", text: detail })] }));
}

export { ComponentMessage as C };
//# sourceMappingURL=ComponentMessage-a41ebbdc.js.map
