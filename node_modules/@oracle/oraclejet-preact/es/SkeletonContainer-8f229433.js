/* @oracle/oraclejet-preact: 15.1.2 */
import { jsx } from 'preact/jsx-runtime';
import { useState, useEffect } from 'preact/hooks';
import './utils/UNSAFE_classNames.js';
import { skeletonStyles } from './PRIVATE_List/themes/ListStyles.css.js';
import { c as classNames } from './classNames-f414daad.js';

/**
 * Allows to specify the time delay for rendering the component
 **/
const timerValue = 50;
/**
 * SkeletonContainer renders 'minimumCount' number of skeletons
 * of the variant specified from its child element - Skeleton's prop after
 * 'timerValue' ms delay
 **/
function SkeletonContainer({ children, minimumCount = 1 }) {
    const [isVisible, setIsVisible] = useState(false);
    useEffect(() => {
        setTimeout(() => {
            setIsVisible(true);
        }, timerValue);
    }, []);
    const containerClasses = classNames([skeletonStyles.container]);
    return isVisible && children ? (jsx("div", { class: containerClasses, role: "presentation", children: [...Array(minimumCount)].map((_element, index) => children(index)) })) : null;
}

export { SkeletonContainer as S };
//# sourceMappingURL=SkeletonContainer-8f229433.js.map
