/* @oracle/oraclejet-preact: 15.1.2 */
import { scaleVars } from './Common/themes/themeContract.css.js';

const rgb = (rgb) => `rgb(${rgb})`;
const rgba = (rgb, alpha) => `rgba(${rgb}, ${alpha})`;
// JET-59344 refactor of 'fallbackVar' from '@vanilla-extract/css'.
// directly importing the function was causing vanilla-extract to be bundled into
// the preact packages and causing issues with testing
const fallbackVar = (...values) => {
    const finalValue = values.reverse().reduce((acc, value) => {
        if (acc === '') {
            acc = String(value);
        }
        else {
            if (typeof value !== 'string' || !/^var\(--.*\)$/.test(value)) {
                throw new Error(`Invalid variable name: ${value}`);
            }
            acc = value.replace(/\)$/, `, ${acc})`);
        }
        return acc;
    }, '');
    return finalValue;
};
// MessageBanner is used by legacy oj-message-banner, so we need to fallback the size units
// var to the legacy CSS var
const xUnits = (cnt) => cnt === 1
    ? fallbackVar(scaleVars.size.units, 'var(--oj-core-spacing-1x)')
    : `calc(${cnt} * ${fallbackVar(scaleVars.size.units, 'var(--oj-core-spacing-1x)')})`;
const min = (val, minVal) => `min(${val},${minVal})`;
const max = (val, minVal) => `max(${val},${minVal})`;

export { rgba as a, max as b, fallbackVar as f, min as m, rgb as r, xUnits as x };
//# sourceMappingURL=utils-9a0cb8dc.js.map
