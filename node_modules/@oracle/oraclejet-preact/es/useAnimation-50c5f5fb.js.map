{"version":3,"file":"useAnimation-50c5f5fb.js","sources":["../../src/hooks/UNSAFE_useAnimation/animationUtils.ts","../../src/hooks/UNSAFE_useAnimation/useAnimation.ts"],"sourcesContent":["import { StandardProperties } from 'csstype';\n\nexport type UseAnimationCssProperties = StandardProperties & TransformProperties;\n\n// This represents shorthand UseAnimationCssProperties props.\ntype TransformProperties = Partial<\n  Record<\n    | 'translateX'\n    | 'translateY'\n    | 'translateZ'\n    | 'rotateX'\n    | 'rotateY'\n    | 'rotateZ'\n    | 'skewX'\n    | 'skewY',\n    string\n  > &\n    Record<'scaleX' | 'scaleY' | 'scaleZ', string | number>\n>;\n\n/**\n * Converts shorthand translate props into transform string representation.\n *\n * @param translateX\n * @param translateY\n * @param translateZ\n * @returns Longhand transform string representation.\n */\nfunction convertTranslateShortcuts(\n  translateX: TransformProperties['translateX'],\n  translateY: TransformProperties['translateY'],\n  translateZ: TransformProperties['translateZ']\n) {\n  return `${translateX ? ` translateX(${translateX})` : ''}${\n    translateY ? ` translateY(${translateY})` : ''\n  }${translateZ ? ` translateZ(${translateZ})` : ''}`;\n}\n\n/**\n * Converts shorthand rotate props into transform string representation.\n *\n * @param rotateX\n * @param rotateY\n * @param rotateZ\n * @returns Longhand transform string representation.\n */\nfunction convertRotateShortcuts(\n  rotateX?: TransformProperties['rotateX'],\n  rotateY?: TransformProperties['rotateY'],\n  rotateZ?: TransformProperties['rotateZ']\n) {\n  return `${rotateX ? ` rotateX(${rotateX})` : ''}${rotateY ? ` rotateY(${rotateY})` : ''}${\n    rotateZ ? ` rotateZ(${rotateZ})` : ''\n  }`;\n}\n\n/**\n * Converts shorthand scale props into transform string representation.\n *\n * @param scaleX\n * @param scaleY\n * @param scaleZ\n * @returns Longhand transform string representation.\n */\nfunction convertScaleShortcuts(\n  scaleX: TransformProperties['scaleX'],\n  scaleY: TransformProperties['scaleY'],\n  scaleZ: TransformProperties['scaleZ']\n) {\n  return `${scaleX || scaleX === 0 ? ` scaleX(${scaleX})` : ''}${\n    scaleY || scaleY === 0 ? ` scaleY(${scaleY})` : ''\n  }${scaleZ || scaleZ === 0 ? ` scaleZ(${scaleZ})` : ''}`;\n}\n\n/**\n * Converts shorthand skew props into transform string representation.\n *\n * @param skewX\n * @param skewY\n * @returns Longhand transform string representation.\n */\nfunction convertSkewShortcuts(\n  skewX: TransformProperties['skewX'],\n  skewY: TransformProperties['skewY']\n) {\n  return `${skewX ? ` skewX(${skewX})` : ''}${skewY ? ` skewY(${skewY})` : ''}`;\n}\n\n/**\n * Converts animation CSS properties into Regular camel cased CSS properties.\n *\n * @param useAnimationCssProperties This include transform shorthand props.\n * @returns Regular camel cased CSS properties.\n */\nexport function convertUseAnimationCssPropertiesToRegularCSS(\n  useAnimationCssProperties?: UseAnimationCssProperties\n) {\n  if (!useAnimationCssProperties) {\n    return {};\n  }\n  const {\n    translateX,\n    translateY,\n    translateZ,\n    rotateX,\n    rotateY,\n    rotateZ,\n    scaleX,\n    scaleY,\n    scaleZ,\n    skewX,\n    skewY,\n    ...otherCssProperties\n  } = useAnimationCssProperties;\n  const initialTransformValue = useAnimationCssProperties['transform'] || '';\n  // Now we just add values pased in shortcuts to transform property, do we want to replace it instead?\n  const finalTransformValue = `${initialTransformValue}${convertTranslateShortcuts(\n    translateX,\n    translateY,\n    translateZ\n  )}${convertRotateShortcuts(rotateX, rotateY, rotateZ)}${convertScaleShortcuts(\n    scaleX,\n    scaleY,\n    scaleZ\n  )}${convertSkewShortcuts(skewX, skewY)}`;\n  return {\n    ...otherCssProperties,\n    ...(finalTransformValue && { transform: finalTransformValue })\n  };\n}\n\n/**\n * Converts animation CSS properties into WAAPI keyframe properties.\n * Since keyframes have a difference between offset and cssOffset this collision is avoided here.\n *\n * @param useAnimationCssProperties This include transform shorthand props.\n * @returns WAAPI keyframe\n */\nexport function convertUseAnimationCssPropertiesToWAAPIKeyframe(\n  useAnimationCssProperties?: UseAnimationCssProperties\n) {\n  if (!useAnimationCssProperties) {\n    return {};\n  }\n  const { offset, ...otherCssProperties } =\n    convertUseAnimationCssPropertiesToRegularCSS(useAnimationCssProperties);\n  return {\n    ...otherCssProperties,\n    ...(offset && { cssOffset: offset })\n  };\n}\n\n/**\n * Stops an animation.\n *\n * @param animation Animation that is going to be stopped.\n * @returns\n */\nexport function stopAnimation<E extends HTMLElement>(animation: Animation, node: E | null) {\n  // TO DO: rollup-plugin-typescript seems to have an outdated Animation typing. That produces warnings while bulding.\n  // Update picked type to get rid of this casting.\n  // We have to check if the element is visible to commit styles\n  isVisible(node) && (animation as any).commitStyles();\n  animation.cancel();\n}\n\n/**\n * Check if an element is visible. Similar to jQuery :visible selector.\n *\n * @param element HTML element that is going to be checked for its visibility.\n * @returns\n */\nfunction isVisible<E extends HTMLElement>(element: E | null): boolean {\n  return !!(element?.offsetWidth || element?.offsetHeight || element?.getClientRects().length);\n}\n","import { useRef, useEffect, useCallback } from 'preact/hooks';\nimport {\n  convertUseAnimationCssPropertiesToRegularCSS,\n  convertUseAnimationCssPropertiesToWAAPIKeyframe,\n  UseAnimationCssProperties,\n  stopAnimation\n} from './animationUtils';\n\nexport type UseAnimationConfig<V extends string, E extends HTMLElement> = {\n  animationStates: Partial<\n    Record<AnimationStateKey<V>, ((node: E) => AnimationConfig) | AnimationConfig>\n  >;\n  isAnimatedOnMount?: boolean;\n  onAnimationEnd?: ({ animationState }: { animationState: V }) => void;\n};\n\n// Used to filter simple states and ones that include previous state\ntype AnimationStateKey<PA extends string> = ExtractAnimationStates<PA | `${PA} => ${PA}`>;\n\n// Used to get previous and current states and do deeper typing\ntype ExtractAnimationStates<StateString extends string> =\n  StateString extends `${infer From} => ${infer To}`\n    ? KeyWithPreviousAndCurrentState<From, To>\n    : StateString;\n\n// Used to just allow keys with different previous and current states\ntype KeyWithPreviousAndCurrentState<PreviousState extends string, CurrentState extends string> = {\n  b: PreviousState;\n} extends { b: CurrentState }\n  ? never\n  : `${PreviousState} => ${CurrentState}`;\n\ntype AnimationConfig = {\n  from?: UseAnimationCssProperties;\n  to: UseAnimationCssProperties;\n  end?: UseAnimationCssProperties;\n  options?: AnimationOptions;\n};\n\ntype AnimationOptions = {\n  delay?: number;\n  duration?: number;\n  easing?:\n    | 'linear'\n    | 'ease'\n    | 'ease-in'\n    | 'ease-out'\n    | 'ease-in-out'\n    | [number, number, number, number];\n};\n\n// Used to exclude states that include => since this string is used to represent a transition from state to another.\ntype PermittedAnimationState<V extends string> = Exclude<V, `${string}=>${string}`>;\n\n/**\n * Hook to animate single components.\n * It allows n number of animation states.\n * @param animationState\n * @param animationConfig\n * @returns\n */\nexport function useAnimation<V extends string, E extends HTMLElement = HTMLElement>(\n  animationState: PermittedAnimationState<V>,\n  {\n    animationStates,\n    isAnimatedOnMount = false,\n    onAnimationEnd = () => {}\n  }: UseAnimationConfig<PermittedAnimationState<V>, E>\n) {\n  const didMountRef = useRef(false);\n  const nodeRef = useRef<E | null>(null);\n  const currentAnimationState = useRef<PermittedAnimationState<V>>();\n  const currentAnimation = useRef<Animation>();\n\n  // We don't allow changing animationStates. Ref to keep \"first run\" animation states.\n  const animationStatesRef =\n    useRef<UseAnimationConfig<PermittedAnimationState<V>, E>['animationStates']>(animationStates);\n\n  useEffect(() => {\n    // UseEffect just have to be ran when there is a change on animationState\n    if (currentAnimationState.current === animationState) return;\n\n    // It makes sense to keep track of animation states even if there's no animated element to animate.\n    const previousAnimationState = currentAnimationState.current;\n    currentAnimationState.current = animationState;\n\n    //Stop an animation here only makes sense if the previous one is running\n    if (currentAnimation.current?.playState === 'running') {\n      stopAnimation(currentAnimation.current, nodeRef.current);\n    }\n\n    const animatedElement = nodeRef.current;\n    if (!animatedElement) {\n      return;\n    }\n\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      if (!isAnimatedOnMount) {\n        return;\n      }\n    }\n\n    const animationConfig = getConfig(\n      animationStatesRef.current,\n      animatedElement,\n      animationState,\n      previousAnimationState\n    );\n\n    if (!animationConfig) {\n      return;\n    }\n\n    currentAnimation.current = startAnimation(\n      animationConfig,\n      animatedElement,\n      animationState,\n      onAnimationEnd\n    );\n  }, [animationState, isAnimatedOnMount, onAnimationEnd]);\n\n  /**\n   * Used to cancel current animation. When animation is canceled node style goes back to beginning style of canceled animation.\n   * @returns\n   */\n  const cancelCurrentAnimation = useCallback(() => {\n    const animation = currentAnimation.current;\n    if (animation?.playState === 'running') {\n      animation.cancel();\n    }\n  }, []);\n\n  /**\n   * Callback ref use to set nodeRef.\n   *\n   * @param node Actual element user set.\n   * @returns\n   */\n  const callbackRef = useCallback((node: E | null) => {\n    if (node != nodeRef.current) {\n      //If for any reason element is unmounted we have to cancel animation(if there is one) and\n      //set currentAnimation as undefined so we don't keep running this animation\n      if (nodeRef.current) {\n        currentAnimation.current?.cancel();\n        currentAnimation.current = undefined;\n      }\n      nodeRef.current = node;\n    }\n  }, []);\n\n  return { nodeRef: callbackRef, controller: { cancel: cancelCurrentAnimation } };\n}\n\n/**\n * Gets animation configuration.\n *\n * @param animationStates Set of animation configurations provided by the user.\n * @param animatedElement Element that is going to be styled.\n * @param animationState Current animation state.\n * @param previousAnimationState Previous animation state.\n * @returns AnimationConfig.\n */\nfunction getConfig<V extends string, E extends HTMLElement>(\n  animationStates: UseAnimationConfig<PermittedAnimationState<V>, E>['animationStates'],\n  animatedElement: E,\n  animationState: PermittedAnimationState<V>,\n  previousAnimationState?: PermittedAnimationState<V>\n) {\n  const currentAnimationStateConfig =\n    animationStates[\n      `${previousAnimationState} => ${animationState}` as keyof UseAnimationConfig<\n        PermittedAnimationState<V>,\n        E\n      >['animationStates']\n    ] ||\n    animationStates[\n      animationState as keyof UseAnimationConfig<PermittedAnimationState<V>, E>['animationStates']\n    ];\n\n  const animationConfig =\n    typeof currentAnimationStateConfig === 'function'\n      ? currentAnimationStateConfig(animatedElement)\n      : (currentAnimationStateConfig as AnimationConfig);\n\n  return animationConfig && Object.keys(animationConfig).length > 0 ? animationConfig : null;\n}\n\n/**\n * Starts an animation.\n *\n * @param animationConfig Animation configuration used by the animation.\n * @param animatedElement Element that is going to be styled.\n * @param animationState Current animation state.\n * @param onAnimationEnd Callback called once the animation is completed.\n * @returns Animation.\n */\nfunction startAnimation<V extends string, E extends HTMLElement>(\n  animationConfig: AnimationConfig,\n  animatedElement: E,\n  animationState: PermittedAnimationState<V>,\n  onAnimationEnd: UseAnimationConfig<PermittedAnimationState<V>, E>['onAnimationEnd']\n) {\n  const { delay, duration, easing } = animationConfig.options || {};\n\n  //Now, if user does not pass a value we override it by hand. We will use theming tools in future.\n  const animationOptions = {\n    delay: delay || 0,\n    duration: duration || 400,\n    easing: easing\n      ? typeof easing === 'string'\n        ? easing\n        : `cubic-bezier(${easing[0]}, ${easing[1]}, ${easing[2]}, ${easing[3]})`\n      : 'ease'\n  };\n\n  // WAAPI animation method. https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n  // TO DO: Check for required browser compatibility in case we need pollyfill.\n  // https://github.com/web-animations/web-animations-js/blob/dev/docs/support.md#browser-support\n  const startedAnimation = animatedElement.animate(\n    [\n      convertUseAnimationCssPropertiesToWAAPIKeyframe(animationConfig.from),\n      convertUseAnimationCssPropertiesToWAAPIKeyframe(animationConfig.to)\n    ],\n    { ...animationOptions }\n  );\n\n  startedAnimation.onfinish = () => {\n    //We commit styles to have an only source of truth.\n    setEndStyle(animatedElement, true, animationConfig);\n    // On animationEnd is only called when animation actually finished. If an animation is interruped by other one\n    // or animated element is not longer rendered onAnimationEnd will not be called. Do we want to have a callback for those cases?\n    onAnimationEnd?.({ animationState });\n  };\n\n  return startedAnimation;\n}\n\n/**\n * Sets element style.\n *\n * @param animatedElement Element that is going to be styled.\n * @param toAndEndStyle Represents which data will be used to set style. If set to true it uses \"to\" and \"endStyle\".\n * If set to false it uses just \"endStyle\".\n * @param animationConfig Style that is going to be set.\n */\nfunction setEndStyle<E extends HTMLElement>(\n  animatedElement: E,\n  toAndEndStyle: boolean,\n  animationConfig: AnimationConfig\n) {\n  const endStyle = toAndEndStyle\n    ? {\n        ...convertUseAnimationCssPropertiesToRegularCSS(animationConfig.to),\n        ...convertUseAnimationCssPropertiesToRegularCSS(animationConfig.end)\n      }\n    : convertUseAnimationCssPropertiesToRegularCSS(animationConfig.end);\n  for (const key in endStyle) {\n    //TO DO: Look for a better way to handle types.\n    (<any>animatedElement.style)[key] = endStyle[key as keyof typeof endStyle];\n  }\n}\n"],"names":[],"mappings":"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"}