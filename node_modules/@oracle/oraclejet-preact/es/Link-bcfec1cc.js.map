{"version":3,"file":"Link-bcfec1cc.js","sources":["../../src/UNSAFE_Link/Link.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { LinkVariantOptions } from './themes/LinkStyles.css';\nimport { useInteractionStyle } from '../hooks/UNSAFE_useInteractionStyle';\nimport { LinkRedwoodTheme } from './themes/redwood/LinkTheme';\n\ntype Props = {\n  /**\n   * Sets the URL that the hyperlink points to.\n   */\n  href: string;\n\n  /**\n   * Sets the variant. The default value of this property is theme driven.\n   */\n  variant?: 'standard' | 'primary' | 'secondary';\n\n  /**\n   * Sets the placement.\n   */\n  placement?: 'standalone' | 'embedded';\n\n  /**\n   * Sets the target.\n   */\n  target?: string;\n\n  /**\n   * Specifies id for element (or elements) that describes the object.\n   */\n  'aria-describedby'?: string;\n\n  /**\n   * A label to be used for accessibility purposes.\n   */\n  'aria-label'?: string;\n\n  /**\n   * One or more ids (separated by spaces) of elements that label the Link.\n   */\n  'aria-labelledby'?: string;\n\n  /**\n   * Triggered when a link is clicked, whether by keyboard, mouse, or touch events.\n   */\n  onClick?: (event: Event) => void;\n\n  /**\n   * Specifies the children\n   */\n  children?: ComponentChildren;\n};\n\nconst noop = () => {};\n\nexport function Link({\n  href,\n  variant,\n  placement,\n  target,\n  'aria-describedby': ariaDescribedBy,\n  'aria-label': accessibleLabel,\n  'aria-labelledby': ariaLabelledBy,\n  children,\n  onClick\n}: Props) {\n  const { interactionProps, applyPseudoHoverStyle, applyHoverStyle } = useInteractionStyle();\n  const { classes } = useComponentTheme<LinkVariantOptions>(LinkRedwoodTheme, {\n    needsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',\n    pseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',\n    variant,\n    placement\n  });\n  const linkClasses = classNames([classes]);\n  const { pressProps } = usePress(onClick ?? noop);\n  return (\n    <a\n      href={href}\n      aria-describedby={ariaDescribedBy}\n      aria-label={accessibleLabel}\n      aria-labelledby={ariaLabelledBy}\n      target={target}\n      {...pressProps}\n      {...interactionProps}\n      class={linkClasses}>\n      {children}\n    </a>\n  );\n}\n"],"names":["_jsx"],"mappings":";;;;;;;;;AA8DA,MAAM,IAAI,GAAG,MAAK,GAAG,CAAC;AAEhB,SAAU,IAAI,CAAC,EACnB,IAAI,EACJ,OAAO,EACP,SAAS,EACT,MAAM,EACN,kBAAkB,EAAE,eAAe,EACnC,YAAY,EAAE,eAAe,EAC7B,iBAAiB,EAAE,cAAc,EACjC,QAAQ,EACR,OAAO,EACD,EAAA;IACN,MAAM,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,eAAe,EAAE,GAAG,mBAAmB,EAAE,CAAC;AAC3F,IAAA,MAAM,EAAE,OAAO,EAAE,GAAG,iBAAiB,CAAqB,gBAAgB,EAAE;QAC1E,gBAAgB,EAAE,eAAe,GAAG,oBAAoB,GAAG,qBAAqB;QAChF,WAAW,EAAE,qBAAqB,GAAG,eAAe,GAAG,gBAAgB;QACvE,OAAO;QACP,SAAS;AACV,KAAA,CAAC,CAAC;IACH,MAAM,WAAW,GAAG,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1C,MAAM,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC;IACjD,QACEA,GACE,CAAA,GAAA,EAAA,EAAA,IAAI,EAAE,IAAI,EACQ,kBAAA,EAAA,eAAe,EACrB,YAAA,EAAA,eAAe,EACV,iBAAA,EAAA,cAAc,EAC/B,MAAM,EAAE,MAAM,EACV,GAAA,UAAU,EACV,GAAA,gBAAgB,EACpB,KAAK,EAAE,WAAW,EACjB,QAAA,EAAA,QAAQ,EACP,CAAA,EACJ;AACJ;;;;"}