/* @oracle/oraclejet-preact: 15.1.2 */
import { jsx } from 'preact/jsx-runtime';
import './utils/UNSAFE_classNames.js';
import { usePress } from './hooks/UNSAFE_usePress.js';
import { useComponentTheme } from './hooks/UNSAFE_useComponentTheme.js';
import { useInteractionStyle } from './hooks/UNSAFE_useInteractionStyle.js';
import { LinkRedwoodTheme } from './UNSAFE_Link/themes/redwood/LinkTheme.js';
import { c as classNames } from './classNames-f414daad.js';

const noop = () => { };
function Link({ href, variant, placement, target, 'aria-describedby': ariaDescribedBy, 'aria-label': accessibleLabel, 'aria-labelledby': ariaLabelledBy, children, onClick }) {
    const { interactionProps, applyPseudoHoverStyle, applyHoverStyle } = useInteractionStyle();
    const { classes } = useComponentTheme(LinkRedwoodTheme, {
        needsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',
        pseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',
        variant,
        placement
    });
    const linkClasses = classNames([classes]);
    const { pressProps } = usePress(onClick ?? noop);
    return (jsx("a", { href: href, "aria-describedby": ariaDescribedBy, "aria-label": accessibleLabel, "aria-labelledby": ariaLabelledBy, target: target, ...pressProps, ...interactionProps, class: linkClasses, children: children }));
}

export { Link as L };
//# sourceMappingURL=Link-bcfec1cc.js.map
