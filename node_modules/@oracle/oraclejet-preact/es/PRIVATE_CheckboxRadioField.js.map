{"version":3,"file":"PRIVATE_CheckboxRadioField.js","sources":["../../src/PRIVATE_CheckboxRadioField/useCheckboxRadioField.ts","../../src/PRIVATE_CheckboxRadioField/CheckboxRadioField.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\nimport { useMessageSeverity } from '../hooks/PRIVATE_useMessageSeverity';\nimport { useAccessibleContext } from '../hooks/UNSAFE_useAccessibleContext';\nimport { merge } from '../utils/UNSAFE_stringUtils';\nimport { InlineUserAssistance } from '../UNSAFE_UserAssistance';\n\ntype UseCheckboxRadioFieldProps = {\n  ariaDescribedBy?: string;\n  baseId: string;\n  hasValue?: boolean;\n  hasTopUserAssistance?: boolean;\n  hasBottomUserAssistance?: boolean;\n  isFocused?: boolean; // TODO: check if this is needed\n  isReadonly?: boolean;\n  isRequired?: boolean;\n  label: string;\n  labelEdge?: 'none' | 'top' | 'start' | 'inside';\n  styleVariant?: 'default' | 'embedded'; // TODO: check if this is needed\n  messages?: ComponentProps<typeof InlineUserAssistance>['messages'];\n};\n\ntype GroupProps = {\n  groupProps: {\n    'aria-describedby'?: string;\n    'aria-labelledby'?: string;\n    'aria-required'?: boolean;\n    'aria-invalid'?: boolean;\n    id: string;\n    readonly?: boolean;\n  };\n  labelProps: {\n    forId: string;\n    id: string;\n    isRequiredShown?: boolean;\n  };\n  topUserAssistanceProps?: {\n    id: string;\n    variant: 'reflow';\n  };\n  bottomUserAssistanceProps?: {\n    id: string;\n    isRequiredShown: boolean;\n  };\n};\n\nexport function useCheckboxRadioField({\n  ariaDescribedBy,\n  baseId,\n  hasValue,\n  hasTopUserAssistance,\n  hasBottomUserAssistance,\n  isReadonly,\n  isRequired = false,\n  label,\n  labelEdge,\n  messages\n}: UseCheckboxRadioFieldProps): GroupProps {\n  const optionsGroupId = `${baseId}-group`;\n  const labelId = `${baseId}-label`;\n  const topUaId = hasTopUserAssistance ? `${baseId}-top-ua` : undefined;\n  const bottomUaId = hasBottomUserAssistance ? `${baseId}-bottom-ua` : undefined;\n\n  const { UNSAFE_ariaLabelledBy } = useAccessibleContext();\n  const ariaLabelledBy = label === '' && labelEdge === 'none' ? UNSAFE_ariaLabelledBy : labelId;\n\n  const highestMessageSeverity = useMessageSeverity(messages);\n  const hasErrorMessage = highestMessageSeverity === 'error';\n\n  return {\n    groupProps: {\n      'aria-describedby': merge([topUaId, bottomUaId, ariaDescribedBy]),\n      'aria-labelledby': ariaLabelledBy,\n      'aria-required': isRequired,\n      ...(isReadonly && { readonly: true }),\n      ...(hasErrorMessage && { 'aria-invalid': true }),\n      id: optionsGroupId\n      // TODO: ariaInvalid when one of message is error type?\n    },\n    labelProps: {\n      forId: optionsGroupId,\n      id: labelId\n    },\n    // TOP UA is assistive text and help link/text\n    ...(hasTopUserAssistance && {\n      topUserAssistanceProps: {\n        id: topUaId as string,\n        // Use reflow variant so that top UA doesn't have min height\n        variant: 'reflow'\n      }\n    }),\n    // Bottom UA is required indicator or messages\n    ...(hasBottomUserAssistance && {\n      bottomUserAssistanceProps: {\n        id: bottomUaId as string,\n        isRequiredShown: !!isRequired && !hasValue\n      }\n    })\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren, ComponentProps, Ref } from 'preact';\nimport { forwardRef, useImperativeHandle, useRef } from 'preact/compat';\n\nimport { FocusableHandle } from '../hooks/UNSAFE_useFocusableTextField';\nimport { useCollectionFocusRing } from '../hooks/PRIVATE_useCollectionFocusRing';\nimport { FlexboxProps } from '../utils/UNSAFE_interpolations/flexbox';\nimport { Size } from '../utils/UNSAFE_size';\n\nimport { Flex } from '../UNSAFE_Flex';\nimport { Label } from '../UNSAFE_Label';\n\nimport {\n  InlineHelp,\n  InlineUserAssistance,\n  InlineUserAssistanceContainer,\n  UserAssistanceDensityType\n} from '../UNSAFE_UserAssistance';\nimport { useCheckboxRadioField } from './useCheckboxRadioField';\n\nimport { xUnits } from '../UNSAFE_Theme';\n\nimport { topUAContainerStyles } from './CheckboxRadioFieldStyles.css';\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { CheckboxRadioContext } from './CheckboxRadioContext';\n\n// FIXME: \ntype CalcType = `calc(${string})`;\n\ntype InlineUserAssistanceProps = ComponentProps<typeof InlineUserAssistance>;\n\ntype Props = {\n  /**\n   * The ID of an element (or space separated IDs of multiple elements) that\n   * describes the input.\n   */\n  'aria-describedby'?: string;\n  /**\n   * Text to provide guidance to help the user understand what data to enter.\n   */\n  assistiveText?: InlineUserAssistanceProps['assistiveText'];\n  /**\n   * baseId, used to generate other element IDs.\n   */\n  baseId: string;\n  /**\n   * <RadioOption /> or <Checkbox />\n   */\n  children: ComponentChildren;\n  /**\n   * layout direction of the children elements\n   */\n  direction?: FlexboxProps['direction'];\n  /**\n   * Value of the radio option.\n   */\n  hasValue?: boolean;\n  /**\n   * Help source URL associated with the component.\n   */\n  helpSourceLink?: InlineUserAssistanceProps['helpSourceLink'];\n  /**\n   * Custom text to be rendered for the <code>helpSourceLink</code>.\n   */\n  helpSourceText?: InlineUserAssistanceProps['helpSourceText'];\n  /**\n   * Specifies if the radio group is disabled.\n   */\n  isDisabled?: boolean;\n  /**\n   * Specifies if the radio group is read-only.\n   */\n  isReadonly?: boolean;\n  /**\n   * Specifies whether the radio group requires a selection to be made.\n   */\n  isRequired?: boolean;\n  /**\n   * Label text for the group of radio buttons.\n   */\n  label: string;\n  /**\n   * Specifies where the label is positioned relative to the field.\n   */\n  labelEdge?: 'none' | 'top' | 'start' | 'inside';\n  /**\n   * Specifies the width of the label when <code>labelEdge</code> is <code>\"start\"</code>.\n   */\n  labelStartWidth?: Size;\n  /**\n   * Messages to show on screen that are associated with the component.\n   */\n  messages?: InlineUserAssistanceProps['messages'];\n  // TODO: future work: extend this to support checkbox usage too\n  role?: 'radiogroup';\n  /**\n   * Specifies the density of the user assistance presentation.  It can be set to:\n   * <ul>\n   * <li><code>'efficient'</code>: Show inline and reserve space to prevent layout reflow when user\n   * assistance text is displayed.</li>\n   * <li><code>'reflow'</code>: Show inline.  Layout will reflow when text is displayed.</li>\n   * <li><code>'compact'</code>: Messages, help, hints, and required will not be shown inline; they will show in a mode that keeps the screen more compact, like a popup for the messages, and a required icon to indicate Required. </li>\n   * </ul>\n   */\n  userAssistanceDensity?: UserAssistanceDensityType;\n\n  parentComponentVariant: 'radioGroup';\n};\n\nexport const CheckboxRadioField = forwardRef(\n  (\n    {\n      'aria-describedby': ariaDescribedBy,\n      assistiveText,\n      baseId,\n      direction = 'column',\n      hasValue,\n      helpSourceLink,\n      helpSourceText,\n      isDisabled,\n      isReadonly,\n      isRequired,\n      label,\n      labelEdge,\n      labelStartWidth = '33%',\n      parentComponentVariant,\n      messages,\n      userAssistanceDensity,\n      role,\n      children\n    }: Props,\n    ref: Ref<FocusableHandle> = null\n  ) => {\n    const hasTopUserAssistance = !!assistiveText || (!!helpSourceLink && !!helpSourceText);\n    const hasBottomUserAssistance = !isDisabled && !isReadonly;\n    const groupRef = useRef<HTMLDivElement>(null);\n\n    const { groupProps, labelProps, topUserAssistanceProps, bottomUserAssistanceProps } =\n      useCheckboxRadioField({\n        ariaDescribedBy,\n        baseId,\n        isRequired,\n        isReadonly,\n        label,\n        labelEdge,\n        messages,\n        hasValue,\n        hasTopUserAssistance,\n        hasBottomUserAssistance\n      });\n\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (!isDisabled) {\n          const inputChildren = groupRef.current?.querySelectorAll<HTMLInputElement>('input') ?? [];\n          const selectedChild = Array.from(inputChildren).find((child) => child.checked);\n\n          if (selectedChild) {\n            selectedChild.focus();\n          } else {\n            inputChildren[0].focus();\n          }\n        }\n      },\n      blur: () => {\n        if (groupRef.current?.contains(document.activeElement)) {\n          (document.activeElement as HTMLElement).blur();\n        }\n      }\n    }));\n\n    const [isFocusRingShown, focusRingProps] = useCollectionFocusRing(\n      (elem: Element | null) => {\n        return !!groupRef.current?.contains(elem);\n      },\n      ['ArrowUp', 'ArrowRight', 'ArrowDown', 'ArrowLeft']\n    );\n\n    const content = (\n      <>\n        {hasTopUserAssistance && (\n          <div\n            id={`${baseId}-top-ua-container`}\n            class={labelEdge === 'start' ? topUAContainerStyles.start : topUAContainerStyles.top}>\n            <InlineUserAssistanceContainer {...topUserAssistanceProps}>\n              <InlineHelp\n                assistiveText={assistiveText}\n                sourceLink={helpSourceLink}\n                sourceText={helpSourceText}\n              />\n            </InlineUserAssistanceContainer>\n          </div>\n        )}\n        <Flex direction={direction} {...(direction === 'row' && { gap: xUnits(8) as CalcType })}>\n          {children}\n        </Flex>\n        {hasBottomUserAssistance && !isReadonly && (\n          <InlineUserAssistance\n            {...bottomUserAssistanceProps}\n            requiredAlignment=\"start\"\n            messages={messages}\n            userAssistanceDensity={\n              userAssistanceDensity === 'reflow' ? userAssistanceDensity : 'efficient'\n            }\n            id={`${baseId}-bottom-ua-container`}\n          />\n        )}\n      </>\n    );\n\n    // TODO: spacing under label when labelEdge === 'top' and hasTopUA.\n    return (\n      <div role={role} ref={groupRef} {...groupProps} {...focusRingProps}>\n        {labelEdge === 'none' && content}\n        {labelEdge !== 'none' && (\n          <LabelValueLayout\n            parentComponentVariant={parentComponentVariant}\n            hasTopUserAssistance={hasTopUserAssistance}\n            label={\n              <Label\n                {...labelProps}\n                variant={labelEdge}\n                userAssistanceDensity=\"efficient\"\n                parentComponentVariant={parentComponentVariant}>\n                {label}\n              </Label>\n            }\n            labelEdge={labelEdge === 'inside' ? 'top' : labelEdge}\n            labelStartWidth={labelStartWidth}>\n            <CheckboxRadioContext.Provider value={{ isFocusRingShown }}>\n              {content}\n            </CheckboxRadioContext.Provider>\n          </LabelValueLayout>\n        )}\n      </div>\n    );\n  }\n);\n"],"names":["_jsxs","_Fragment","_jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMG;AA+CG,SAAU,qBAAqB,CAAC,EACpC,eAAe,EACf,MAAM,EACN,QAAQ,EACR,oBAAoB,EACpB,uBAAuB,EACvB,UAAU,EACV,UAAU,GAAG,KAAK,EAClB,KAAK,EACL,SAAS,EACT,QAAQ,EACmB,EAAA;AAC3B,IAAA,MAAM,cAAc,GAAG,CAAG,EAAA,MAAM,QAAQ,CAAC;AACzC,IAAA,MAAM,OAAO,GAAG,CAAG,EAAA,MAAM,QAAQ,CAAC;AAClC,IAAA,MAAM,OAAO,GAAG,oBAAoB,GAAG,CAAG,EAAA,MAAM,CAAS,OAAA,CAAA,GAAG,SAAS,CAAC;AACtE,IAAA,MAAM,UAAU,GAAG,uBAAuB,GAAG,CAAG,EAAA,MAAM,CAAY,UAAA,CAAA,GAAG,SAAS,CAAC;AAE/E,IAAA,MAAM,EAAE,qBAAqB,EAAE,GAAG,oBAAoB,EAAE,CAAC;AACzD,IAAA,MAAM,cAAc,GAAG,KAAK,KAAK,EAAE,IAAI,SAAS,KAAK,MAAM,GAAG,qBAAqB,GAAG,OAAO,CAAC;AAE9F,IAAA,MAAM,sBAAsB,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC5D,IAAA,MAAM,eAAe,GAAG,sBAAsB,KAAK,OAAO,CAAC;IAE3D,OAAO;AACL,QAAA,UAAU,EAAE;YACV,kBAAkB,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;AACjE,YAAA,iBAAiB,EAAE,cAAc;AACjC,YAAA,eAAe,EAAE,UAAU;YAC3B,IAAI,UAAU,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YACrC,IAAI,eAAe,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;AAChD,YAAA,EAAE,EAAE,cAAc;;AAEnB,SAAA;AACD,QAAA,UAAU,EAAE;AACV,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,EAAE,EAAE,OAAO;AACZ,SAAA;;QAED,IAAI,oBAAoB,IAAI;AAC1B,YAAA,sBAAsB,EAAE;AACtB,gBAAA,EAAE,EAAE,OAAiB;;AAErB,gBAAA,OAAO,EAAE,QAAQ;AAClB,aAAA;SACF,CAAC;;QAEF,IAAI,uBAAuB,IAAI;AAC7B,YAAA,yBAAyB,EAAE;AACzB,gBAAA,EAAE,EAAE,UAAoB;AACxB,gBAAA,eAAe,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,QAAQ;AAC3C,aAAA;SACF,CAAC;KACH,CAAC;AACJ;;;;ACUa,MAAA,kBAAkB,GAAG,UAAU,CAC1C,CACE,EACE,kBAAkB,EAAE,eAAe,EACnC,aAAa,EACb,MAAM,EACN,SAAS,GAAG,QAAQ,EACpB,QAAQ,EACR,cAAc,EACd,cAAc,EACd,UAAU,EACV,UAAU,EACV,UAAU,EACV,KAAK,EACL,SAAS,EACT,eAAe,GAAG,KAAK,EACvB,sBAAsB,EACtB,QAAQ,EACR,qBAAqB,EACrB,IAAI,EACJ,QAAQ,EACF,EACR,GAAA,GAA4B,IAAI,KAC9B;AACF,IAAA,MAAM,oBAAoB,GAAG,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,cAAc,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC;AACvF,IAAA,MAAM,uBAAuB,GAAG,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC;AAC3D,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IAE9C,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,sBAAsB,EAAE,yBAAyB,EAAE,GACjF,qBAAqB,CAAC;QACpB,eAAe;QACf,MAAM;QACN,UAAU;QACV,UAAU;QACV,KAAK;QACL,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,oBAAoB;QACpB,uBAAuB;AACxB,KAAA,CAAC,CAAC;AAEL,IAAA,mBAAmB,CAAC,GAAG,EAAE,OAAO;QAC9B,KAAK,EAAE,MAAK;YACV,IAAI,CAAC,UAAU,EAAE;AACf,gBAAA,MAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAmB,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC1F,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,CAAC;AAE/E,gBAAA,IAAI,aAAa,EAAE;oBACjB,aAAa,CAAC,KAAK,EAAE,CAAC;AACvB,iBAAA;AAAM,qBAAA;AACL,oBAAA,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AAC1B,iBAAA;AACF,aAAA;SACF;QACD,IAAI,EAAE,MAAK;YACT,IAAI,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACrD,gBAAA,QAAQ,CAAC,aAA6B,CAAC,IAAI,EAAE,CAAC;AAChD,aAAA;SACF;AACF,KAAA,CAAC,CAAC,CAAC;IAEJ,MAAM,CAAC,gBAAgB,EAAE,cAAc,CAAC,GAAG,sBAAsB,CAC/D,CAAC,IAAoB,KAAI;QACvB,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC3C,EACD,CAAC,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC,CACpD,CAAC;IAEF,MAAM,OAAO,IACXA,IACG,CAAAC,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,oBAAoB,KACnBC,GACE,CAAA,KAAA,EAAA,EAAA,EAAE,EAAE,CAAA,EAAG,MAAM,CAAA,iBAAA,CAAmB,EAChC,KAAK,EAAE,SAAS,KAAK,OAAO,GAAG,oBAAoB,CAAC,KAAK,GAAG,oBAAoB,CAAC,GAAG,EACpF,QAAA,EAAAA,GAAA,CAAC,6BAA6B,EAAA,EAAA,GAAK,sBAAsB,EAAA,QAAA,EACvDA,GAAC,CAAA,UAAU,EACT,EAAA,aAAa,EAAE,aAAa,EAC5B,UAAU,EAAE,cAAc,EAC1B,UAAU,EAAE,cAAc,EAC1B,CAAA,EAAA,CAC4B,EAC5B,CAAA,CACP,EACDA,GAAA,CAAC,IAAI,EAAA,EAAC,SAAS,EAAE,SAAS,EAAA,IAAO,SAAS,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAa,EAAE,CAAC,EACpF,QAAA,EAAA,QAAQ,EACJ,CAAA,EACN,uBAAuB,IAAI,CAAC,UAAU,KACrCA,GAAC,CAAA,oBAAoB,EACf,EAAA,GAAA,yBAAyB,EAC7B,iBAAiB,EAAC,OAAO,EACzB,QAAQ,EAAE,QAAQ,EAClB,qBAAqB,EACnB,qBAAqB,KAAK,QAAQ,GAAG,qBAAqB,GAAG,WAAW,EAE1E,EAAE,EAAE,CAAA,EAAG,MAAM,CAAA,oBAAA,CAAsB,EACnC,CAAA,CACH,CACA,EAAA,CAAA,CACJ,CAAC;;IAGF,QACEF,cAAK,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAA,GAAM,UAAU,EAAM,GAAA,cAAc,aAC/D,SAAS,KAAK,MAAM,IAAI,OAAO,EAC/B,SAAS,KAAK,MAAM,KACnBE,IAAC,gBAAgB,EAAA,EACf,sBAAsB,EAAE,sBAAsB,EAC9C,oBAAoB,EAAE,oBAAoB,EAC1C,KAAK,EACHA,GAAC,CAAA,KAAK,OACA,UAAU,EACd,OAAO,EAAE,SAAS,EAClB,qBAAqB,EAAC,WAAW,EACjC,sBAAsB,EAAE,sBAAsB,EAAA,QAAA,EAC7C,KAAK,EACA,CAAA,EAEV,SAAS,EAAE,SAAS,KAAK,QAAQ,GAAG,KAAK,GAAG,SAAS,EACrD,eAAe,EAAE,eAAe,EAAA,QAAA,EAChCA,IAAC,oBAAoB,CAAC,QAAQ,EAAC,EAAA,KAAK,EAAE,EAAE,gBAAgB,EAAE,EACvD,QAAA,EAAA,OAAO,GACsB,EACf,CAAA,CACpB,CACG,EAAA,CAAA,EACN;AACJ,CAAC;;;;"}