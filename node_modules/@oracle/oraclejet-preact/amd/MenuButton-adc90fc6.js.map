{"version":3,"file":"MenuButton-adc90fc6.js","sources":["../../src/UNSAFE_MenuButton/MenuButton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ButtonLayout } from '../UNSAFE_ButtonLayout';\nimport { ChevronDownIcon } from '../PRIVATE_ThemedIcons/ChevronDownIcon';\nimport { Menu } from '../UNSAFE_Menu';\nimport { useMenuAction, MenuToggleDetail } from '../hooks/UNSAFE_useMenuAction';\nimport { BaseButton } from '../UNSAFE_BaseButton';\n\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport type { DimensionProps } from '../utils/UNSAFE_interpolations/dimensions';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\n\nimport { ComponentChildren, ComponentChild, Fragment } from 'preact';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { useRef, useImperativeHandle } from 'preact/hooks';\n\ntype IntrinsicProps = Pick<\n  HTMLAttributesSignalExcluded<HTMLElement>,\n  | 'autofocus'\n  | 'onBlur'\n  | 'onFocus'\n  | 'onMouseEnter'\n  | 'onMouseLeave'\n  | 'onTouchEnd'\n  | 'onTouchStart'\n>;\n\ntype WidthInterpolationProps = Pick<DimensionProps, 'width'>;\n\nexport type Props = IntrinsicProps &\n  WidthInterpolationProps & {\n    /**\n     * children - One or more MenuItems, dividers, or Menu groups\n     */\n    children?: ComponentChildren;\n\n    /**\n     * The icon shown to the left of the label (or to the right of the\n     * label in right to left mode). Note that this is not the menu\n     * expand icon shown to the right of the label (or to the left of\n     * the label in right to left mode).\n     */\n    icon?: ComponentChild;\n\n    /**\n     * Specifies that the button element should be disabled.\n     */\n    isDisabled?: boolean;\n\n    /**\n     * The button label\n     */\n    label?: string;\n\n    /**\n     * Specifies if the menu is open\n     */\n    isMenuOpen?: boolean;\n\n    /**\n     * Property that triggers a callback immediately when toggle happens and value of expanded property should be updated\n     */\n    onToggleMenu?: (details: MenuToggleDetail) => void;\n\n    /**\n     * A suffix to the label that can be rendered differently.  Used to identify\n     * which child MenuItem is invoked.\n     */\n    suffix?: string;\n\n    /**\n     * Indicates in what states the button has chrome (background and border).\n     *     \"borderless\"': \"Borderless buttons are a more prominent variation. Borderless\n     * buttons are useful for supplemental actions that require minimal emphasis.\",\n     *     \"outlined\"': \"Outlined buttons are salient, but lighter weight than\n     * solid buttons. Outlined buttons are useful for secondary actions.\",\n     *     \"solid\"': \"Solid buttons stand out, and direct the user's attention to the\n     *  most important actions in the UI.\"\n     */\n    variant?: 'borderless' | 'outlined' | 'solid';\n\n    /**\n     * The size indicates how large the button is rendered: \"sm\", \"md\" (default), \"lg\".\n     */\n    size?: 'sm' | 'md' | 'lg';\n\n    /**\n     * The ID of an element (or space separated IDs of multiple elements) that\n     * describes the button.\n     */\n    'aria-describedby'?: string;\n  };\n\n/**\n * A MenuButton is a combined action and menu button.\n */\nexport const MenuButton = forwardRef(\n  (\n    {\n      children,\n      label,\n      suffix,\n      variant = 'outlined',\n      isDisabled = false,\n      isMenuOpen = false,\n      onToggleMenu,\n      size = 'md',\n      width,\n      icon,\n      'aria-describedby': ariaDescribedBy,\n      onBlur,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      onTouchEnd,\n      onTouchStart\n    }: Props,\n    ref?: ForwardedRef<HTMLButtonElement>\n  ) => {\n    const buttonRef = useRef<HTMLButtonElement>(null);\n    useImperativeHandle(ref!, () => buttonRef.current!, [buttonRef]);\n\n    const { triggerProps, menuProps } = useMenuAction({\n      isDisabled: isDisabled,\n      onToggleMenu: onToggleMenu,\n      isMenuOpen: isMenuOpen,\n      anchorRef: buttonRef\n    });\n\n    const globalEventProps = {\n      onBlur,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      onTouchEnd,\n      onTouchStart\n    };\n\n    const rootButton = (\n      <BaseButton\n        {...mergeProps(triggerProps, globalEventProps)}\n        styling={isMenuOpen ? ['min', 'active'] : ['min']}\n        isDisabled={isDisabled}\n        variant={variant}\n        width={width}\n        size={size}\n        ref={buttonRef}\n        aria-label={`${label} ${suffix}`}\n        aria-describedby={ariaDescribedBy}>\n        <ButtonLayout\n          display={'all'}\n          suffix={suffix}\n          startIcon={icon}\n          endIcon={<ChevronDownIcon />}\n          size={size}>\n          {label}\n        </ButtonLayout>\n      </BaseButton>\n    );\n\n    return isDisabled ? (\n      rootButton\n    ) : (\n      <Fragment>\n        {rootButton}\n        <Menu {...menuProps}>{children}</Menu>\n      </Fragment>\n    );\n  }\n);\n"],"names":["MenuButton","forwardRef","children","label","suffix","variant","isDisabled","isMenuOpen","onToggleMenu","size","width","icon","ariaDescribedBy","onBlur","onFocus","onMouseEnter","onMouseLeave","onTouchEnd","onTouchStart","ref","buttonRef","useRef","useImperativeHandle","current","triggerProps","menuProps","useMenuAction","anchorRef","globalEventProps","rootButton","_jsx","BaseButton","mergeProps","styling","ButtonLayout","display","startIcon","endIcon","ChevronDownIcon","_jsxs","jsxs","Fragment","Menu"],"mappings":"8XAqGa,MAAAA,EAAaC,EAAAA,YACxB,EAEIC,WACAC,QACAC,SACAC,UAAU,WACVC,cAAa,EACbC,cAAa,EACbC,eACAC,OAAO,KACPC,QACAC,OACA,mBAAoBC,EACpBC,SACAC,UACAC,eACAC,eACAC,aACAC,gBAEFC,KAEA,MAAMC,EAAYC,SAA0B,MAC5CC,EAAmBA,oBAACH,GAAM,IAAMC,EAAUG,SAAU,CAACH,IAErD,MAAMI,aAAEA,EAAYC,UAAEA,GAAcC,gBAAc,CAChDpB,WAAYA,EACZE,aAAcA,EACdD,WAAYA,EACZoB,UAAWP,IAGPQ,EAAmB,CACvBf,SACAC,UACAC,eACAC,eACAC,aACAC,gBAGIW,EACJC,EAAAA,IAACC,EAAUA,WAAA,IACLC,EAAUA,WAACR,EAAcI,GAC7BK,QAAS1B,EAAa,CAAC,MAAO,UAAY,CAAC,OAC3CD,WAAYA,EACZD,QAASA,EACTK,MAAOA,EACPD,KAAMA,EACNU,IAAKC,EACO,aAAA,GAAGjB,KAASC,IACN,mBAAAQ,WAClBkB,EAAAA,IAACI,EAAAA,cACCC,QAAS,MACT/B,OAAQA,EACRgC,UAAWzB,EACX0B,QAASP,MAACQ,EAAAA,mBACV7B,KAAMA,EAAIP,SACTC,MAKP,OAAOG,EACL,EAEAiC,EAAAC,KAACC,EAAQA,SACN,CAAAvC,SAAA,CAAA2B,EACDC,EAAAA,IAACY,EAAAA,KAAI,IAAKjB,EAASvB,SAAGA,MAEzB"}