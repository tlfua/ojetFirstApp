{"version":3,"file":"PRIVATE_useResizeObserver.js","sources":["../../../src/hooks/PRIVATE_useResizeObserver/useResizeObserver.ts"],"sourcesContent":["import { RefObject } from 'preact';\nimport { useLayoutEffect } from 'preact/hooks';\n\n// Use a shared ResizeObserver to observe all components using this hook.\n// This is much more performant than using one ResizeObserver per element:\n// https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n\ntype UseResizeObserverCallback = (entry: ResizeObserverEntry) => void;\n\nclass SharedResizeObserver {\n  private readonly targetCallbacks: Map<Element, UseResizeObserverCallback>;\n  private readonly resizeObserver: ResizeObserver;\n\n  constructor() {\n    this.targetCallbacks = new Map();\n    this.resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        const cb = this.targetCallbacks.get(entry.target);\n        if (cb) cb(entry);\n      }\n    });\n  }\n\n  subscribe(target: Element, callback: UseResizeObserverCallback, options?: ResizeObserverOptions) {\n    this.targetCallbacks.set(target, callback);\n    this.resizeObserver.observe(target, options);\n  }\n\n  unsubscribe(target: Element) {\n    this.resizeObserver.unobserve(target);\n    this.targetCallbacks.delete(target);\n  }\n}\n\nconst sharedResizeObserver = new SharedResizeObserver();\n\nconst useResizeObserver = (\n  ref: RefObject<Element>,\n  callback: UseResizeObserverCallback,\n  resizeObserverOptions?: ResizeObserverOptions\n) => {\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n\n    const target = ref.current;\n    sharedResizeObserver.subscribe(target, callback, resizeObserverOptions);\n\n    return () => sharedResizeObserver.unsubscribe(target);\n  }, [ref]);\n};\n\nexport { useResizeObserver };\n"],"names":["sharedResizeObserver","constructor","this","targetCallbacks","Map","resizeObserver","ResizeObserver","entries","entry","cb","get","target","subscribe","callback","options","set","observe","unsubscribe","unobserve","delete","ref","resizeObserverOptions","useLayoutEffect","current"],"mappings":"8DAkCA,MAAMA,EAAuB,IAzB7B,MAIE,WAAAC,GACEC,KAAKC,gBAAkB,IAAIC,IAC3BF,KAAKG,eAAiB,IAAIC,gBAAgBC,IACxC,IAAK,MAAMC,KAASD,EAAS,CAC3B,MAAME,EAAKP,KAAKC,gBAAgBO,IAAIF,EAAMG,QACtCF,GAAIA,EAAGD,EACZ,IAEJ,CAED,SAAAI,CAAUD,EAAiBE,EAAqCC,GAC9DZ,KAAKC,gBAAgBY,IAAIJ,EAAQE,GACjCX,KAAKG,eAAeW,QAAQL,EAAQG,EACrC,CAED,WAAAG,CAAYN,GACVT,KAAKG,eAAea,UAAUP,GAC9BT,KAAKC,gBAAgBgB,OAAOR,EAC7B,uBAKuB,CACxBS,EACAP,EACAQ,KAEAC,EAAAA,iBAAgB,KACd,IAAKF,EAAIG,QAAS,OAElB,MAAMZ,EAASS,EAAIG,QAGnB,OAFAvB,EAAqBY,UAAUD,EAAQE,EAAUQ,GAE1C,IAAMrB,EAAqBiB,YAAYN,EAAO,GACpD,CAACS,GAAK"}