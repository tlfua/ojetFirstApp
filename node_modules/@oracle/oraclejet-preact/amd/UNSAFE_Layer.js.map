{"version":3,"file":"UNSAFE_Layer.js","sources":["../../src/UNSAFE_Layer/Layer.tsx"],"sourcesContent":["import { VNode, RefObject } from 'preact';\nimport { createPortal, useContext, useLayoutEffect, useMemo, useState } from 'preact/compat';\nimport { LayerContext } from './LayerContext';\nimport { useThemeInterpolations } from '../hooks/UNSAFE_useThemeInterpolations/useThemeInterpolations';\n\nconst _LOGICAL_PARENT = '__oj_logical_parent';\n\ntype Props = {\n  /**\n   * The content to be re-parented using Portal\n   */\n  children: VNode;\n  /**\n   * Logical parent of the re-parented content. Typically the 'launcher' associated\n   * with the popup.\n   */\n  logicalParentRef?: RefObject<Element> | null;\n};\n\ntype LayerElement = HTMLDivElement & {\n  __oj_logical_parent?: Element | null;\n};\n\nconst Layer = (props: Props) => {\n  const context = useContext(LayerContext);\n  const defaultHost = context.getHost?.();\n  const host = useMemo(() => defaultHost, [defaultHost]);\n  const [layerContainer, setLayerContainer] = useState<Element | null>(null);\n\n  // because the children are being rendered into a portal that is out of the flow of parent dom,\n  // we need to specify the colorScheme and scale class names here to pick up the correct CSS styles.\n  const classes = useThemeInterpolations();\n\n  // Really need useLayoutEffect instead of useEffect here. Otherwise the re-parented\n  // content does not get re-rendered with valid ref's\n  useLayoutEffect(() => {\n    if (!host) return;\n    const doc = host.ownerDocument ?? document;\n    const layer: LayerElement = doc.createElement('div');\n\n    if (props.logicalParentRef) {\n      layer[_LOGICAL_PARENT] = props.logicalParentRef.current;\n    }\n\n    host.appendChild(layer);\n    setLayerContainer(layer);\n\n    return () => {\n      if (host && layer && host.contains(layer)) {\n        delete layer[_LOGICAL_PARENT];\n        host.removeChild(layer);\n      }\n      setLayerContainer(null);\n    };\n  }, [host]);\n\n  // add the colorScheme and scale classes if there is a layerContainer\n  if (layerContainer) {\n    // use the theme interpolations to set the appropriate style classes for colorScheme and scale\n    layerContainer.className = classes;\n  }\n\n  return layerContainer && createPortal(props.children, layerContainer);\n};\n\nexport default Layer;\n"],"names":["_LOGICAL_PARENT","props","context","useContext","LayerContext","defaultHost","getHost","host","useMemo","layerContainer","setLayerContainer","useState","classes","useThemeInterpolations","useLayoutEffect","layer","ownerDocument","document","createElement","logicalParentRef","current","appendChild","contains","removeChild","className","createPortal","children"],"mappings":"4lBAKA,MAAMA,EAAkB,0FAkBTC,IACb,MAAMC,EAAUC,aAAWC,EAAAA,cACrBC,EAAcH,EAAQI,YACtBC,EAAOC,EAAAA,SAAQ,IAAMH,GAAa,CAACA,KAClCI,EAAgBC,GAAqBC,EAAQA,SAAiB,MAI/DC,EAAUC,EAAAA,yBA+BhB,OA3BAC,EAAAA,iBAAgB,KACd,IAAKP,EAAM,OACX,MACMQ,GADMR,EAAKS,eAAiBC,UACFC,cAAc,OAS9C,OAPIjB,EAAMkB,mBACRJ,EAAMf,GAAmBC,EAAMkB,iBAAiBC,SAGlDb,EAAKc,YAAYN,GACjBL,EAAkBK,GAEX,KACDR,GAAQQ,GAASR,EAAKe,SAASP,YAC1BA,EAAMf,GACbO,EAAKgB,YAAYR,IAEnBL,EAAkB,KAAK,CACxB,GACA,CAACH,IAGAE,IAEFA,EAAee,UAAYZ,GAGtBH,GAAkBgB,EAAYA,aAACxB,EAAMyB,SAAUjB,EAAe"}