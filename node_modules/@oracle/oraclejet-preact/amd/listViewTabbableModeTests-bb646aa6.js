define(['exports', 'preact/jsx-runtime', '@testing-library/preact', 'chai', './testHelpers-030461f3', './listViewTestFixtures-6732d122', '@testing-library/user-event'], (function(e,t,a,i,n,d,c){"use strict";function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=u(c);e.testTabbableMode=e=>{it("acts as single tab stop in composition",(async()=>{const c=d.populateData(100,!0).map((e=>({data:e,metadata:{key:e.id}}))),u=a.render(t.jsx(e,{data:c})),r=await n.getRoot(u);await s.default.tab(),i.expect(document.activeElement).equals(u.getByText("Preceding Button")),await s.default.tab(),i.expect(document.activeElement).equals(r),await s.default.tab(),i.expect(document.activeElement).equals(u.getByText("Following Button")),await s.default.tab({shift:!0}),i.expect(document.activeElement).equals(r),await s.default.tab({shift:!0}),i.expect(document.activeElement).equals(u.getByText("Preceding Button"))})),it("enters interactive mode with keyboard via F2",(async()=>{const c=d.populateData(100,!0).map((e=>({data:e,metadata:{key:e.id}}))),u=a.render(t.jsx(e,{data:c})),r=await n.getRoot(u);await s.default.tab(),await s.default.tab(),i.expect(document.activeElement).equals(r),u.rerender(t.jsx(e,{data:c}));const l=u.getByTestId("input-0");i.expect(l.getAttribute("tabindex")).equals("-1"),a.fireEvent.keyDown(r,{key:"F2"}),i.expect(l.getAttribute("tabindex")).equals("0")})),it("leaves interactive mode with keyboard via ESC",(async()=>{const c=d.populateData(100,!0).map((e=>({data:e,metadata:{key:e.id}}))),u=a.render(t.jsx(e,{data:c})),r=await n.getRoot(u),l=u.getByTestId("input-0");i.expect(l.getAttribute("tabindex")).equals("-1"),await s.default.click(l),i.expect(l.getAttribute("tabindex")).equals("0"),a.fireEvent.keyDown(l,{key:"Escape"}),await a.waitFor((()=>{i.expect(document.activeElement,"active element should be grid").equals(r)}))})),it("enters interactive mode again with keyboard via arrow keys and F2",(async()=>{const c=d.populateData(100,!0).map((e=>({data:e,metadata:{key:e.id}}))),u=a.render(t.jsx(e,{data:c})),r=await n.getRoot(u),l=await n.getContents(u);await s.default.click(l[0]),a.fireEvent.keyDown(r,{key:"ArrowDown"});const o=u.getByTestId("input-1");i.expect(o.getAttribute("tabindex")).equals("-1"),a.fireEvent.keyDown(r,{key:"F2"}),i.expect(o.getAttribute("tabindex")).equals("0")})),it("enters interactive mode with click on input",(async()=>{const n=d.populateData(100,!0).map((e=>({data:e,metadata:{key:e.id}}))),c=a.render(t.jsx(e,{data:n})),u=c.getByTestId("input-0");i.expect(u.getAttribute("tabindex")).equals("-1"),await s.default.click(u),c.rerender(t.jsx(e,{data:n})),i.expect(u.getAttribute("tabindex")).equals("0"),i.expect(document.activeElement).equals(u),await s.default.tab(),i.expect(document.activeElement).equals(c.getByTestId("button-0"))})),xit("leaves interactive mode with click outside",(async()=>{const n=d.populateData(100,!0).map((e=>({data:e,metadata:{key:e.id}}))),c=a.render(t.jsx(e,{data:n})),u=c.getByTestId("input-0");i.expect(u.getAttribute("tabindex")).equals("-1"),await s.default.click(u),c.rerender(t.jsx(e,{data:n})),i.expect(u.getAttribute("tabindex")).equals("0"),i.expect(document.activeElement).equals(u);const r=c.getByText("Preceding Button");await s.default.click(r),i.expect(document.activeElement).equals(r),c.rerender(t.jsx(e,{data:n})),i.expect(u.getAttribute("tabindex")).equals("-1")}))}}));
//# sourceMappingURL=listViewTabbableModeTests-bb646aa6.js.map
