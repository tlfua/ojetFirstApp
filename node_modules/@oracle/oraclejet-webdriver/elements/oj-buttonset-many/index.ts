import { By } from 'selenium-webdriver';
import { DriverLike, register } from '../../';
import { OjButtonsetMany } from './OjButtonsetMany';
export { OjButtonsetMany };

/**
 * Retrieve an instance of [[OjButtonsetMany]].
 * @example
 * ```javascript
 * import { ojButtonsetMany } from '@oracle/oraclejet-webdriver/elements';
 * const el = await ojButtonsetMany(driver, By.id('my-oj-buttonset-many'));
 * ```
 * @param driver A WebDriver/WebElement instance from where the element will be
 * searched. If WebDriver is passed, the element will be searched globally in the
 * document. If WebElement is passed, the search will be relative to this element.
 * @param by The locator with which to find the element
 */
export async function ojButtonsetMany(driver: DriverLike, by: By): Promise<OjButtonsetMany> {
  const webEl = await driver.findElement(by);
  // Check that the element is of type OjButtonsetMany
  if (!(webEl instanceof OjButtonsetMany)) {
    const tagName = await webEl.getTagName();
    let supplemental = '';
    if (tagName === OjButtonsetMany.name) {
      supplemental = 'You likely have multiple installations of this package.';
    }
    throw Error(
      `ojButtonsetMany(${by}) created ${webEl.constructor.name} for <${tagName}>, but expected ${OjButtonsetMany.name}. ${supplemental}`
    );
  }
  return webEl;
}

register('oj-buttonset-many', OjButtonsetMany);
