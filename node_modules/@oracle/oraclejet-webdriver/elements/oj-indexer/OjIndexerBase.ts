import { OjWebElement } from '../';

/**
 * This is the base class for oj-indexer WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjIndexer.ts.
 */
export class OjIndexerBase extends OjWebElement {
  /**
   * Gets the value of <code>data</code> property.
   * The data provider for the Indexer.
   * @return The value of <code>data</code> property.
   * @deprecated Since 14.0.0. Data sets from a DataProvider cannot be sent to WebDriverJS; use ViewModels or page variables instead.
   */
  public getData(): Promise<object> {
    return this.getProperty<object>('data');
  }

  /**
   * Gets the value of <code>translations</code> property.
   * A collection of translated resources from the translation bundle, or null if this component has no resources.
   * @return The value of <code>translations</code> property.
   *
   */
  public getTranslations(): Promise<Translations | null> {
    return this.getProperty<Translations | null>('translations');
  }
}
export interface Translations {
  /**
   * Provides properties to customize the text to read to the screen reader when there is no matching group header.
   */
  ariaDisabledLabel: string;
  /**
   * Provides properties to customize the text that represents between two characters in the Indexer.
   */
  ariaInBetweenText: string;
  /**
   * Provides properties to customize the screen reader keyboard instructional text for the Indexer.
   */
  ariaKeyboardInstructionText: string;
  /**
   * Provides properties to customize the text to read to the screen reader when the non-letter characters is selected.
   */
  ariaOthersLabel: string;
  /**
   * Provides properties to customize the screen reader touch instructional text for the Indexer.
   */
  ariaTouchInstructionText: string;
  /**
   * Provides properties to customize the characters to display in the Indexer.
   */
  indexerCharacters: string;
  /**
   * Provides properties to customize the non-letter characters to display in the Indexer.
   */
  indexerOthers: string;
}
