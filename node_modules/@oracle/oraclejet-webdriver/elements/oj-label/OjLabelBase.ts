import { OjWebElement } from '../';

/**
 * This is the base class for oj-label WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjLabel.ts.
 */
export class OjLabelBase extends OjWebElement {
  /**
   * Gets the value of <code>for</code> property.
   * Specifies the form element associated with this label. See the Help documentation for more information.
   * @return The value of <code>for</code> property.
   *
   */
  public getFor(): Promise<string | null> {
    return this.getProperty<string | null>('for');
  }

  /**
   * Gets the value of <code>help</code> property.
   * Help information associated with this label.
   * @return The value of <code>help</code> property.
   *
   */
  public getHelp(): Promise<Help | null> {
    return this.getProperty<Help | null>('help');
  }

  /**
   * Gets the value of <code>labelId</code> property.
   * Specifies the id to set on the internal label element, if required. See the Help documentation for more information.
   * @return The value of <code>labelId</code> property.
   *
   */
  public getLabelId(): Promise<string | null> {
    return this.getProperty<string | null>('labelId');
  }

  /**
   * Gets the value of <code>showRequired</code> property.
   * Specifies whether the label should render an icon indicating that the associated form field requires a value. See the Help documentation for more information.
   * @return The value of <code>showRequired</code> property.
   *
   */
  public getShowRequired(): Promise<boolean> {
    return this.getProperty<boolean>('showRequired');
  }

  /**
   * Gets the value of <code>translations</code> property.
   * A collection of translated resources from the translation bundle, or null if this component has no resources.
   * @return The value of <code>translations</code> property.
   *
   */
  public getTranslations(): Promise<Translations | null> {
    return this.getProperty<Translations | null>('translations');
  }
}
export interface Help {
  /**
   * help definition text
   */
  definition: string | null;
  /**
   * help source url
   */
  source: string | null;
}
export interface Translations {
  /**
   * Used for the default help icon tooltip.. Most likely the application developer would use the oj-label's help.definition property to specify the help definition text per oj-label element.
   */
  tooltipHelp: string;
  /**
   * Used for the default required icon tooltip.
   */
  tooltipRequired: string;
}
