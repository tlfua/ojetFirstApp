import { OjWebElement } from '../';

/**
 * This is the base class for oj-selector WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjSelector.ts.
 */
export class OjSelectorBase extends OjWebElement {
  /**
   * Gets the value of <code>rowKey</code> property.
   * Specifies the row key of each selector. If the selectionMode property is 'all', rowKey is ignored.
   * @return The value of <code>rowKey</code> property.
   *
   */
  public getRowKey(): Promise<any> {
    return this.getProperty<any>('rowKey');
  }

  /**
   * Sets the value of <code>indeterminate</code> property.
   * Visual only state to indicate partial selection
   * @param indeterminate The value to set for <code>indeterminate</code>
   *
   */
  public changeIndeterminate(indeterminate: boolean): Promise<void> {
    return this.setProperty<boolean>('indeterminate', indeterminate);
  }

  /**
   * Gets the value of <code>indeterminate</code> property.
   * Visual only state to indicate partial selection
   * @return The value of <code>indeterminate</code> property.
   *
   */
  public getIndeterminate(): Promise<boolean> {
    return this.getProperty<boolean>('indeterminate');
  }

  /**
   * Sets the value of <code>selectedKeys</code> property.
   * Specifies the selectedKeys, should be hooked into the collection component.
   * @param selectedKeys The value to set for <code>selectedKeys</code>
   *
   */
  public changeSelectedKeys(selectedKeys: object): Promise<void> {
    return this.setProperty<object>('selectedKeys', selectedKeys);
  }

  /**
   * Gets the value of <code>selectedKeys</code> property.
   * Specifies the selectedKeys, should be hooked into the collection component.
   * @return The value of <code>selectedKeys</code> property.
   *
   */
  public getSelectedKeys(): Promise<object> {
    return this.getProperty<object>('selectedKeys');
  }

  /**
   * Gets the value of <code>selectionMode</code> property.
   * Specifies the selection mode.
   * @return The value of <code>selectionMode</code> property.
   *
   */
  public getSelectionMode(): Promise<string> {
    return this.getProperty<string>('selectionMode');
  }
}
