"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OjInputSearchBase = void 0;
const __1 = require("../");
/**
 * This is the base class for oj-input-search WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjInputSearch.ts.
 */
class OjInputSearchBase extends __1.OjWebElement {
    /**
     * Gets the value of <code>suggestionItemText</code> property.
     * Specifies the text string to render for a suggestion.
     * @return The value of <code>suggestionItemText</code> property.
     *
     */
    getSuggestionItemText() {
        return this.getProperty('suggestionItemText');
    }
    /**
     * Gets the value of <code>placeholder</code> property.
     * A short hint that can be displayed before user selects or enters a value.
     * @return The value of <code>placeholder</code> property.
     *
     */
    getPlaceholder() {
        return this.getProperty('placeholder');
    }
    /**
     * Gets the value of <code>rawValue</code> property.
     * Read-only property used for retrieving the current value from the input field in string form.
     * @return The value of <code>rawValue</code> property.
     *
     */
    getRawValue() {
        return this.getProperty('rawValue');
    }
    /**
     * Sets the value of <code>value</code> property.
     * The value of the element.
     * @param value The value to set for <code>value</code>
     *
     */
    changeValue(value) {
        return this.setProperty('value', value);
    }
    /**
     * Gets the value of <code>value</code> property.
     * The value of the element.
     * @return The value of <code>value</code> property.
     *
     */
    getValue() {
        return this.getProperty('value');
    }
}
exports.OjInputSearchBase = OjInputSearchBase;
//# sourceMappingURL=OjInputSearchBase.js.map