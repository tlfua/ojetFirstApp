"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OjDialogBase = void 0;
const __1 = require("../");
/**
 * This is the base class for oj-dialog WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjDialog.ts.
 */
class OjDialogBase extends __1.OjWebElement {
    /**
     * Gets the value of <code>cancelBehavior</code> property.
     * Specifies the cancel behavior of the dialog. See the Help documentation for more information.
     * @return The value of <code>cancelBehavior</code> property.
     *
     */
    getCancelBehavior() {
        return this.getProperty('cancelBehavior');
    }
    /**
     * Gets the value of <code>dialogTitle</code> property.
     * Specify the title of the dialog. null is the default.
     * @return The value of <code>dialogTitle</code> property.
     *
     */
    getDialogTitle() {
        return this.getProperty('dialogTitle');
    }
    /**
     * Gets the value of <code>dragAffordance</code> property.
     * Specifies the drag affordance. See the Help documentation for more information.
     * @return The value of <code>dragAffordance</code> property.
     *
     */
    getDragAffordance() {
        return this.getProperty('dragAffordance');
    }
    /**
     * Gets the value of <code>initialVisibility</code> property.
     * Set the initial visibility of the dialog.
     * @return The value of <code>initialVisibility</code> property.
     *
     */
    getInitialVisibility() {
        return this.getProperty('initialVisibility');
    }
    /**
     * Gets the value of <code>modality</code> property.
     * Defines the modality of the dialog.
     * @return The value of <code>modality</code> property.
     *
     */
    getModality() {
        return this.getProperty('modality');
    }
    /**
     * Gets the value of <code>position</code> property.
     * Establishes the location that the dialog will appear relative to another element. See the Help documentation for more information.
     * @return The value of <code>position</code> property.
     *
     */
    getPosition() {
        return this.getProperty('position');
    }
    /**
     * Gets the value of <code>resizeBehavior</code> property.
     * Specifies the resizeBehavior of the dialog. See the Help documentation for more information.
     * @return The value of <code>resizeBehavior</code> property.
     *
     */
    getResizeBehavior() {
        return this.getProperty('resizeBehavior');
    }
    /**
     * Gets the value of <code>translations</code> property.
     * A collection of translated resources from the translation bundle, or null if this component has no resources.
     * @return The value of <code>translations</code> property.
     *
     */
    getTranslations() {
        return this.getProperty('translations');
    }
}
exports.OjDialogBase = OjDialogBase;
//# sourceMappingURL=OjDialogBase.js.map