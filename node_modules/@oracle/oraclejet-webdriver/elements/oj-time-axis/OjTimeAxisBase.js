"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OjTimeAxisBase = void 0;
const __1 = require("../");
/**
 * This is the base class for oj-time-axis WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjTimeAxis.ts.
 */
class OjTimeAxisBase extends __1.OjWebElement {
    /**
     * Gets the value of <code>converter</code> property.
     * An object that converts the labels of the time axis for all 'scale' values'. See the Help documentation for more information.
     * @return The value of <code>converter</code> property.
     *
     */
    getConverter() {
        return this.getProperty('converter');
    }
    /**
     * Gets the value of <code>end</code> property.
     * The end time of the time axis. See the Help documentation for more information.
     * @return The value of <code>end</code> property.
     *
     */
    getEnd() {
        return this.getProperty('end');
    }
    /**
     * Gets the value of <code>scale</code> property.
     * The time scale used for the time axis.
     * @return The value of <code>scale</code> property.
     *
     */
    getScale() {
        return this.getProperty('scale');
    }
    /**
     * Gets the value of <code>start</code> property.
     * The start time of the time axis. See the Help documentation for more information.
     * @return The value of <code>start</code> property.
     *
     */
    getStart() {
        return this.getProperty('start');
    }
    /**
     * Gets the value of <code>trackResize</code> property.
     * Defines whether the element will automatically render in response to changes in size. See the Help documentation for more information.
     * @return The value of <code>trackResize</code> property.
     *
     */
    getTrackResize() {
        return this.getProperty('trackResize');
    }
    /**
     * Gets the value of <code>translations</code> property.
     * A collection of translated resources from the translation bundle, or null if this component has no resources.
     * @return The value of <code>translations</code> property.
     *
     */
    getTranslations() {
        return this.getProperty('translations');
    }
}
exports.OjTimeAxisBase = OjTimeAxisBase;
//# sourceMappingURL=OjTimeAxisBase.js.map