import { OjWebElement } from '../';

/**
 * This is the base class for oj-progress WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjProgress.ts.
 */
export class OjProgressBase extends OjWebElement {
  /**
   * Gets the value of <code>max</code> property.
   * The maximum allowed value.
   * @return The value of <code>max</code> property.
   *
   */
  public getMax(): Promise<number> {
    return this.getProperty<number>('max');
  }

  /**
   * Gets the value of <code>translations</code> property.
   * A collection of translated resources from the translation bundle, or null if this component has no resources.
   * @return The value of <code>translations</code> property.
   *
   */
  public getTranslations(): Promise<Translations | null> {
    return this.getProperty<Translations | null>('translations');
  }

  /**
   * Gets the value of <code>type</code> property.
   * The shape of the Progress.
   * @return The value of <code>type</code> property.
   *
   */
  public getType(): Promise<string> {
    return this.getProperty<string>('type');
  }

  /**
   * Sets the value of <code>value</code> property.
   * The value of the Progress.
   * @param value The value to set for <code>value</code>
   *
   */
  public changeValue(value: number): Promise<void> {
    return this.setProperty<number>('value', value);
  }

  /**
   * Gets the value of <code>value</code> property.
   * The value of the Progress.
   * @return The value of <code>value</code> property.
   *
   */
  public getValue(): Promise<number> {
    return this.getProperty<number>('value');
  }
}
export interface Translations {
  /**
   * Accessible text read by a screen reader while an indeterminate oj-progress is in progress.
   */
  ariaIndeterminateProgressText: string;
}
