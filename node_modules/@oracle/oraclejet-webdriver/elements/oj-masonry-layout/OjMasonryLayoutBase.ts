import { OjWebElement } from '../';

/**
 * This is the base class for oj-masonry-layout WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjMasonryLayout.ts.
 */
export class OjMasonryLayoutBase extends OjWebElement {
  /**
   * Gets the value of <code>reorderHandle</code> property.
   * Specifies the selector of the child DOM element that can be used to reorder the child.
   * @return The value of <code>reorderHandle</code> property.
   *
   */
  public getReorderHandle(): Promise<string> {
    return this.getProperty<string>('reorderHandle');
  }

  /**
   * Gets the value of <code>translations</code> property.
   * A collection of translated resources from the translation bundle, or null if this component has no resources.
   * @return The value of <code>translations</code> property.
   *
   */
  public getTranslations(): Promise<Translations | null> {
    return this.getProperty<Translations | null>('translations');
  }
}
export interface Translations {
  /**
   * Context menu text used for cutting a tile.
   */
  labelCut: string;
  /**
   * Context menu text used for pasting a tile after another tile.
   */
  labelPasteAfter: string;
  /**
   * Context menu text used for pasting a tile before another tile.
   */
  labelPasteBefore: string;
}
