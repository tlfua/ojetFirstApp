import { OjDateTimePickerBase } from './OjDateTimePickerBase';

/**
 * The component WebElement for [oj-date-time-picker](../../jsdocs/oj.ojDateTimePicker.html).
 * Do not instantiate this class directly, instead, use
 * [ojDateTimePicker](../modules/elements.html#ojDateTimePicker).
 */
export class OjDateTimePicker extends OjDateTimePickerBase {
  // async changeValue(value: string) {
  //   // Call focus() on the root element
  //   await this.getDriver().executeScript("arguments[0].focus()", this);
  //   // Only mutate if not readonly/disabled
  //   const readonly = await this.getReadonly();
  //   const disabled = await this.getDisabled();
  //   if (!(readonly || disabled)) {
  //     // Save previous value prior to validation.
  //     // Since we can't sendKeys to the component to have it run validation before
  //     // setting the value (picker doesn't have field which can receive key events),
  //     // we set the value, then call validate(). If validation fails, we reset
  //     // the value
  //     // TODO: validate() resets the value!
  //     const previousValue = await this.getValue();
  //     await this.setProperty<string>("value", value);
  //     return this.getDriver().executeAsyncScript<void>(
  //       `arguments[0].validate().then(arguments[1])`,
  //       this
  //     );
  //   }
  // }
}
