"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OjFilmStripBase = void 0;
const __1 = require("../");
/**
 * This is the base class for oj-film-strip WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjFilmStrip.ts.
 */
class OjFilmStripBase extends __1.OjWebElement {
    /**
     * Gets the value of <code>arrowPlacement</code> property.
     * Specifies the placement of the navigation arrows.
     * @return The value of <code>arrowPlacement</code> property.
     *
     */
    getArrowPlacement() {
        return this.getProperty('arrowPlacement');
    }
    /**
     * Gets the value of <code>arrowVisibility</code> property.
     * Specifies the visibility of the navigation arrows.
     * @return The value of <code>arrowVisibility</code> property.
     *
     */
    getArrowVisibility() {
        return this.getProperty('arrowVisibility');
    }
    /**
     * Sets the value of <code>currentItem</code> property.
     * Specifies the child item whose logical page should be displayed.
     * @param currentItem The value to set for <code>currentItem</code>
     *
     */
    changeCurrentItem(currentItem) {
        return this.setProperty('currentItem', currentItem);
    }
    /**
     * Gets the value of <code>currentItem</code> property.
     * Specifies the child item whose logical page should be displayed.
     * @return The value of <code>currentItem</code> property.
     *
     */
    getCurrentItem() {
        return this.getProperty('currentItem');
    }
    /**
     * Gets the value of <code>looping</code> property.
     * Specifies the navigation looping behavior
     * @return The value of <code>looping</code> property.
     *
     */
    getLooping() {
        return this.getProperty('looping');
    }
    /**
     * Gets the value of <code>maxItemsPerPage</code> property.
     * Specifies the maximum number of child items shown in a logical page.
     * @return The value of <code>maxItemsPerPage</code> property.
     *
     */
    getMaxItemsPerPage() {
        return this.getProperty('maxItemsPerPage');
    }
    /**
     * Gets the value of <code>orientation</code> property.
     * Specifies the orientation of the FilmStrip.
     * @return The value of <code>orientation</code> property.
     *
     */
    getOrientation() {
        return this.getProperty('orientation');
    }
    /**
     * Gets the value of <code>translations</code> property.
     * A collection of translated resources from the translation bundle, or null if this component has no resources.
     * @return The value of <code>translations</code> property.
     *
     */
    getTranslations() {
        return this.getProperty('translations');
    }
}
exports.OjFilmStripBase = OjFilmStripBase;
//# sourceMappingURL=OjFilmStripBase.js.map