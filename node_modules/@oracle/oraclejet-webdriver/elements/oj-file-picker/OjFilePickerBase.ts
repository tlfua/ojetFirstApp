import { OjWebElement } from '../';

/**
 * This is the base class for oj-file-picker WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjFilePicker.ts.
 */
export class OjFilePickerBase extends OjWebElement {
  /**
   * Gets the value of <code>accept</code> property.
   * An array of strings of allowed MIME types or file extensions that can be uploaded. If not specified, accept all file types
   * @return The value of <code>accept</code> property.
   *
   */
  public getAccept(): Promise<Array<string>> {
    return this.getProperty<Array<string>>('accept');
  }

  /**
   * Gets the value of <code>capture</code> property.
   * Specifies the preferred facing mode for the device's media capture mechanism.
   * @return The value of <code>capture</code> property.
   *
   */
  public getCapture(): Promise<string> {
    return this.getProperty<string>('capture');
  }

  /**
   * Gets the value of <code>disabled</code> property.
   * Disables the filepicker if set to true
   * @return The value of <code>disabled</code> property.
   *
   */
  public getDisabled(): Promise<boolean> {
    return this.getProperty<boolean>('disabled');
  }

  /**
   * Gets the value of <code>primaryText</code> property.
   * The primary text for the default file picker.
   * @return The value of <code>primaryText</code> property.
   *
   */
  public getPrimaryText(): Promise<string | null> {
    return this.getProperty<string | null>('primaryText');
  }

  /**
   * Gets the value of <code>secondaryText</code> property.
   * The secondary text for the default file picker.
   * @return The value of <code>secondaryText</code> property.
   *
   */
  public getSecondaryText(): Promise<string | null> {
    return this.getProperty<string | null>('secondaryText');
  }

  /**
   * Gets the value of <code>selectOn</code> property.
   * The type of event to select the files.
   * @return The value of <code>selectOn</code> property.
   * @deprecated Since 13.1.0. Main use case was to turn off drag and drop for button filepicker.  The current recommendation for that use case is to use ojfilepickerutils with an oj-button.
   */
  public getSelectOn(): Promise<string> {
    return this.getProperty<string>('selectOn');
  }

  /**
   * Gets the value of <code>selectionMode</code> property.
   * Whether to allow single or multiple file selection.
   * @return The value of <code>selectionMode</code> property.
   *
   */
  public getSelectionMode(): Promise<string> {
    return this.getProperty<string>('selectionMode');
  }
}
