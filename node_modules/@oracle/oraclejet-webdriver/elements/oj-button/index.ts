import { By } from 'selenium-webdriver';
import { DriverLike, register } from '../../';
import { OjButton } from './OjButton';
export { OjButton };

/**
 * Retrieve an instance of [[OjButton]].
 * @example
 * ```javascript
 * import { ojButton } from '@oracle/oraclejet-webdriver/elements';
 * const el = await ojButton(driver, By.id('my-oj-button'));
 * ```
 * @param driver A WebDriver/WebElement instance from where the element will be
 * searched. If WebDriver is passed, the element will be searched globally in the
 * document. If WebElement is passed, the search will be relative to this element.
 * @param by The locator with which to find the element
 */
export async function ojButton(driver: DriverLike, by: By): Promise<OjButton> {
  const webEl = await driver.findElement(by);
  // Check that the element is of type OjButton
  if (!(webEl instanceof OjButton)) {
    const tagName = await webEl.getTagName();
    let supplemental = '';
    if (tagName === OjButton.name) {
      supplemental = 'You likely have multiple installations of this package.';
    }
    throw Error(
      `ojButton(${by}) created ${webEl.constructor.name} for <${tagName}>, but expected ${OjButton.name}. ${supplemental}`
    );
  }
  return webEl;
}

register('oj-button', OjButton);
