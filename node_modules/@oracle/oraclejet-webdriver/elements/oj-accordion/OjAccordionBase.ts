import { OjWebElement } from '../';

/**
 * This is the base class for oj-accordion WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjAccordion.ts.
 */
export class OjAccordionBase extends OjWebElement {
  /**
   * Sets the value of <code>expanded</code> property.
   * A list of expanded child collapsible items.
   * @param expanded The value to set for <code>expanded</code>
   *
   */
  public changeExpanded(
    expanded: Array<string> | Array<number> | Array<object> | null
  ): Promise<void> {
    return this.setProperty<Array<string> | Array<number> | Array<object> | null>(
      'expanded',
      expanded
    );
  }

  /**
   * Gets the value of <code>expanded</code> property.
   * A list of expanded child collapsible items.
   * @return The value of <code>expanded</code> property.
   *
   */
  public getExpanded(): Promise<Array<string> | Array<number> | Array<object> | null> {
    return this.getProperty<Array<string> | Array<number> | Array<object> | null>('expanded');
  }

  /**
   * Gets the value of <code>multiple</code> property.
   * Specifies whether multiple collapsible items can be open at the same time.
   * @return The value of <code>multiple</code> property.
   *
   */
  public getMultiple(): Promise<boolean> {
    return this.getProperty<boolean>('multiple');
  }

  /**
   * Gets the value of <code>translations</code> property.
   * A collection of translated resources from the translation bundle, or null if this component has no resources.
   * @return The value of <code>translations</code> property.
   *
   */
  public getTranslations(): Promise<object | null> {
    return this.getProperty<object | null>('translations');
  }
}
