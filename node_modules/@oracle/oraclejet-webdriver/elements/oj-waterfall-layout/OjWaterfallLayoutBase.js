"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OjWaterfallLayoutBase = void 0;
const __1 = require("../");
/**
 * This is the base class for oj-waterfall-layout WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjWaterfallLayout.ts.
 */
class OjWaterfallLayoutBase extends __1.OjWebElement {
    /**
     * Gets the value of <code>scrollPolicy</code> property.
     * Specifies how data are fetched as user scrolls towards the bottom of the grid.
     * @return The value of <code>scrollPolicy</code> property.
     *
     */
    getScrollPolicy() {
        return this.getProperty('scrollPolicy');
    }
    /**
     * Gets the value of <code>scrollPolicyOptions</code> property.
     * Specifies fetch options for scrolling behaviors that trigger data fetches. See the Help documentation for more information.
     * @return The value of <code>scrollPolicyOptions</code> property.
     *
     */
    getScrollPolicyOptions() {
        return this.getProperty('scrollPolicyOptions');
    }
    /**
     * Sets the value of <code>scrollPosition</code> property.
     * Specifies the current scroll position of the WaterfallLayout. See the Help documentation for more information.
     * @param scrollPosition The value to set for <code>scrollPosition</code>
     *
     */
    changeScrollPosition(scrollPosition) {
        return this.setProperty('scrollPosition', scrollPosition);
    }
    /**
     * Gets the value of <code>scrollPosition</code> property.
     * Specifies the current scroll position of the WaterfallLayout. See the Help documentation for more information.
     * @return The value of <code>scrollPosition</code> property.
     *
     */
    getScrollPosition() {
        return this.getProperty('scrollPosition');
    }
}
exports.OjWaterfallLayoutBase = OjWaterfallLayoutBase;
//# sourceMappingURL=OjWaterfallLayoutBase.js.map