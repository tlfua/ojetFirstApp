import { OjWebElement } from '../';

/**
 * This is the base class for oj-collapsible WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjCollapsible.ts.
 */
export class OjCollapsibleBase extends OjWebElement {
  /**
   * Gets the value of <code>disabled</code> property.
   * Disables the collapsible if set to true.
   * @return The value of <code>disabled</code> property.
   *
   */
  public getDisabled(): Promise<boolean> {
    return this.getProperty<boolean>('disabled');
  }

  /**
   * Gets the value of <code>expandArea</code> property.
   * Where in the header to click to toggle disclosure.
   * @return The value of <code>expandArea</code> property.
   * @deprecated Since 14.0.0. The expand-area attribute should no longer be used and will be removed in the future. A click anywhere in the header area will toggle the disclosure (current default setting).
   */
  public getExpandArea(): Promise<string> {
    return this.getProperty<string>('expandArea');
  }

  /**
   * Gets the value of <code>expanded</code> property.
   * Specifies if the content is expanded.
   * @return The value of <code>expanded</code> property.
   *
   */
  public getExpanded(): Promise<boolean> {
    return this.getProperty<boolean>('expanded');
  }

  /**
   * Gets the value of <code>translations</code> property.
   * A collection of translated resources from the translation bundle, or null if this component has no resources.
   * @return The value of <code>translations</code> property.
   *
   */
  public getTranslations(): Promise<object | null> {
    return this.getProperty<object | null>('translations');
  }
}
