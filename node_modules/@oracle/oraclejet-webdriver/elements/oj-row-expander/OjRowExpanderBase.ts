import { OjWebElement } from '../';

/**
 * This is the base class for oj-row-expander WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjRowExpander.ts.
 */
export class OjRowExpanderBase extends OjWebElement {
  /**
   * Gets the value of <code>context</code> property.
   * The context object obtained from the column renderer (Table) or cell renderer (DataGrid)
   * @return The value of <code>context</code> property.
   *
   */
  public getContext(): Promise<object> {
    return this.getProperty<object>('context');
  }

  /**
   * Sets the value of <code>expanded</code> property.
   * Specifies if the RowExpander is expanded.
   * @param expanded The value to set for <code>expanded</code>
   * @deprecated Since 7.0.0. The source of truth for expansion is the data source key set.
   */
  public changeExpanded(expanded: boolean | null): Promise<void> {
    return this.setProperty<boolean | null>('expanded', expanded);
  }

  /**
   * Gets the value of <code>expanded</code> property.
   * Specifies if the RowExpander is expanded.
   * @return The value of <code>expanded</code> property.
   * @deprecated Since 7.0.0. The source of truth for expansion is the data source key set.
   */
  public getExpanded(): Promise<boolean | null> {
    return this.getProperty<boolean | null>('expanded');
  }

  /**
   * Gets the value of <code>translations</code> property.
   * A collection of translated resources from the translation bundle, or null if this component has no resources.
   * @return The value of <code>translations</code> property.
   *
   */
  public getTranslations(): Promise<Translations | null> {
    return this.getProperty<Translations | null>('translations');
  }
}
export interface Translations {
  /**
   * Provides properties to customize the accessible context level of the expanded or collapsed row.
   */
  accessibleLevelDescription: string;
  /**
   * Provides properties to customize the accessible context when a row is collapsed.
   */
  accessibleRowCollapsed: string;
  /**
   * Provides properties to customize the accessible context level and index of the row.
   */
  accessibleRowDescription: string;
  /**
   * Provides properties to customize the accessible context when a row is expanded.
   */
  accessibleRowExpanded: string;
  /**
   * Provides properties to customize the accessible state of a collapsed row.
   */
  accessibleStateCollapsed: string;
  /**
   * Provides properties to customize the accessible state of an expanded row.
   */
  accessibleStateExpanded: string;
}
