"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OjStreamList = void 0;
const OjStreamListBase_1 = require("./OjStreamListBase");
const selenium_webdriver_1 = require("selenium-webdriver");
/**
 * The component WebElement for [oj-stream-list](../../jsdocs/oj.ojStreamList.html).
 * Do not instantiate this class directly, instead, use
 * [ojStreamList](../modules/elements.html#ojStreamList).
 */
class OjStreamList extends OjStreamListBase_1.OjStreamListBase {
    // Put overrides here
    async findItem(itemLocator) {
        const items = await this.findElements(selenium_webdriver_1.By.css('.oj-stream-list-item, .oj-stream-list-group'));
        await this.whenBusyContextReady();
        let item = await this.getDriver().executeAsyncScript(`
    let el;
    var element = arguments[0];
    var key = arguments[1].key;
    var parentKey = arguments[1].parentKey;
    var items = arguments[2];
    var done = arguments[3];
    require([\'ojs/ojcore\'], function (oj) {
      var getParentKey = function (item) {
        while (item) {
          if (item.classList.contains('oj-stream-list-group')) {
            return item.dataset.ojKey;
          }
          item = item.previousElementSibling;
        }
        return null;
      }
      for (let i = 0; i < items.length; i++) {
        let item = items[i];
        let itemKey = item.dataset.ojKey;
        if (itemKey == key) {
          if (parentKey == null || getParentKey(item) == parentKey) {
            el = item;
          }
        }
      };
      done(el);
    });`, this, itemLocator, items);
        return item;
    }
    async findGroup(itemLocator) {
        const items = await this.findElements(selenium_webdriver_1.By.css('.oj-stream-list-group'));
        await this.whenBusyContextReady();
        let group = await this.getDriver().executeAsyncScript(`
    let el;
    let index;
    var element = arguments[0];
    var key = arguments[1].key;
    var items = arguments[2];
    var done = arguments[3];
    require([\'ojs/ojcore\'], function (oj) {
      for (let i = 0; i < items.length; i++) {
        let item = items[i];
        let itemKey = item.dataset.ojKey;
        if (itemKey == key) {
          index = i;
          el = item;
        }
      };
      done(el);
    });`, this, itemLocator, items);
        return group;
    }
}
exports.OjStreamList = OjStreamList;
//# sourceMappingURL=OjStreamList.js.map