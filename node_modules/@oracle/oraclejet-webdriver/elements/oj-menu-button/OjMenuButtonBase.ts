import { OjWebElement } from '../';

/**
 * This is the base class for oj-menu-button WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjMenuButton.ts.
 */
export class OjMenuButtonBase extends OjWebElement {
  /**
   * Gets the value of <code>chroming</code> property.
   * Indicates in what states the button has chrome (background and border).
   * @return The value of <code>chroming</code> property.
   *
   */
  public getChroming(): Promise<string> {
    return this.getProperty<string>('chroming');
  }

  /**
   * Gets the value of <code>disabled</code> property.
   * Specifies that the button element should be disabled.
   * @return The value of <code>disabled</code> property.
   *
   */
  public getDisabled(): Promise<boolean> {
    return this.getProperty<boolean>('disabled');
  }

  /**
   * Gets the value of <code>display</code> property.
   * Specifies whether the button displays label and icons, or just icons.
   * @return The value of <code>display</code> property.
   *
   */
  public getDisplay(): Promise<string> {
    return this.getProperty<string>('display');
  }

  /**
   * Gets the value of <code>label</code> property.
   * Text to show in the button. The label attribute takes precedence over the default DOM slot.
   * @return The value of <code>label</code> property.
   *
   */
  public getLabel(): Promise<string> {
    return this.getProperty<string>('label');
  }

  /**
   * Gets the value of <code>translations</code> property.
   * A collection of translated resources from the translation bundle, or null if this component has no resources.
   * @return The value of <code>translations</code> property.
   *
   */
  public getTranslations(): Promise<object | null> {
    return this.getProperty<object | null>('translations');
  }
}
