import { OjWebElement } from '../';

/**
 * This is the base class for oj-drawer-layout WebElement, and is generated from the
 * component's metadata. Do not modify these contents since they'll be replaced
 * during the next generation.
 * Put overrides into the WebElements's subclass, OjDrawerLayout.ts.
 */
export class OjDrawerLayoutBase extends OjWebElement {
  /**
   * Sets the value of <code>startOpened</code> property.
   * Specifies the 'opened' state of the Start drawer.
   * @param startOpened The value to set for <code>startOpened</code>
   *
   */
  public changeStartOpened(startOpened: boolean): Promise<void> {
    return this.setProperty<boolean>('startOpened', startOpened);
  }

  /**
   * Gets the value of <code>startOpened</code> property.
   * Specifies the 'opened' state of the Start drawer.
   * @return The value of <code>startOpened</code> property.
   *
   */
  public getStartOpened(): Promise<boolean> {
    return this.getProperty<boolean>('startOpened');
  }

  /**
   * Sets the value of <code>endOpened</code> property.
   * Specifies the 'opened' state of the End drawer.
   * @param endOpened The value to set for <code>endOpened</code>
   *
   */
  public changeEndOpened(endOpened: boolean): Promise<void> {
    return this.setProperty<boolean>('endOpened', endOpened);
  }

  /**
   * Gets the value of <code>endOpened</code> property.
   * Specifies the 'opened' state of the End drawer.
   * @return The value of <code>endOpened</code> property.
   *
   */
  public getEndOpened(): Promise<boolean> {
    return this.getProperty<boolean>('endOpened');
  }

  /**
   * Sets the value of <code>bottomOpened</code> property.
   * Specifies the 'opened' state of the Bottom drawer.
   * @param bottomOpened The value to set for <code>bottomOpened</code>
   *
   */
  public changeBottomOpened(bottomOpened: boolean): Promise<void> {
    return this.setProperty<boolean>('bottomOpened', bottomOpened);
  }

  /**
   * Gets the value of <code>bottomOpened</code> property.
   * Specifies the 'opened' state of the Bottom drawer.
   * @return The value of <code>bottomOpened</code> property.
   *
   */
  public getBottomOpened(): Promise<boolean> {
    return this.getProperty<boolean>('bottomOpened');
  }

  /**
   * Gets the value of <code>startDisplay</code> property.
   * Specifies the display mode of the Start drawer.
   * @return The value of <code>startDisplay</code> property.
   *
   */
  public getStartDisplay(): Promise<string> {
    return this.getProperty<string>('startDisplay');
  }

  /**
   * Gets the value of <code>endDisplay</code> property.
   * Specifies the display mode of the End drawer.
   * @return The value of <code>endDisplay</code> property.
   *
   */
  public getEndDisplay(): Promise<string> {
    return this.getProperty<string>('endDisplay');
  }

  /**
   * Gets the value of <code>bottomDisplay</code> property.
   * Specifies the display mode of the Bottom drawer.
   * @return The value of <code>bottomDisplay</code> property.
   *
   */
  public getBottomDisplay(): Promise<string> {
    return this.getProperty<string>('bottomDisplay');
  }
}
