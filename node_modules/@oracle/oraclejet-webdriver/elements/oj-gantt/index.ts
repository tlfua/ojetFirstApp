import { By } from 'selenium-webdriver';
import { DriverLike, register } from '../../';
import { OjGantt } from './OjGantt';
export { OjGantt };

/**
 * Retrieve an instance of [[OjGantt]].
 * @example
 * ```javascript
 * import { ojGantt } from '@oracle/oraclejet-webdriver/elements';
 * const el = await ojGantt(driver, By.id('my-oj-gantt'));
 * ```
 * @param driver A WebDriver/WebElement instance from where the element will be
 * searched. If WebDriver is passed, the element will be searched globally in the
 * document. If WebElement is passed, the search will be relative to this element.
 * @param by The locator with which to find the element
 */
export async function ojGantt(driver: DriverLike, by: By): Promise<OjGantt> {
  const webEl = await driver.findElement(by);
  // Check that the element is of type OjGantt
  if (!(webEl instanceof OjGantt)) {
    const tagName = await webEl.getTagName();
    let supplemental = '';
    if (tagName === OjGantt.name) {
      supplemental = 'You likely have multiple installations of this package.';
    }
    throw Error(
      `ojGantt(${by}) created ${webEl.constructor.name} for <${tagName}>, but expected ${OjGantt.name}. ${supplemental}`
    );
  }
  return webEl;
}

register('oj-gantt', OjGantt);
