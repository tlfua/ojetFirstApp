{"version":3,"file":"UNSAFE_useFormFieldContextProps.js","sources":["../../../src/hooks/UNSAFE_useFormFieldContextProps/useFormFieldContextProps.ts"],"sourcesContent":["import { useMemo } from 'preact/hooks';\nimport { FormFieldContextProps } from '../UNSAFE_useFormFieldContext';\n\ntype UseTextFieldProps<V> = {\n  hasValue?: boolean;\n  isDisabled?: boolean;\n  isFocused?: boolean;\n  isInputFocused?: boolean;\n  isLoading?: boolean;\n  isReadonly?: boolean;\n  value?: V;\n};\n\n/**\n * A custom hook to determine props to set FormFieldContext\n */\nexport function useFormFieldContextProps<V>({\n  hasValue,\n  isDisabled,\n  isFocused,\n  isInputFocused,\n  isLoading,\n  isReadonly,\n  value\n}: UseTextFieldProps<V>) {\n  return useMemo<FormFieldContextProps>(() => {\n    return isReadonly\n      ? {\n          hasValue,\n          isFocused,\n          isInputFocused,\n          isLoading,\n          isReadonly: true\n        }\n      : isDisabled\n      ? {\n          hasValue,\n          isDisabled: true,\n          isLoading\n        }\n      : {\n          hasValue,\n          isFocused,\n          isInputFocused,\n          isLoading\n        };\n  }, [hasValue, isDisabled, isFocused, isInputFocused, isLoading, isReadonly, value]);\n}\n"],"names":["hasValue","isDisabled","isFocused","isInputFocused","isLoading","isReadonly","value","useMemo"],"mappings":"mGAgB4CA,SAC1CA,EAAQC,WACRA,EAAUC,UACVA,EAASC,eACTA,EAAcC,UACdA,EAASC,WACTA,EAAUC,MACVA,IAEA,OAAOC,EAAOA,SAAwB,IAC7BF,EACH,CACEL,WACAE,YACAC,iBACAC,YACAC,YAAY,GAEdJ,EACA,CACED,WACAC,YAAY,EACZG,aAEF,CACEJ,WACAE,YACAC,iBACAC,cAEL,CAACJ,EAAUC,EAAYC,EAAWC,EAAgBC,EAAWC,EAAYC,GAC9E"}