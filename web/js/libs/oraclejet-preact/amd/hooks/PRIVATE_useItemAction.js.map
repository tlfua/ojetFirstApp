{"version":3,"file":"PRIVATE_useItemAction.js","sources":["../../../src/hooks/PRIVATE_useItemAction/useItemAction.tsx"],"sourcesContent":["import { useCallback } from 'preact/hooks';\nimport { DataState, ItemActionDetail, ListItemContext, Metadata } from '../../UNSAFE_Collection';\n\nimport { keyExtractor } from '../../utils/PRIVATE_collectionUtils';\n\nexport const useItemAction = <K extends string | number, D>(\n  currentKey: K | undefined,\n  dataState: DataState<K, D> | null,\n  onItemAction: ((detail: ItemActionDetail<K, D>) => void) | undefined,\n  itemSelector: string,\n  allowSpacebar: boolean\n) => {\n  if (!dataState || !onItemAction) {\n    return {};\n  }\n\n  return {\n    onClick: useCallback(\n      (event: MouseEvent) => {\n        const key = keyExtractor(event.target as HTMLElement, itemSelector) as K;\n        if (handleItemAction(key, dataState, onItemAction)) {\n          event.stopPropagation();\n        }\n      },\n      [dataState, onItemAction]\n    ),\n    onKeyDown: useCallback(\n      (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          handleItemAction(currentKey, dataState, onItemAction);\n        } else if (allowSpacebar && event.key === ' ') {\n          handleItemAction(currentKey, dataState, onItemAction);\n          event.preventDefault();\n        }\n      },\n      [dataState, onItemAction, currentKey]\n    )\n  };\n};\n\nconst handleItemAction = <K, D>(\n  key: K | undefined,\n  dataState: DataState<K, D>,\n  onItemAction: (detail: ItemActionDetail<K, D>) => void\n) => {\n  if (key !== undefined) {\n    const context = findItemContext(key, dataState);\n    context && onItemAction({ context });\n    return context !== undefined;\n  }\n  return false;\n};\n\n// returns a ListItemContext based on key\nconst findItemContext = <K, D>(\n  key: K,\n  dataState: DataState<K, D>\n): ListItemContext<K, D> | undefined => {\n  const index = dataState?.data?.findIndex((d) => d.metadata.key === key) ?? -1;\n  if (index > -1) {\n    const context: ListItemContext<K, D> = {\n      index: index + (dataState?.offset || 0),\n      data: dataState?.data[index].data as D,\n      metadata: dataState?.data[index].metadata as Metadata<K>\n    };\n    return context;\n  }\n  return undefined;\n};\n"],"names":["handleItemAction","key","dataState","onItemAction","undefined","context","findItemContext","index","data","findIndex","d","metadata","offset","currentKey","itemSelector","allowSpacebar","onClick","useCallback","event","keyExtractor","target","stopPropagation","onKeyDown","preventDefault"],"mappings":"yLAKO,MAmCDA,EAAmB,CACvBC,EACAC,EACAC,KAEA,QAAYC,IAARH,EAAmB,CACrB,MAAMI,EAAUC,EAAgBL,EAAKC,GAErC,OADAG,GAAWF,EAAa,CAAEE,iBACPD,IAAZC,CACR,CACD,OAAO,CAAK,EAIRC,EAAkB,CACtBL,EACAC,KAEA,MAAMK,EAAQL,GAAWM,MAAMC,WAAWC,GAAMA,EAAEC,SAASV,MAAQA,MAAS,EAC5E,GAAIM,GAAS,EAAG,CAMd,MALuC,CACrCA,MAAOA,GAASL,GAAWU,QAAU,GACrCJ,KAAMN,GAAWM,KAAKD,GAAOC,KAC7BG,SAAUT,GAAWM,KAAKD,GAAOI,SAGpC,CACe,kBA9DW,CAC3BE,EACAX,EACAC,EACAW,EACAC,IAEKb,GAAcC,EAIZ,CACLa,QAASC,EAAAA,aACNC,IACC,MAAMjB,EAAMkB,EAAYA,aAACD,EAAME,OAAuBN,GAClDd,EAAiBC,EAAKC,EAAWC,IACnCe,EAAMG,iBACP,GAEH,CAACnB,EAAWC,IAEdmB,UAAWL,EAAAA,aACRC,IACmB,UAAdA,EAAMjB,IACRD,EAAiBa,EAAYX,EAAWC,GAC/BY,GAA+B,MAAdG,EAAMjB,MAChCD,EAAiBa,EAAYX,EAAWC,GACxCe,EAAMK,iBACP,GAEH,CAACrB,EAAWC,EAAcU,KAtBrB"}