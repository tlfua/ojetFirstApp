{"version":3,"file":"PRIVATE_useSize.js","sources":["../../../src/hooks/PRIVATE_useSize/useSize.ts"],"sourcesContent":["import { RefObject } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { useResizeObserver } from '../PRIVATE_useResizeObserver';\n\nconst useSize = (\n  ref: RefObject<Element>,\n  resizeObserverOptions: ResizeObserverOptions = { box: 'content-box' }\n) => {\n  const [size, setSize] = useState<{ width: number; height: number }>();\n\n  useResizeObserver(\n    ref,\n    (entry) => {\n      const boxSize =\n        resizeObserverOptions.box === 'border-box' ? entry.borderBoxSize : entry.contentBoxSize;\n      const newWidth = boxSize[0].inlineSize;\n      const newHeight = boxSize[0].blockSize;\n      setSize({ width: newWidth, height: newHeight });\n    },\n    resizeObserverOptions\n  );\n\n  return size;\n};\n\nexport { useSize };\n"],"names":["ref","resizeObserverOptions","box","size","setSize","useState","useResizeObserver","entry","boxSize","borderBoxSize","contentBoxSize","newWidth","inlineSize","newHeight","blockSize","width","height"],"mappings":"wGAIgB,CACdA,EACAC,EAA+C,CAAEC,IAAK,kBAEtD,MAAOC,EAAMC,GAAWC,EAAQA,WAchC,OAZAC,oBACEN,GACCO,IACC,MAAMC,EAC0B,eAA9BP,EAAsBC,IAAuBK,EAAME,cAAgBF,EAAMG,eACrEC,EAAWH,EAAQ,GAAGI,WACtBC,EAAYL,EAAQ,GAAGM,UAC7BV,EAAQ,CAAEW,MAAOJ,EAAUK,OAAQH,GAAY,GAEjDZ,GAGKE,CAAI"}