{"version":3,"file":"PRIVATE_useDvtMeterEvents.js","sources":["../../../src/hooks/PRIVATE_useDvtMeterEvents/events.ts","../../../src/hooks/PRIVATE_useDvtMeterEvents/useKeyboardEvents.ts","../../../src/hooks/PRIVATE_useDvtMeterEvents/useMeterDatatip.tsx","../../../src/hooks/PRIVATE_useDvtMeterEvents/usePointerEvents.ts"],"sourcesContent":["import type { MutableRef } from 'preact/hooks';\nimport { InputDetail } from '../../utils/UNSAFE_meterTypes';\n\nexport const handleInput = (\n  inputValue: number | undefined,\n  currentInput: MutableRef<number | undefined>,\n  onInput?: (detail: InputDetail) => void\n) => {\n  onInput?.({ value: inputValue } as InputDetail);\n  currentInput.current = inputValue;\n};\n\nexport const cancelEvent = (event: Event) => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { MutableRef } from 'preact/hooks';\nimport { useUser } from '../UNSAFE_useUser';\nimport { handleInput, cancelEvent } from './events';\nimport { CommitDetail, InputDetail } from '../../utils/UNSAFE_meterTypes';\n\nexport function useKeyboardEvents(\n  value: number,\n  min: number,\n  max: number,\n  step: number,\n  currentInputRef: MutableRef<number | undefined>,\n  onCommit?: (detail: CommitDetail) => void,\n  onInput?: (detail: InputDetail) => void\n) {\n  const { direction } = useUser();\n\n  const isRtl = direction === 'rtl';\n\n  const keyDownHandler = (event: KeyboardEvent) => {\n    const key = event.key;\n\n    switch (key) {\n      case 'Tab':\n        return;\n      case 'ArrowDown':\n        handleInput(Math.max(min, value - step), currentInputRef, onInput);\n        cancelEvent(event);\n        break;\n      case 'ArrowUp':\n        handleInput(Math.min(max, value + step), currentInputRef, onInput);\n        cancelEvent(event);\n        break;\n      case 'ArrowLeft': {\n        const inputValue = isRtl ? Math.min(max, value + step) : Math.max(min, value - step);\n        handleInput(inputValue, currentInputRef, onInput);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowRight': {\n        const inputValue = isRtl ? Math.max(min, value - step) : Math.min(max, value + step);\n        handleInput(inputValue, currentInputRef, onInput);\n        cancelEvent(event);\n        break;\n      }\n    }\n  };\n\n  const keyUpHandler = (event: KeyboardEvent) => {\n    const key = event.key;\n\n    switch (key) {\n      case 'Enter':\n        onCommit?.({ value: value } as CommitDetail);\n        cancelEvent(event);\n        break;\n      case 'Tab':\n        handleInput(value, currentInputRef, onInput);\n        cancelEvent(event);\n        break;\n      case 'Home':\n        handleInput(min, currentInputRef, onInput);\n        cancelEvent(event);\n        break;\n      case 'End':\n        handleInput(max, currentInputRef, onInput);\n        cancelEvent(event);\n        break;\n    }\n  };\n\n  return {\n    onKeyUp: keyUpHandler,\n    onKeyDown: keyDownHandler\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useState } from 'preact/hooks';\nimport { useTooltipControlled } from '../UNSAFE_useTooltip';\n\nexport function useMeterDatatip(value: number, datatip?: string | null, ariaDescribedBy?: string) {\n  const datatipText = datatip === null ? '' : datatip === undefined ? `${value}` : datatip;\n  const [isDatatipOpen, setDatatipOpen] = useState<boolean>(false);\n  const { tooltipContent, tooltipProps } = useTooltipControlled({\n    text: datatipText,\n    isOpen: isDatatipOpen,\n    position: 'top',\n    isDisabled: datatip === null,\n    anchor: { x: 'pointer', y: 'pointer' },\n    variant: 'datatip',\n    offset: {\n      mainAxis: 8,\n      crossAxis: 0\n    },\n    onToggle: ({ value }) => setDatatipOpen(value)\n  });\n\n  tooltipProps['aria-describedby'] = [ariaDescribedBy, tooltipProps['aria-describedby']]\n    .filter(Boolean)\n    .join(' ');\n\n  return { datatipContent: tooltipContent, datatipProps: tooltipProps };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { MutableRef, Ref, useRef } from 'preact/hooks';\nimport { handleInput } from './events';\nimport { CommitDetail, InputDetail } from '../../utils/UNSAFE_meterTypes';\n\ntype getValueFromEvent = (event: PointerEvent) => number | undefined;\n\nexport function usePointerEvents(\n  value: number | undefined,\n  getValue: getValueFromEvent,\n  targetRef: Ref<HTMLDivElement>,\n  currentInputRef: MutableRef<number | undefined>,\n  onCommit?: (detail: CommitDetail) => void,\n  onInput?: (detail: InputDetail) => void\n) {\n  const isPointerDown = useRef<boolean>(false);\n\n  const pointerUpHandler = (event: PointerEvent) => {\n    isPointerDown.current = false;\n    const val = getValue(event);\n    if (val !== undefined) {\n      onCommit?.({ value: val } as CommitDetail);\n    }\n  };\n\n  const hoverHandler = (event: PointerEvent) => {\n    if (isPointerDown.current) {\n      const val = getValue(event);\n      if (val !== undefined && val != currentInputRef.current) {\n        handleInput(val, currentInputRef, onInput);\n      }\n    }\n  };\n\n  const pointerDownHandler = (event: PointerEvent) => {\n    isPointerDown.current = true;\n    targetRef.current?.setPointerCapture(event.pointerId);\n    const val = getValue(event);\n    if (val !== undefined && val != currentInputRef.current) {\n      handleInput(val, currentInputRef, onInput);\n    }\n  };\n\n  const blurHandler = () => {\n    isPointerDown.current = false;\n    onCommit?.({ value: value } as CommitDetail);\n  };\n\n  return {\n    onPointerUp: pointerUpHandler,\n    onBlur: blurHandler,\n    onPointerMove: hoverHandler,\n    onPointerDown: pointerDownHandler\n  };\n}\n"],"names":["handleInput","inputValue","currentInput","onInput","value","current","cancelEvent","event","preventDefault","stopPropagation","min","max","step","currentInputRef","onCommit","direction","useUser","isRtl","onKeyUp","key","onKeyDown","Math","datatip","ariaDescribedBy","datatipText","undefined","isDatatipOpen","setDatatipOpen","useState","tooltipContent","tooltipProps","useTooltipControlled","text","isOpen","position","isDisabled","anchor","x","y","variant","offset","mainAxis","crossAxis","onToggle","filter","Boolean","join","datatipContent","datatipProps","getValue","targetRef","isPointerDown","useRef","onPointerUp","val","onBlur","onPointerMove","onPointerDown","setPointerCapture","pointerId"],"mappings":"ggEAGO,MAAMA,GAAc,CACzBC,EACAC,EACAC,KAEAA,IAAU,CAAEC,MAAOH,IACnBC,EAAaG,QAAUJ,CAAU,EAGtBK,GAAeC,IAC1BA,EAAMC,iBACND,EAAME,iBAAiB,sBCDT,SACdL,EACAM,EACAC,EACAC,EACAC,EACAC,EACAX,GAEA,MAAMY,UAAEA,GAAcC,EAAAA,UAEhBC,EAAsB,QAAdF,EAsDd,MAAO,CACLG,QAxBoBX,IAGpB,OAFYA,EAAMY,KAGhB,IAAK,QACHL,IAAW,CAAEV,MAAOA,IACpBE,GAAYC,GACZ,MACF,IAAK,MACHP,GAAYI,EAAOS,EAAiBV,GACpCG,GAAYC,GACZ,MACF,IAAK,OACHP,GAAYU,EAAKG,EAAiBV,GAClCG,GAAYC,GACZ,MACF,IAAK,MACHP,GAAYW,EAAKE,EAAiBV,GAClCG,GAAYC,GAEf,EAKDa,UAtDsBb,IAGtB,OAFYA,EAAMY,KAGhB,IAAK,MACH,OACF,IAAK,YACHnB,GAAYqB,KAAKV,IAAID,EAAKN,EAAQQ,GAAOC,EAAiBV,GAC1DG,GAAYC,GACZ,MACF,IAAK,UACHP,GAAYqB,KAAKX,IAAIC,EAAKP,EAAQQ,GAAOC,EAAiBV,GAC1DG,GAAYC,GACZ,MACF,IAAK,YAAa,CAChB,MAAMN,EAAagB,EAAQI,KAAKX,IAAIC,EAAKP,EAAQQ,GAAQS,KAAKV,IAAID,EAAKN,EAAQQ,GAC/EZ,GAAYC,EAAYY,EAAiBV,GACzCG,GAAYC,GACZ,KACD,CACD,IAAK,aAAc,CACjB,MAAMN,EAAagB,EAAQI,KAAKV,IAAID,EAAKN,EAAQQ,GAAQS,KAAKX,IAAIC,EAAKP,EAAQQ,GAC/EZ,GAAYC,EAAYY,EAAiBV,GACzCG,GAAYC,GACZ,KACD,EACF,EA8BL,6BCvEgCH,EAAekB,EAAyBC,GACtE,MAAMC,EAA0B,OAAZF,EAAmB,QAAiBG,IAAZH,EAAwB,GAAGlB,IAAUkB,GAC1EI,EAAeC,GAAkBC,EAAQA,UAAU,IACpDC,eAAEA,EAAcC,aAAEA,GAAiBC,uBAAqB,CAC5DC,KAAMR,EACNS,OAAQP,EACRQ,SAAU,MACVC,WAAwB,OAAZb,EACZc,OAAQ,CAAEC,EAAG,UAAWC,EAAG,WAC3BC,QAAS,UACTC,OAAQ,CACNC,SAAU,EACVC,UAAW,GAEbC,SAAU,EAAGvC,WAAYuB,EAAevB,KAO1C,OAJA0B,EAAa,oBAAsB,CAACP,EAAiBO,EAAa,qBAC/Dc,OAAOC,SACPC,KAAK,KAED,CAAEC,eAAgBlB,EAAgBmB,aAAclB,EACzD,qBCnBgB,SACd1B,EACA6C,EACAC,EACArC,EACAC,EACAX,GAEA,MAAMgD,EAAgBC,UAAgB,GAiCtC,MAAO,CACLC,YAhCwB9C,IACxB4C,EAAc9C,SAAU,EACxB,MAAMiD,EAAML,EAAS1C,QACTkB,IAAR6B,GACFxC,IAAW,CAAEV,MAAOkD,GACrB,EA4BDC,OAPkB,KAClBJ,EAAc9C,SAAU,EACxBS,IAAW,CAAEV,MAAOA,GAAwB,EAM5CoD,cA1BoBjD,IACpB,GAAI4C,EAAc9C,QAAS,CACzB,MAAMiD,EAAML,EAAS1C,QACTkB,IAAR6B,GAAqBA,GAAOzC,EAAgBR,SAC9CL,GAAYsD,EAAKzC,EAAiBV,EAErC,GAqBDsD,cAlB0BlD,IAC1B4C,EAAc9C,SAAU,EACxB6C,EAAU7C,SAASqD,kBAAkBnD,EAAMoD,WAC3C,MAAML,EAAML,EAAS1C,QACTkB,IAAR6B,GAAqBA,GAAOzC,EAAgBR,SAC9CL,GAAYsD,EAAKzC,EAAiBV,EACnC,EAcL"}