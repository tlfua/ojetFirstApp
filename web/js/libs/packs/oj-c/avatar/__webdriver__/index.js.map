{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AACA,mEAAmE;AACnE,uDAAsD;AAC7C,iGADA,mCAAgB,OACA;AAEzB;;;;;;;;;;;GAWG;AACI,KAAK,UAAU,UAAU,CAAC,MAAkB,EAAE,EAAM;IACzD,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAC3C,qDAAqD;IACrD,IAAI,CAAC,CAAC,KAAK,YAAY,mCAAgB,CAAC,EAAE;QACxC,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,UAAU,EAAE,CAAC;QACzC,MAAM,KAAK,CACT,cAAc,EAAE,aAAa,KAAK,CAAC,WAAW,CAAC,IAAI,SAAS,OAAO,mBAAmB,mCAAgB,CAAC,IAAI,EAAE,CAC9G,CAAC;KACH;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAVD,gCAUC;AAED,IAAA,8BAAQ,EAAC,aAAa,EAAE,mCAAgB,CAAC,CAAC","sourcesContent":["import { By } from 'selenium-webdriver';\nimport { DriverLike, register } from '@oracle/oraclejet-webdriver';\nimport { AvatarWebElement } from './AvatarWebElement';\nexport { AvatarWebElement };\n\n/**\n * Retrieve an instance of [[AvatarWebElement]].\n * @example\n * ```javascript\n * import { findAvatar } from '@oracle/oraclejet-core-pack/webdriver';\n * const el = await findAvatar(driver, By.id('my-oj-c-avatar'));\n * ```\n * @param driver A WebDriver/WebElement instance from where the element will be\n * searched. If WebDriver is passed, the element will be searched globally in the\n * document. If WebElement is passed, the search will be relative to this element.\n * @param by The locator with which to find the element\n */\nexport async function findAvatar(driver: DriverLike, by: By): Promise<AvatarWebElement> {\n  const webEl = await driver.findElement(by);\n  // Check that the element is of type AvatarWebElement\n  if (!(webEl instanceof AvatarWebElement)) {\n    const tagName = await webEl.getTagName();\n    throw Error(\n      `findAvatar(${by}) created ${webEl.constructor.name} for <${tagName}>, but expected ${AvatarWebElement.name}`\n    );\n  }\n  return webEl;\n}\n\nregister('oj-c-avatar', AvatarWebElement);\n"]}