{"version":3,"file":"ButtonWebElement.js","sourceRoot":"","sources":["ButtonWebElement.ts"],"names":[],"mappings":";;;AAAA,+DAA8D;AAC9D,yDAAwC;AAExC;;;;GAIG;AACH,MAAa,gBAAiB,SAAQ,2CAAoB;IACxD,qBAAqB;IAErB;;OAEG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,KAAK;QACT,kEAAkE;QAClE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED;;;;;OAKG;IACI,WAAW,CAAC,KAAa;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAS,OAAO,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAED;;;;;OAKG;IACI,cAAc,CAAC,QAAiB;QACrC,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,EAAE,QAAQ,CAAC,CAAC;IACzD,CAAC;IAED;;;;;OAKG;IACI,WAAW,CAAC,KAAsB;QACvC,OAAO,IAAI,CAAC,WAAW,CAAkB,OAAO,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED;;;;;OAKG;IACI,aAAa,CAAC,OAAe;QAClC,OAAO,IAAI,CAAC,WAAW,CAAS,SAAS,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED;;;;;OAKG;IACI,kBAAkB,CAAC,IAAY;QACpC,OAAO,IAAI,CAAC,WAAW,CAAS,MAAM,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAED;;;;;OAKG;IACI,UAAU,CAAC,IAAY;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAS,MAAM,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAED;;;;;OAKG;IACI,cAAc,CAAC,QAAgB;QACpC,OAAO,IAAI,CAAC,WAAW,CAAS,UAAU,EAAE,QAAQ,CAAC,CAAC;IACxD,CAAC;CACF;AAxFD,4CAwFC","sourcesContent":["import { ButtonWebElementBase } from './ButtonWebElementBase';\nimport { By } from 'selenium-webdriver';\n\n/**\n * The component WebElement for [oj-c-button](../../../oj-c/docs/oj.Button.html).\n * Do not instantiate this class directly, instead, use\n * [findButton](../modules.html#findButton).\n */\nexport class ButtonWebElement extends ButtonWebElementBase {\n  // Put overrides here\n\n  /**\n   * Perform a click on the button\n   */\n  doAction() {\n    return this.click();\n  }\n\n  /**\n   * Perform a click on the button\n   */\n  async click() {\n    // Find the <button> element to click so that it can receive focus\n    const button = await this.findElement(By.css('button'));\n    return button.click();\n  }\n\n  /**\n   * Sets the value of <code>label</code> property.\n   * Text to show in the button.\n   * @param label The value to set for <code>label</code>\n   * @deprecated Since 14.0.0. Do not use this method to change the button label. It will be removed in the next release.\n   */\n  public changeLabel(label: string): Promise<void> {\n    return this.setProperty<string>('label', label);\n  }\n\n  /**\n   * Sets the value of <code>disabled</code> property.\n   * Specifies that the button element should be disabled.\n   * @param disabled The value to set for <code>disabled</code>\n   * @deprecated Since 14.0.0. Do not use this method to disable the button. It will be removed in the next release.\n   */\n  public changeDisabled(disabled: boolean): Promise<void> {\n    return this.setProperty<boolean>('disabled', disabled);\n  }\n\n  /**\n   * Sets the value of <code>width</code> property.\n   * Specifies that the button style width\n   * @param width The value to set for <code>width</code>\n   * @deprecated Since 14.0.0. Do not use this method to change the button width. It will be removed in the next release.\n   */\n  public changeWidth(width: number | string): Promise<void> {\n    return this.setProperty<number | string>('width', width);\n  }\n\n  /**\n   * Sets the value of <code>display</code> property.\n   * Display just the label, the icons, or all. Label is used as tooltip and should be set in all cases.\n   * @param display The value to set for <code>display</code>\n   * @deprecated Since 14.0.0. Do not use this method to change the button display. It will be removed in the next release.\n   */\n  public changeDisplay(display: string): Promise<void> {\n    return this.setProperty<string>('display', display);\n  }\n\n  /**\n   * Sets the value of <code>size</code> property.\n   * Size of button\n   * @param size The value to set for <code>size</code>\n   * @deprecated Since 14.0.0. Do not use this method to change the button size. It will be removed in the next release.\n   */\n  public changeSizeProperty(size: string): Promise<void> {\n    return this.setProperty<string>('size', size);\n  }\n\n  /**\n   * Sets the value of <code>edge</code> property.\n   * Specifies whether the button is attached to an edge. For example setting edge='bottom' can be used to attach a button to the bottom of a card. The button is then stretched to 100% width, and borders adjusted.\n   * @param edge The value to set for <code>edge</code>\n   * @deprecated Since 14.0.0. Do not use this method to change the button edge. It will be removed in the next release.\n   */\n  public changeEdge(edge: string): Promise<void> {\n    return this.setProperty<string>('edge', edge);\n  }\n\n  /**\n   * Sets the value of <code>chroming</code> property.\n   * Indicates in what states the button has variants in background and border.\n   * @param chroming The value to set for <code>chroming</code>\n   * @deprecated Since 14.0.0. Do not use this method to change the button chroming. It will be removed in the next release.\n   */\n  public changeChroming(chroming: string): Promise<void> {\n    return this.setProperty<string>('chroming', chroming);\n  }\n}\n"]}